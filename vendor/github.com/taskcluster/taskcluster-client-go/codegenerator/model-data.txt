Generated: 1553538568
The following file is an auto-generated static dump of the API models at time of code generation.
It is provided here for reference purposes, but is not used by any code.

https://taskcluster-staging.net/references/auth/v1/api.json
===========================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Authentication API'
Description = 'Authentication related API end-points for Taskcluster and related
services. These API end-points are of interest if you wish to:
  * Authorize a request signed with Taskcluster credentials,
  * Manage clients and roles,
  * Inspect or audit clients and roles,
  * Gain access to various services guarded by this API.

Note that in this service "authentication" refers to validating the
correctness of the supplied credentials (that the caller posesses the
appropriate access token). This service does not provide any kind of user
authentication (identifying a particular person).

### Clients
The authentication service manages _clients_, at a high-level each client
consists of a `clientId`, an `accessToken`, scopes, and some metadata.
The `clientId` and `accessToken` can be used for authentication when
calling Taskcluster APIs.

The client's scopes control the client's access to Taskcluster resources.
The scopes are *expanded* by substituting roles, as defined below.

### Roles
A _role_ consists of a `roleId`, a set of scopes and a description.
Each role constitutes a simple _expansion rule_ that says if you have
the scope: `assume:<roleId>` you get the set of scopes the role has.
Think of the `assume:<roleId>` as a scope that allows a client to assume
a role.

As in scopes the `*` kleene star also have special meaning if it is
located at the end of a `roleId`. If you have a role with the following
`roleId`: `my-prefix*`, then any client which has a scope staring with
`assume:my-prefix` will be allowed to assume the role.

### Guarded Services
The authentication service also has API end-points for delegating access
to some guarded service such as AWS S3, or Azure Table Storage.
Generally, we add API end-points to this server when we wish to use
Taskcluster credentials to grant access to a third-party service used
by many Taskcluster components.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/clients/'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit prefix]'
    Entry Name        = 'listClients'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-clients-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#'
    Entry Title       = 'List Clients'
    Entry Description = 'Get a list of all clients.  With `prefix`, only clients for which
it is a prefix of the clientId are returned.

By default this end-point will try to return up to 1000 clients in one
request. But it **may return less, even none**.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `listClients` with the last `continuationToken` until you
get a result without a `continuationToken`.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'client'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/get-client-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#'
    Entry Title       = 'Get Client'
    Entry Description = 'Get information about a single client.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'createClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:create-client:<clientId>
* For scope in scopes each <scope>'
    Entry Input       = 'v1/create-client-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#'
    Entry Output      = 'v1/create-client-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#'
    Entry Title       = 'Create Client'
    Entry Description = 'Create a new client and get the `accessToken` for this client.
You should store the `accessToken` from this API call as there is no
other way to retrieve it.

If you loose the `accessToken` you can call `resetAccessToken` to reset
it, and a new `accessToken` will be returned, but you cannot retrieve the
current `accessToken`.

If a client with the same `clientId` already exists this operation will
fail. Use `updateClient` if you wish to update an existing client.

The caller's scopes must satisfy `scopes`.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>/reset'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'resetAccessToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:reset-access-token:<clientId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/create-client-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#'
    Entry Title       = 'Reset `accessToken`'
    Entry Description = 'Reset a clients `accessToken`, this will revoke the existing
`accessToken`, generate a new `accessToken` and return it from this
call.

There is no way to retrieve an existing `accessToken`, so if you loose it
you must reset the accessToken to acquire it again.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'updateClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:update-client:<clientId>
* For scope in scopesAdded each <scope>'
    Entry Input       = 'v1/create-client-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#'
    Entry Output      = 'v1/get-client-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#'
    Entry Title       = 'Update Client'
    Entry Description = 'Update an exisiting client. The `clientId` and `accessToken` cannot be
updated, but `scopes` can be modified.  The caller's scopes must
satisfy all scopes being added to the client in the update operation.
If no scopes are given in the request, the client's scopes remain
unchanged'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>/enable'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'enableClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:enable-client:<clientId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/get-client-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#'
    Entry Title       = 'Enable Client'
    Entry Description = 'Enable a client that was disabled with `disableClient`.  If the client
is already enabled, this does nothing.

This is typically used by identity providers to re-enable clients that
had been disabled when the corresponding identity's scopes changed.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/clients/<clientId>/disable'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'disableClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:disable-client:<clientId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/get-client-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#'
    Entry Title       = 'Disable Client'
    Entry Description = 'Disable a client.  If the client is already disabled, this does nothing.

This is typically used by identity providers to disable clients when the
corresponding identity's scopes no longer satisfy the client's scopes.'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/clients/<clientId>'
    Entry Args        = '[clientId]'
    Entry Query        = '[]'
    Entry Name        = 'deleteClient'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:delete-client:<clientId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Delete Client'
    Entry Description = 'Delete a client, please note that any roles related to this client must
be deleted independently.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/roles/'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'listRoles'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-roles-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/list-roles-response.json#'
    Entry Title       = 'List Roles'
    Entry Description = 'Get a list of all roles, each role object also includes the list of
scopes it expands to.'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/roleids/'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listRoleIds'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-role-ids-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#'
    Entry Title       = 'List Role IDs'
    Entry Description = 'If no limit is given, the roleIds of all roles are returned. Since this
list may become long, callers can use the `limit` and `continuationToken`
query arguments to page through the responses.'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/roles2/'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listRoles2'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-roles2-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#'
    Entry Title       = 'List Roles'
    Entry Description = 'If no limit is given, all roles are returned. Since this
list may become long, callers can use the `limit` and `continuationToken`
query arguments to page through the responses.'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'role'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/get-role-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#'
    Entry Title       = 'Get Role'
    Entry Description = 'Get information about a single role, including the set of scopes that the
role expands to.'
Entry 13    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'createRole'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:create-role:<roleId>
* For scope in scopes each <scope>'
    Entry Input       = 'v1/create-role-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#'
    Entry Output      = 'v1/get-role-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#'
    Entry Title       = 'Create Role'
    Entry Description = 'Create a new role.

The caller's scopes must satisfy the new role's scopes.

If there already exists a role with the same `roleId` this operation
will fail. Use `updateRole` to modify an existing role.

Creation of a role that will generate an infinite expansion will result
in an error response.'
Entry 14    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'updateRole'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* auth:update-role:<roleId>
* For scope in scopesAdded each <scope>'
    Entry Input       = 'v1/create-role-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#'
    Entry Output      = 'v1/get-role-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#'
    Entry Title       = 'Update Role'
    Entry Description = 'Update an existing role.

The caller's scopes must satisfy all of the new scopes being added, but
need not satisfy all of the role's existing scopes.

An update of a role that will generate an infinite expansion will result
in an error response.'
Entry 15    =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/roles/<roleId>'
    Entry Args        = '[roleId]'
    Entry Query        = '[]'
    Entry Name        = 'deleteRole'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:delete-role:<roleId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Delete Role'
    Entry Description = 'Delete a role. This operation will succeed regardless of whether or not
the role exists.'
Entry 16    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/scopes/expand'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'expandScopesGet'
    Entry Stability   = 'deprecated'
    Entry Scopes      = ''
    Entry Input       = 'v1/scopeset.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#'
    Entry Output      = 'v1/scopeset.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#'
    Entry Title       = 'Expand Scopes'
    Entry Description = 'Return an expanded copy of the given scopeset, with scopes implied by any
roles included.

This call uses the GET method with an HTTP body.  It remains only for
backward compatibility.'
Entry 17    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/scopes/expand'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'expandScopes'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = 'v1/scopeset.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#'
    Entry Output      = 'v1/scopeset.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#'
    Entry Title       = 'Expand Scopes'
    Entry Description = 'Return an expanded copy of the given scopeset, with scopes implied by any
roles included.'
Entry 18    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/scopes/current'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'currentScopes'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/scopeset.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#'
    Entry Title       = 'Get Current Scopes'
    Entry Description = 'Return the expanded scopes available in the request, taking into account all sources
of scopes and scope restrictions (temporary credentials, assumeScopes, client scopes,
and roles).'
Entry 19    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/aws/s3/<level>/<bucket>/<prefix>'
    Entry Args        = '[level bucket prefix]'
    Entry Query        = '[format]'
    Entry Name        = 'awsS3Credentials'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If levelIsReadOnly:
  Any of:
  - auth:aws-s3:read-only:<bucket>/<prefix>
  - auth:aws-s3:read-write:<bucket>/<prefix>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/aws-s3-credentials-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#'
    Entry Title       = 'Get Temporary Read/Write Credentials S3'
    Entry Description = 'Get temporary AWS credentials for `read-write` or `read-only` access to
a given `bucket` and `prefix` within that bucket.
The `level` parameter can be `read-write` or `read-only` and determines
which type of credentials are returned. Please note that the `level`
parameter is required in the scope guarding access.  The bucket name must
not contain `.`, as recommended by Amazon.

This method can only allow access to a whitelisted set of buckets.  To add
a bucket to that whitelist, contact the Taskcluster team, who will add it to
the appropriate IAM policy.  If the bucket is in a different AWS account, you
will also need to add a bucket policy allowing access from the Taskcluster
account.  That policy should look like this:

```js
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "allow-taskcluster-auth-to-delegate-access",
      "Effect": "Allow",
      "Principal": {
        "AWS": "arn:aws:iam::692406183521:root"
      },
      "Action": [
        "s3:ListBucket",
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject",
        "s3:GetBucketLocation"
      ],
      "Resource": [
        "arn:aws:s3:::<bucket>",
        "arn:aws:s3:::<bucket>/*"
      ]
    }
  ]
}
```

The credentials are set to expire after an hour, but this behavior is
subject to change. Hence, you should always read the `expires` property
from the response, if you intend to maintain active credentials in your
application.

Please note that your `prefix` may not start with slash `/`. Such a prefix
is allowed on S3, but we forbid it here to discourage bad behavior.

Also note that if your `prefix` doesn't end in a slash `/`, the STS
credentials may allow access to unexpected keys, as S3 does not treat
slashes specially.  For example, a prefix of `my-folder` will allow
access to `my-folder/file.txt` as expected, but also to `my-folder.txt`,
which may not be intended.

Finally, note that the `PutObjectAcl` call is not allowed.  Passing a canned
ACL other than `private` to `PutObject` is treated as a `PutObjectAcl` call, and
will result in an access-denied error from AWS.  This limitation is due to a
security flaw in Amazon S3 which might otherwise allow indefinite access to
uploaded objects.

**EC2 metadata compatibility**, if the querystring parameter
`?format=iam-role-compat` is given, the response will be compatible
with the JSON exposed by the EC2 metadata service. This aims to ease
compatibility for libraries and tools built to auto-refresh credentials.
For details on the format returned by EC2 metadata service see:
[EC2 User Guide](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#instance-metadata-security-credentials).'
Entry 20    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/accounts'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'azureAccounts'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:azure-table:list-accounts'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/azure-account-list-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/azure-account-list-response.json#'
    Entry Title       = 'List Accounts Managed by Auth'
    Entry Description = 'Retrieve a list of all Azure accounts managed by Taskcluster Auth.'
Entry 21    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/tables'
    Entry Args        = '[account]'
    Entry Query        = '[continuationToken]'
    Entry Name        = 'azureTables'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:azure-table:list-tables:<account>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/azure-table-list-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#'
    Entry Title       = 'List Tables in an Account Managed by Auth'
    Entry Description = 'Retrieve a list of all tables in an account.'
Entry 22    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/table/<table>/<level>'
    Entry Args        = '[account table level]'
    Entry Query        = '[]'
    Entry Name        = 'azureTableSAS'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If levelIsReadOnly:
  Any of:
  - auth:azure-table:read-only:<account>/<table>
  - auth:azure-table:read-write:<account>/<table>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/azure-table-access-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/azure-table-access-response.json#'
    Entry Title       = 'Get Shared-Access-Signature for Azure Table'
    Entry Description = 'Get a shared access signature (SAS) string for use with a specific Azure
Table Storage table.

The `level` parameter can be `read-write` or `read-only` and determines
which type of credentials are returned.  If level is read-write, it will create the
table if it doesn't already exist.'
Entry 23    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/containers'
    Entry Args        = '[account]'
    Entry Query        = '[continuationToken]'
    Entry Name        = 'azureContainers'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:azure-container:list-containers:<account>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/azure-container-list-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#'
    Entry Title       = 'List containers in an Account Managed by Auth'
    Entry Description = 'Retrieve a list of all containers in an account.'
Entry 24    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/azure/<account>/containers/<container>/<level>'
    Entry Args        = '[account container level]'
    Entry Query        = '[]'
    Entry Name        = 'azureContainerSAS'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If levelIsReadOnly:
  Any of:
  - auth:azure-container:read-only:<account>/<container>
  - auth:azure-container:read-write:<account>/<container>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/azure-container-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/azure-container-response.json#'
    Entry Title       = 'Get Shared-Access-Signature for Azure Container'
    Entry Description = 'Get a shared access signature (SAS) string for use with a specific Azure
Blob Storage container.

The `level` parameter can be `read-write` or `read-only` and determines
which type of credentials are returned.  If level is read-write, it will create the
container if it doesn't already exist.'
Entry 25    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/sentry/<project>/dsn'
    Entry Args        = '[project]'
    Entry Query        = '[]'
    Entry Name        = 'sentryDSN'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:sentry:<project>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/sentry-dsn-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#'
    Entry Title       = 'Get DSN for Sentry Project'
    Entry Description = 'Get temporary DSN (access credentials) for a sentry project.
The credentials returned can be used with any Sentry client for up to
24 hours, after which the credentials will be automatically disabled.

If the project doesn't exist it will be created, and assigned to the
initial team configured for this component. Contact a Sentry admin
to have the project transferred to a team you have access to if needed'
Entry 26    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/statsum/<project>/token'
    Entry Args        = '[project]'
    Entry Query        = '[]'
    Entry Name        = 'statsumToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:statsum:<project>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/statsum-token-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#'
    Entry Title       = 'Get Token for Statsum Project'
    Entry Description = 'Get temporary `token` and `baseUrl` for sending metrics to statsum.

The token is valid for 24 hours, clients should refresh after expiration.'
Entry 27    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/websocktunnel/<wstAudience>/<wstClient>'
    Entry Args        = '[wstAudience wstClient]'
    Entry Query        = '[]'
    Entry Name        = 'websocktunnelToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'auth:websocktunnel-token:<wstAudience>/<wstClient>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/websocktunnel-token-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#'
    Entry Title       = 'Get a client token for the Websocktunnel service'
    Entry Description = 'Get a temporary token suitable for use connecting to a
[websocktunnel](https://github.com/taskcluster/websocktunnel) server.

The resulting token will only be accepted by servers with a matching audience
value.  Reaching such a server is the callers responsibility.  In general,
a server URL or set of URLs should be provided to the caller as configuration
along with the audience value.

The token is valid for a limited time (on the scale of hours). Callers should
refresh it before expiration.'
Entry 28    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/authenticate-hawk'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'authenticateHawk'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = 'v1/authenticate-hawk-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#'
    Entry Output      = 'v1/authenticate-hawk-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#'
    Entry Title       = 'Authenticate Hawk Request'
    Entry Description = 'Validate the request signature given on input and return list of scopes
that the authenticating client has.

This method is used by other services that wish rely on Taskcluster
credentials for authentication. This way we can use Hawk without having
the secret credentials leave this service.'
Entry 29    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/test-authenticate'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'testAuthenticate'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = 'v1/test-authenticate-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#'
    Entry Output      = 'v1/test-authenticate-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#'
    Entry Title       = 'Test Authentication'
    Entry Description = 'Utility method to test client implementations of Taskcluster
authentication.

Rather than using real credentials, this endpoint accepts requests with
clientId `tester` and accessToken `no-secret`. That client's scopes are
based on `clientScopes` in the request body.

The request is validated, with any certificate, authorizedScopes, etc.
applied, and the resulting scopes are checked against `requiredScopes`
from the request body. On success, the response contains the clientId
and scopes as seen by the API method.'
Entry 30    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/test-authenticate-get/'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'testAuthenticateGet'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/test-authenticate-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#'
    Entry Title       = 'Test Authentication (GET)'
    Entry Description = 'Utility method similar to `testAuthenticate`, but with the GET method,
so it can be used with signed URLs (bewits).

Rather than using real credentials, this endpoint accepts requests with
clientId `tester` and accessToken `no-secret`. That client's scopes are
`['test:*', 'auth:create-client:test:*']`.  The call fails if the 
`test:authenticate-get` scope is not available.

The request is validated, with any certificate, authorizedScopes, etc.
applied, and the resulting scopes are checked, just like any API call.
On success, the response contains the clientId and scopes as seen by
the API method.

This method may later be extended to allow specification of client and
required scopes via query arguments.'


https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#
===============================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#
TYPE_NAME: HawkSignatureAuthenticationRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to authenticate a hawk request.
properties:
  MemberNames:
    authorization: Authorization
    host: Host
    method: Method
    port: Port
    resource: Resource
    sourceIp: SourceIP
  Properties:
    authorization:
      IS_REQUIRED: false
      PROPERTY_NAME: authorization
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/authorization
      TYPE_NAME: ""
      description: |
        Authorization header, **must** only be specified if request being
        authenticated has a `Authorization` header.
      type: string
    host:
      IS_REQUIRED: true
      PROPERTY_NAME: host
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/host
      TYPE_NAME: ""
      description: |
        Host for which the request came in, this is typically the `Host` header
        excluding the port if any.
      format: hostname
      title: Hostname or IPv4
      type: string
    method:
      IS_REQUIRED: true
      PROPERTY_NAME: method
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/method
      TYPE_NAME: ""
      description: |
        HTTP method of the request being authenticated.
      enum:
      - get
      - post
      - put
      - head
      - delete
      - options
      - trace
      - copy
      - lock
      - mkcol
      - move
      - purge
      - propfind
      - proppatch
      - unlock
      - report
      - mkactivity
      - checkout
      - merge
      - m-search
      - notify
      - subscribe
      - unsubscribe
      - patch
      - search
      - connect
      type: string
    port:
      IS_REQUIRED: true
      PROPERTY_NAME: port
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/port
      TYPE_NAME: ""
      description: |
        Port on which the request came in, this is typically `80` or `443`.
        If you are running behind a reverse proxy look for the `x-forwarded-port`
        header.
      maximum: 65535
      minimum: 0
      type: integer
    resource:
      IS_REQUIRED: true
      PROPERTY_NAME: resource
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/resource
      TYPE_NAME: ""
      description: |
        Resource the request operates on including querystring. This is the
        string that follows the HTTP method.
        **Note,** order of querystring elements is important.
      type: string
    sourceIp:
      IS_REQUIRED: false
      PROPERTY_NAME: sourceIp
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp
      TYPE_NAME: ""
      description: |
        Source IP of the authentication request or request that requires
        authentication. This is only used for audit logging.
      oneOf:
        Items:
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp/oneOf[0]
          TYPE_NAME: SourceIP
          description: |
            Source IP of the authentication request or request that requires
            authentication. This is only used for audit logging.
          format: ipv6
          title: Source IP
          type: string
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp/oneOf[1]
          TYPE_NAME: SourceIP1
          description: |
            Source IP of the authentication request or request that requires
            authentication. This is only used for audit logging.
          format: ipv4
          title: Source IP
          type: string
        SourceURL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp/oneOf
      title: Source IP
      type: string
  SortedPropertyNames:
  - authorization
  - host
  - method
  - port
  - resource
  - sourceIp
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties
required:
- method
- resource
- host
- port
title: Hawk Signature Authentication Request
type: object


https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp/oneOf[0]
============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp/oneOf[0]
TYPE_NAME: SourceIP
description: |
  Source IP of the authentication request or request that requires
  authentication. This is only used for audit logging.
format: ipv6
title: Source IP
type: string


https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp/oneOf[1]
============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-request.json#/properties/sourceIp/oneOf[1]
TYPE_NAME: SourceIP1
description: |
  Source IP of the authentication request or request that requires
  authentication. This is only used for audit logging.
format: ipv4
title: Source IP
type: string


https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#
TYPE_NAME: HawkSignatureAuthenticationResponse
description: |
  Response from a request to authenticate a hawk request.
oneOf:
  Items:
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]
    TYPE_NAME: AuthenticationSuccessfulResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response from a request to authenticate a hawk request.
    properties:
      MemberNames:
        clientId: ClientID
        expires: Expires
        hash: Hash
        scheme: Scheme
        scopes: Scopes
        status: Status
      Properties:
        clientId:
          IS_REQUIRED: true
          PROPERTY_NAME: clientId
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/clientId
          TYPE_NAME: ""
          description: |
            The `clientId` that made this request.  This may be the `id` supplied in
            the Authorization header, or in the case of a named temporary credential
            may be embedded in the payload.  In any case, this clientId can be used
            for logging, auditing, and identifying the credential but **must** not be
            used for access control.  That's what scopes are for.
          pattern: ^[A-Za-z0-9!@/:.+|_-]+$
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/expires
          TYPE_NAME: ""
          description: |
            The expiration time for the credentials used to make this request.
            This should be treated as the latest time at which the authorization
            is valid.  For most cases, where the access being authorized occurs
            immediately, this field can be ignored, as the value will always be
            in the future if the status is `auth-success`.
          format: date-time
          type: string
        hash:
          IS_REQUIRED: false
          PROPERTY_NAME: hash
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/hash
          TYPE_NAME: ""
          description: |
            Payload as extracted from `Authentication` header. This property is
            only present if a hash is available. You are not required to validate
            this hash, but if you do, please check `scheme` to ensure that it's
            on a scheme you support.
        scheme:
          IS_REQUIRED: true
          PROPERTY_NAME: scheme
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scheme
          TYPE_NAME: ""
          description: |
            Authentication scheme the client used. Generally, you don't need to
            read this property unless `hash` is provided and you want to validate
            the payload hash. Additional values may be added in the future.
          enum:
          - hawk
          type: string
        scopes:
          IS_REQUIRED: true
          PROPERTY_NAME: scopes
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes
          TYPE_NAME: ""
          description: |
            List of scopes the client is authorized to access.  Scopes must be
            composed of printable ASCII characters and spaces.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes/items
            TYPE_NAME: ""
            pattern: ^[ -~]*$
            type: string
          type: array
          uniqueItems: true
        status:
          IS_REQUIRED: true
          PROPERTY_NAME: status
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/status
          TYPE_NAME: ""
          description: |
            The kind of response, `auth-failed` or `auth-success`.
          enum:
          - auth-success
          type: string
      SortedPropertyNames:
      - clientId
      - expires
      - hash
      - scheme
      - scopes
      - status
      SourceURL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties
    required:
    - status
    - scopes
    - scheme
    - clientId
    - expires
    title: Authentication Successful Response
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]
    TYPE_NAME: AuthenticationFailedResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response from a request to authenticate a hawk request.
    properties:
      MemberNames:
        message: Message
        status: Status
      Properties:
        message:
          IS_REQUIRED: true
          PROPERTY_NAME: message
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/message
          TYPE_NAME: ""
          description: |
            Message saying why the authentication failed.
          type: string
        status:
          IS_REQUIRED: true
          PROPERTY_NAME: status
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/status
          TYPE_NAME: ""
          description: |
            The kind of response, `auth-failed` or `auth-success`.
          enum:
          - auth-failed
          type: string
      SortedPropertyNames:
      - message
      - status
      SourceURL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties
    required:
    - status
    - message
    title: Authentication Failed Response
    type: object
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf
title: Hawk Signature Authentication Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]
=========================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]
TYPE_NAME: AuthenticationSuccessfulResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a request to authenticate a hawk request.
properties:
  MemberNames:
    clientId: ClientID
    expires: Expires
    hash: Hash
    scheme: Scheme
    scopes: Scopes
    status: Status
  Properties:
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/clientId
      TYPE_NAME: ""
      description: |
        The `clientId` that made this request.  This may be the `id` supplied in
        the Authorization header, or in the case of a named temporary credential
        may be embedded in the payload.  In any case, this clientId can be used
        for logging, auditing, and identifying the credential but **must** not be
        used for access control.  That's what scopes are for.
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/expires
      TYPE_NAME: ""
      description: |
        The expiration time for the credentials used to make this request.
        This should be treated as the latest time at which the authorization
        is valid.  For most cases, where the access being authorized occurs
        immediately, this field can be ignored, as the value will always be
        in the future if the status is `auth-success`.
      format: date-time
      type: string
    hash:
      IS_REQUIRED: false
      PROPERTY_NAME: hash
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/hash
      TYPE_NAME: ""
      description: |
        Payload as extracted from `Authentication` header. This property is
        only present if a hash is available. You are not required to validate
        this hash, but if you do, please check `scheme` to ensure that it's
        on a scheme you support.
    scheme:
      IS_REQUIRED: true
      PROPERTY_NAME: scheme
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scheme
      TYPE_NAME: ""
      description: |
        Authentication scheme the client used. Generally, you don't need to
        read this property unless `hash` is provided and you want to validate
        the payload hash. Additional values may be added in the future.
      enum:
      - hawk
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes
      TYPE_NAME: ""
      description: |
        List of scopes the client is authorized to access.  Scopes must be
        composed of printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/scopes/items
        TYPE_NAME: ""
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
    status:
      IS_REQUIRED: true
      PROPERTY_NAME: status
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties/status
      TYPE_NAME: ""
      description: |
        The kind of response, `auth-failed` or `auth-success`.
      enum:
      - auth-success
      type: string
  SortedPropertyNames:
  - clientId
  - expires
  - hash
  - scheme
  - scopes
  - status
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[0]/properties
required:
- status
- scopes
- scheme
- clientId
- expires
title: Authentication Successful Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]
=========================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]
TYPE_NAME: AuthenticationFailedResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a request to authenticate a hawk request.
properties:
  MemberNames:
    message: Message
    status: Status
  Properties:
    message:
      IS_REQUIRED: true
      PROPERTY_NAME: message
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/message
      TYPE_NAME: ""
      description: |
        Message saying why the authentication failed.
      type: string
    status:
      IS_REQUIRED: true
      PROPERTY_NAME: status
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties/status
      TYPE_NAME: ""
      description: |
        The kind of response, `auth-failed` or `auth-success`.
      enum:
      - auth-failed
      type: string
  SortedPropertyNames:
  - message
  - status
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/authenticate-hawk-response.json#/oneOf[1]/properties
required:
- status
- message
title: Authentication Failed Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#
TYPE_NAME: AWSS3CredentialsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response for a request to get access to an S3 bucket.
properties:
  MemberNames:
    credentials: Credentials
    expires: Expires
  Properties:
    credentials:
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials
      TYPE_NAME: TemporarySecurityCredentials
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Temporary STS credentials for use when operating on S3
      properties:
        MemberNames:
          accessKeyId: AccessKeyID
          secretAccessKey: SecretAccessKey
          sessionToken: SessionToken
        Properties:
          accessKeyId:
            IS_REQUIRED: true
            PROPERTY_NAME: accessKeyId
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/accessKeyId
            TYPE_NAME: ""
            description: |
              Access key identifier that identifies the temporary security
              credentials.
            title: AccessKeyId
            type: string
          secretAccessKey:
            IS_REQUIRED: true
            PROPERTY_NAME: secretAccessKey
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/secretAccessKey
            TYPE_NAME: ""
            description: |
              Secret access key used to sign requests
            title: SecretAccessKey
            type: string
          sessionToken:
            IS_REQUIRED: true
            PROPERTY_NAME: sessionToken
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/sessionToken
            TYPE_NAME: ""
            description: |
              A token that must passed with request to use the temporary
              security credentials.
            title: SessionToken
            type: string
        SortedPropertyNames:
        - accessKeyId
        - secretAccessKey
        - sessionToken
        SourceURL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties
      required:
      - accessKeyId
      - secretAccessKey
      - sessionToken
      title: Temporary Security Credentials
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time of when the temporary credentials expires.
      format: date-time
      type: string
  SortedPropertyNames:
  - credentials
  - expires
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties
required:
- credentials
- expires
title: AWS S3 Credentials Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials
========================================================================================================
IS_REQUIRED: true
PROPERTY_NAME: credentials
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials
TYPE_NAME: TemporarySecurityCredentials
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Temporary STS credentials for use when operating on S3
properties:
  MemberNames:
    accessKeyId: AccessKeyID
    secretAccessKey: SecretAccessKey
    sessionToken: SessionToken
  Properties:
    accessKeyId:
      IS_REQUIRED: true
      PROPERTY_NAME: accessKeyId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/accessKeyId
      TYPE_NAME: ""
      description: |
        Access key identifier that identifies the temporary security
        credentials.
      title: AccessKeyId
      type: string
    secretAccessKey:
      IS_REQUIRED: true
      PROPERTY_NAME: secretAccessKey
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/secretAccessKey
      TYPE_NAME: ""
      description: |
        Secret access key used to sign requests
      title: SecretAccessKey
      type: string
    sessionToken:
      IS_REQUIRED: true
      PROPERTY_NAME: sessionToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties/sessionToken
      TYPE_NAME: ""
      description: |
        A token that must passed with request to use the temporary
        security credentials.
      title: SessionToken
      type: string
  SortedPropertyNames:
  - accessKeyId
  - secretAccessKey
  - sessionToken
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/aws-s3-credentials-response.json#/properties/credentials/properties
required:
- accessKeyId
- secretAccessKey
- sessionToken
title: Temporary Security Credentials
type: object


https://taskcluster-staging.net/schemas/auth/v1/azure-account-list-response.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/azure-account-list-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-account-list-response.json#
TYPE_NAME: AzureListAccountResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of Azure accounts managed by taskcluster-auth
properties:
  MemberNames:
    accounts: Accounts
  Properties:
    accounts:
      IS_REQUIRED: true
      PROPERTY_NAME: accounts
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-account-list-response.json#/properties/accounts
      TYPE_NAME: ""
      description: |
        A list of accountIds that are managed by auth. These are
        the accounts that can have SAS credentials fetched for tables
        within them.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-account-list-response.json#/properties/accounts/items
        TYPE_NAME: ""
        type: string
      title: Azure Accounts
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - accounts
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/azure-account-list-response.json#/properties
required:
- accounts
title: Azure List Account Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#
===================================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#
TYPE_NAME: AzureListContainersResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of Azure containers in an account
properties:
  MemberNames:
    containers: Containers
    continuationToken: ContinuationToken
  Properties:
    containers:
      IS_REQUIRED: true
      PROPERTY_NAME: containers
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#/properties/containers
      TYPE_NAME: ""
      description: |
        A list of containers that are in an account.  Credentials are available for
        these containers from the `azureBlobSAS` method.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#/properties/containers/items
        TYPE_NAME: ""
        type: string
      title: Azure Containers
      type: array
      uniqueItems: true
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of containers.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called this method with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
  SortedPropertyNames:
  - containers
  - continuationToken
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-list-response.json#/properties
required:
- containers
title: Azure List Containers Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/azure-container-response.json#
==============================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/azure-container-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-response.json#
TYPE_NAME: AzureBlobSharedAccessSignature
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for an Shared-Access-Signature to access an Azure
  Blob Storage container.
properties:
  MemberNames:
    expiry: Expiry
    sas: Sas
  Properties:
    expiry:
      IS_REQUIRED: true
      PROPERTY_NAME: expiry
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-response.json#/properties/expiry
      TYPE_NAME: ""
      description: |
        Date and time of when the Shared-Access-Signature expires.
      format: date-time
      type: string
    sas:
      IS_REQUIRED: true
      PROPERTY_NAME: sas
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-response.json#/properties/sas
      TYPE_NAME: ""
      description: |
        Shared-Access-Signature string. This is the querystring parameters to
        be appened after `?` or `&` depending on whether or not a querystring is
        already present in the URL.
      type: string
  SortedPropertyNames:
  - expiry
  - sas
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/azure-container-response.json#/properties
required:
- sas
- expiry
title: Azure Blob Shared-Access-Signature
type: object


https://taskcluster-staging.net/schemas/auth/v1/azure-table-access-response.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/azure-table-access-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-access-response.json#
TYPE_NAME: AzureTableSharedAccessSignature
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for an Shared-Access-Signature to access and Azure
  Table Storage table.
properties:
  MemberNames:
    expiry: Expiry
    sas: Sas
  Properties:
    expiry:
      IS_REQUIRED: true
      PROPERTY_NAME: expiry
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-access-response.json#/properties/expiry
      TYPE_NAME: ""
      description: |
        Date and time of when the Shared-Access-Signature expires.
      format: date-time
      type: string
    sas:
      IS_REQUIRED: true
      PROPERTY_NAME: sas
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-access-response.json#/properties/sas
      TYPE_NAME: ""
      description: |
        Shared-Access-Signature string. This is the querystring parameters to
        be appened after `?` or `&` depending on whether or not a querystring is
        already present in the URL.
      type: string
  SortedPropertyNames:
  - expiry
  - sas
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-access-response.json#/properties
required:
- sas
- expiry
title: Azure Table Shared-Access-Signature
type: object


https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#
===============================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#
TYPE_NAME: AzureListTableResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of Azure tables in an account
properties:
  MemberNames:
    continuationToken: ContinuationToken
    tables: Tables
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of tables.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `azureAccountTables` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    tables:
      IS_REQUIRED: true
      PROPERTY_NAME: tables
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#/properties/tables
      TYPE_NAME: ""
      description: |
        A list of tables that are in an account. These are
        the tables that can have SAS credentials fetched for them.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#/properties/tables/items
        TYPE_NAME: ""
        type: string
      title: Azure Tables
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - tables
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/azure-table-list-response.json#/properties
required:
- tables
title: Azure List Table Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#
TYPE_NAME: CreateClientRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Properties to create a client.
properties:
  MemberNames:
    deleteOnExpiration: DeleteOnExpiration
    description: Description
    expires: Expires
    scopes: Scopes
  Properties:
    deleteOnExpiration:
      IS_REQUIRED: false
      PROPERTY_NAME: deleteOnExpiration
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#/properties/deleteOnExpiration
      TYPE_NAME: ""
      default: false
      description: |
        If `true`, the service may delete this client after it has expired.  If
        `false` (the default), the client will remain after expiration, although
        it cannot be used for authentication in that state.
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of what these credentials are used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time where the clients access is set to expire
      format: date-time
      type: string
    scopes:
      IS_REQUIRED: false
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#/properties/scopes
      TYPE_NAME: ""
      description: |
        List of scopes the client has (unexpanded).
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#/properties/scopes/items
        TYPE_NAME: ""
        description: |
          A single scope. A scope must be composed of
          printable ASCII characters and spaces.  Scopes ending in more than
          one `*` character are forbidden.
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - deleteOnExpiration
  - description
  - expires
  - scopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/create-client-request.json#/properties
required:
- expires
- description
title: Create Client Request
type: object


https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#
TYPE_NAME: CreateClientResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  All details about a client including the `accessToken`
properties:
  MemberNames:
    accessToken: AccessToken
    clientId: ClientID
    created: Created
    deleteOnExpiration: DeleteOnExpiration
    description: Description
    disabled: Disabled
    expandedScopes: ExpandedScopes
    expires: Expires
    lastDateUsed: LastDateUsed
    lastModified: LastModified
    lastRotated: LastRotated
    scopes: Scopes
  Properties:
    accessToken:
      IS_REQUIRED: true
      PROPERTY_NAME: accessToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/accessToken
      TYPE_NAME: ""
      description: |
        AccessToken used for authenticating requests, you should store this
        you won't be able to retrive it again!
      pattern: ^[a-zA-Z0-9_-]{22,66}$
      type: string
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/clientId
      TYPE_NAME: ""
      description: |
        ClientId of the client
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/created
      TYPE_NAME: ""
      description: |
        Date and time when this client was created
      format: date-time
      type: string
    deleteOnExpiration:
      IS_REQUIRED: true
      PROPERTY_NAME: deleteOnExpiration
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/deleteOnExpiration
      TYPE_NAME: ""
      description: |
        If `true`, the service may delete this client after it has expired.  If
        `false`, the client will remain after expiration, although it cannot be
        used for authentication in that state.
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of what these credentials are used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    disabled:
      IS_REQUIRED: true
      PROPERTY_NAME: disabled
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/disabled
      TYPE_NAME: ""
      description: |
        If true, this client is disabled and cannot be used.  This usually occurs when the
        scopes available to the user owning the client no longer satisfy the client.
      type: boolean
    expandedScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: expandedScopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/expandedScopes
      TYPE_NAME: ""
      description: |
        List of scopes granted to this client by matching roles, including the
        client's scopes and the implicit role `client-id:<clientId>`.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/expandedScopes/items
        TYPE_NAME: ""
        description: |
          A single scope. A scope must be composed of
          printable ASCII characters and spaces.  Scopes ending in more than
          one `*` character are forbidden.
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time where the clients access is set to expire
      format: date-time
      type: string
    lastDateUsed:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateUsed
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/lastDateUsed
      TYPE_NAME: ""
      description: |
        Date of last time this client was used. Will only be updated every 6 hours
        or so this may be off by up-to 6 hours. But it still gives a solid hint
        as to whether or not this client is in use.
      format: date-time
      type: string
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/lastModified
      TYPE_NAME: ""
      description: |
        Date and time of last modification
      format: date-time
      type: string
    lastRotated:
      IS_REQUIRED: true
      PROPERTY_NAME: lastRotated
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/lastRotated
      TYPE_NAME: ""
      description: |
        Date and time of when the `accessToken` was reset last time.
      format: date-time
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/scopes
      TYPE_NAME: ""
      default: []
      description: |
        List of scopes the client has (unexpanded).
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties/scopes/items
        TYPE_NAME: ""
        description: |
          A single scope. A scope must be composed of
          printable ASCII characters and spaces.  Scopes ending in more than
          one `*` character are forbidden.
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - accessToken
  - clientId
  - created
  - deleteOnExpiration
  - description
  - disabled
  - expandedScopes
  - expires
  - lastDateUsed
  - lastModified
  - lastRotated
  - scopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/create-client-response.json#/properties
required:
- clientId
- accessToken
- expires
- description
- created
- lastModified
- lastDateUsed
- lastRotated
- scopes
- expandedScopes
- disabled
- deleteOnExpiration
title: Create Client Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#
=========================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#
TYPE_NAME: CreateRoleRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Data to create or update a role.
properties:
  MemberNames:
    description: Description
    scopes: Scopes
  Properties:
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of what this role is used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#/properties/scopes
      TYPE_NAME: ""
      description: |
        List of scopes the role grants access to.  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#/properties/scopes/items
        TYPE_NAME: ""
        description: |
          A single scope. A scope must be composed of
          printable ASCII characters and spaces.  Scopes ending in more than
          one `*` character are forbidden.
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - description
  - scopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/create-role-request.json#/properties
required:
- scopes
- description
title: Create Role Request
type: object


https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#
=========================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#
TYPE_NAME: GetClientResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Get all details about a client, useful for tools modifying a client
properties:
  MemberNames:
    clientId: ClientID
    created: Created
    deleteOnExpiration: DeleteOnExpiration
    description: Description
    disabled: Disabled
    expandedScopes: ExpandedScopes
    expires: Expires
    lastDateUsed: LastDateUsed
    lastModified: LastModified
    lastRotated: LastRotated
    scopes: Scopes
  Properties:
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/clientId
      TYPE_NAME: ""
      description: |
        ClientId of the client scopes is requested about
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/created
      TYPE_NAME: ""
      description: |
        Date and time when this client was created
      format: date-time
      type: string
    deleteOnExpiration:
      IS_REQUIRED: true
      PROPERTY_NAME: deleteOnExpiration
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/deleteOnExpiration
      TYPE_NAME: ""
      description: |
        If `true`, the service may delete this client after it has expired.  If
        `false`, the client will remain after expiration, although it cannot be
        used for authentication in that state.
      type: boolean
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of what these credentials are used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    disabled:
      IS_REQUIRED: true
      PROPERTY_NAME: disabled
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/disabled
      TYPE_NAME: ""
      description: |
        If true, this client is disabled and cannot be used.  This usually occurs when the
        scopes available to the user owning the client no longer satisfy the client.
      type: boolean
    expandedScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: expandedScopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/expandedScopes
      TYPE_NAME: ""
      description: |
        List of scopes granted to this client by matching roles.  Scopes must be
        composed of printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/expandedScopes/items
        TYPE_NAME: ""
        description: |
          Scope that client is granted by a role
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time where the clients access is set to expire
      format: date-time
      type: string
    lastDateUsed:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateUsed
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/lastDateUsed
      TYPE_NAME: ""
      description: |
        Date of last time this client was used. Will only be updated every 6 hours
        or so this may be off by up-to 6 hours. But it still gives a solid hint
        as to whether or not this client is in use.
      format: date-time
      type: string
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/lastModified
      TYPE_NAME: ""
      description: |
        Date and time of last modification
      format: date-time
      type: string
    lastRotated:
      IS_REQUIRED: true
      PROPERTY_NAME: lastRotated
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/lastRotated
      TYPE_NAME: ""
      description: |
        Date and time of when the `accessToken` was reset last time.
      format: date-time
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/scopes
      TYPE_NAME: ""
      default: []
      description: |
        List of scopes the client has (unexpanded).  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/scopes/items
        TYPE_NAME: ""
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - clientId
  - created
  - deleteOnExpiration
  - description
  - disabled
  - expandedScopes
  - expires
  - lastDateUsed
  - lastModified
  - lastRotated
  - scopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties
required:
- clientId
- expires
- description
- created
- lastModified
- lastDateUsed
- lastRotated
- scopes
- expandedScopes
- disabled
- deleteOnExpiration
title: Get Client Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
=======================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ' entry'
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
TYPE_NAME: GetRoleResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Get all details about a role
properties:
  MemberNames:
    created: Created
    description: Description
    expandedScopes: ExpandedScopes
    lastModified: LastModified
    roleId: RoleID
    scopes: Scopes
  Properties:
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/created
      TYPE_NAME: ""
      description: |
        Date and time when this role was created
      format: date-time
      type: string
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of what this role is used for in markdown.
        Should include who is the owner, point of contact.
      maxLength: 10240
      type: string
    expandedScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: expandedScopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/expandedScopes
      TYPE_NAME: ""
      description: |
        List of scopes granted anyone who assumes this role, including anything
        granted by roles that can be assumed when you have this role.
        Hence, this includes any scopes in-directly granted as well.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/expandedScopes/items
        TYPE_NAME: ""
        description: |
          A single scope. A scope must be composed of
          printable ASCII characters and spaces.  Scopes ending in more than
          one `*` character are forbidden.
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
    lastModified:
      IS_REQUIRED: true
      PROPERTY_NAME: lastModified
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/lastModified
      TYPE_NAME: ""
      description: |
        Date and time of last modification
      format: date-time
      type: string
    roleId:
      IS_REQUIRED: true
      PROPERTY_NAME: roleId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/roleId
      TYPE_NAME: ""
      description: |
        roleId of the role requested
      pattern: ^[\x20-\x7e]+$
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/scopes
      TYPE_NAME: ""
      description: |
        List of scopes the role grants access to.  Scopes must be composed of
        printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/scopes/items
        TYPE_NAME: ""
        description: |
          A single scope. A scope must be composed of
          printable ASCII characters and spaces.  Scopes ending in more than
          one `*` character are forbidden.
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: false
  SortedPropertyNames:
  - created
  - description
  - expandedScopes
  - lastModified
  - roleId
  - scopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties
required:
- roleId
- scopes
- description
- created
- lastModified
- expandedScopes
title: Get Role Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#
TYPE_NAME: ListClientResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of clients
properties:
  MemberNames:
    clients: Clients
    continuationToken: ContinuationToken
  Properties:
    clients:
      IS_REQUIRED: true
      PROPERTY_NAME: clients
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#/properties/clients
      TYPE_NAME: ""
      items:
        $ref: get-client-response.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#
        REF_SUBSCHEMA:
          $id: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#
          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#
          TYPE_NAME: GetClientResponse
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Get all details about a client, useful for tools modifying a client
          properties:
            MemberNames:
              clientId: ClientID
              created: Created
              deleteOnExpiration: DeleteOnExpiration
              description: Description
              disabled: Disabled
              expandedScopes: ExpandedScopes
              expires: Expires
              lastDateUsed: LastDateUsed
              lastModified: LastModified
              lastRotated: LastRotated
              scopes: Scopes
            Properties:
              clientId:
                IS_REQUIRED: true
                PROPERTY_NAME: clientId
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/clientId
                TYPE_NAME: ""
                description: |
                  ClientId of the client scopes is requested about
                pattern: ^[A-Za-z0-9!@/:.+|_-]+$
                type: string
              created:
                IS_REQUIRED: true
                PROPERTY_NAME: created
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/created
                TYPE_NAME: ""
                description: |
                  Date and time when this client was created
                format: date-time
                type: string
              deleteOnExpiration:
                IS_REQUIRED: true
                PROPERTY_NAME: deleteOnExpiration
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/deleteOnExpiration
                TYPE_NAME: ""
                description: |
                  If `true`, the service may delete this client after it has expired.  If
                  `false`, the client will remain after expiration, although it cannot be
                  used for authentication in that state.
                type: boolean
              description:
                IS_REQUIRED: true
                PROPERTY_NAME: description
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/description
                TYPE_NAME: ""
                description: |
                  Description of what these credentials are used for in markdown.
                  Should include who is the owner, point of contact.
                maxLength: 10240
                type: string
              disabled:
                IS_REQUIRED: true
                PROPERTY_NAME: disabled
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/disabled
                TYPE_NAME: ""
                description: |
                  If true, this client is disabled and cannot be used.  This usually occurs when the
                  scopes available to the user owning the client no longer satisfy the client.
                type: boolean
              expandedScopes:
                IS_REQUIRED: true
                PROPERTY_NAME: expandedScopes
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/expandedScopes
                TYPE_NAME: ""
                description: |
                  List of scopes granted to this client by matching roles.  Scopes must be
                  composed of printable ASCII characters and spaces.
                items:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/expandedScopes/items
                  TYPE_NAME: ""
                  description: |
                    Scope that client is granted by a role
                  pattern: ^[ -~]*$
                  type: string
                type: array
                uniqueItems: true
              expires:
                IS_REQUIRED: true
                PROPERTY_NAME: expires
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/expires
                TYPE_NAME: ""
                description: |
                  Date and time where the clients access is set to expire
                format: date-time
                type: string
              lastDateUsed:
                IS_REQUIRED: true
                PROPERTY_NAME: lastDateUsed
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/lastDateUsed
                TYPE_NAME: ""
                description: |
                  Date of last time this client was used. Will only be updated every 6 hours
                  or so this may be off by up-to 6 hours. But it still gives a solid hint
                  as to whether or not this client is in use.
                format: date-time
                type: string
              lastModified:
                IS_REQUIRED: true
                PROPERTY_NAME: lastModified
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/lastModified
                TYPE_NAME: ""
                description: |
                  Date and time of last modification
                format: date-time
                type: string
              lastRotated:
                IS_REQUIRED: true
                PROPERTY_NAME: lastRotated
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/lastRotated
                TYPE_NAME: ""
                description: |
                  Date and time of when the `accessToken` was reset last time.
                format: date-time
                type: string
              scopes:
                IS_REQUIRED: true
                PROPERTY_NAME: scopes
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/scopes
                TYPE_NAME: ""
                default: []
                description: |
                  List of scopes the client has (unexpanded).  Scopes must be composed of
                  printable ASCII characters and spaces.
                items:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties/scopes/items
                  TYPE_NAME: ""
                  description: Scope
                  pattern: ^[ -~]*$
                  type: string
                type: array
                uniqueItems: true
            SortedPropertyNames:
            - clientId
            - created
            - deleteOnExpiration
            - description
            - disabled
            - expandedScopes
            - expires
            - lastDateUsed
            - lastModified
            - lastRotated
            - scopes
            SourceURL: https://taskcluster-staging.net/schemas/auth/v1/get-client-response.json#/properties
          required:
          - clientId
          - expires
          - description
          - created
          - lastModified
          - lastDateUsed
          - lastRotated
          - scopes
          - expandedScopes
          - disabled
          - deleteOnExpiration
          title: Get Client Response
          type: object
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#/properties/clients/items
        TYPE_NAME: ""
      type: array
      uniqueItems: true
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
  SortedPropertyNames:
  - clients
  - continuationToken
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/list-clients-response.json#/properties
required:
- clients
title: List Client Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#
TYPE_NAME: GetRoleIdsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  If no limit is given, the roleIds of all roles are returned. Since this
  list may become long, callers can use the `limit` and `continuationToken`
  query arguments to page through the responses.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    roleIds: RoleIds
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
    roleIds:
      IS_REQUIRED: true
      PROPERTY_NAME: roleIds
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#/properties/roleIds
      TYPE_NAME: ""
      description: |
        A list of requested roleIds
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#/properties/roleIds/items
        TYPE_NAME: ""
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - roleIds
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/list-role-ids-response.json#/properties
required:
- roleIds
title: Get Role Ids Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/list-roles-response.json#
=========================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/list-roles-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-roles-response.json#
TYPE_NAME: GetAllRolesNoPagination
description: |
  List of roles
items:
  $ref: get-role-response.json#
  IS_REQUIRED: false
  PROPERTY_NAME: ""
  REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
  REF_SUBSCHEMA:
    $id: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
    $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ' entry'
    SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
    TYPE_NAME: GetRoleResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Get all details about a role
    properties:
      MemberNames:
        created: Created
        description: Description
        expandedScopes: ExpandedScopes
        lastModified: LastModified
        roleId: RoleID
        scopes: Scopes
      Properties:
        created:
          IS_REQUIRED: true
          PROPERTY_NAME: created
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/created
          TYPE_NAME: ""
          description: |
            Date and time when this role was created
          format: date-time
          type: string
        description:
          IS_REQUIRED: true
          PROPERTY_NAME: description
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/description
          TYPE_NAME: ""
          description: |
            Description of what this role is used for in markdown.
            Should include who is the owner, point of contact.
          maxLength: 10240
          type: string
        expandedScopes:
          IS_REQUIRED: true
          PROPERTY_NAME: expandedScopes
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/expandedScopes
          TYPE_NAME: ""
          description: |
            List of scopes granted anyone who assumes this role, including anything
            granted by roles that can be assumed when you have this role.
            Hence, this includes any scopes in-directly granted as well.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/expandedScopes/items
            TYPE_NAME: ""
            description: |
              A single scope. A scope must be composed of
              printable ASCII characters and spaces.  Scopes ending in more than
              one `*` character are forbidden.
            pattern: ^[ -~]*$
            type: string
          type: array
          uniqueItems: true
        lastModified:
          IS_REQUIRED: true
          PROPERTY_NAME: lastModified
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/lastModified
          TYPE_NAME: ""
          description: |
            Date and time of last modification
          format: date-time
          type: string
        roleId:
          IS_REQUIRED: true
          PROPERTY_NAME: roleId
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/roleId
          TYPE_NAME: ""
          description: |
            roleId of the role requested
          pattern: ^[\x20-\x7e]+$
          type: string
        scopes:
          IS_REQUIRED: true
          PROPERTY_NAME: scopes
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/scopes
          TYPE_NAME: ""
          description: |
            List of scopes the role grants access to.  Scopes must be composed of
            printable ASCII characters and spaces.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/scopes/items
            TYPE_NAME: ""
            description: |
              A single scope. A scope must be composed of
              printable ASCII characters and spaces.  Scopes ending in more than
              one `*` character are forbidden.
            pattern: ^[ -~]*$
            type: string
          type: array
          uniqueItems: false
      SortedPropertyNames:
      - created
      - description
      - expandedScopes
      - lastModified
      - roleId
      - scopes
      SourceURL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties
    required:
    - roleId
    - scopes
    - description
    - created
    - lastModified
    - expandedScopes
    title: Get Role Response
    type: object
  SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-roles-response.json#/items
  TYPE_NAME: ""
title: Get All Roles (no pagination)
type: array
uniqueItems: true


https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#
TYPE_NAME: GetAllRolesResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  If no limit is given, all roles are returned. Since this
  list may become long, callers can use the `limit` and `continuationToken`
  query arguments to page through the responses.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    roles: Roles
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
    roles:
      IS_REQUIRED: true
      PROPERTY_NAME: roles
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#/properties/roles
      TYPE_NAME: ""
      description: |
        A list of requested roles
      items:
        $ref: get-role-response.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
        REF_SUBSCHEMA:
          $id: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
          IS_REQUIRED: false
          PROPERTY_NAME: ' entry'
          SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#
          TYPE_NAME: GetRoleResponse
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Get all details about a role
          properties:
            MemberNames:
              created: Created
              description: Description
              expandedScopes: ExpandedScopes
              lastModified: LastModified
              roleId: RoleID
              scopes: Scopes
            Properties:
              created:
                IS_REQUIRED: true
                PROPERTY_NAME: created
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/created
                TYPE_NAME: ""
                description: |
                  Date and time when this role was created
                format: date-time
                type: string
              description:
                IS_REQUIRED: true
                PROPERTY_NAME: description
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/description
                TYPE_NAME: ""
                description: |
                  Description of what this role is used for in markdown.
                  Should include who is the owner, point of contact.
                maxLength: 10240
                type: string
              expandedScopes:
                IS_REQUIRED: true
                PROPERTY_NAME: expandedScopes
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/expandedScopes
                TYPE_NAME: ""
                description: |
                  List of scopes granted anyone who assumes this role, including anything
                  granted by roles that can be assumed when you have this role.
                  Hence, this includes any scopes in-directly granted as well.
                items:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/expandedScopes/items
                  TYPE_NAME: ""
                  description: |
                    A single scope. A scope must be composed of
                    printable ASCII characters and spaces.  Scopes ending in more than
                    one `*` character are forbidden.
                  pattern: ^[ -~]*$
                  type: string
                type: array
                uniqueItems: true
              lastModified:
                IS_REQUIRED: true
                PROPERTY_NAME: lastModified
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/lastModified
                TYPE_NAME: ""
                description: |
                  Date and time of last modification
                format: date-time
                type: string
              roleId:
                IS_REQUIRED: true
                PROPERTY_NAME: roleId
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/roleId
                TYPE_NAME: ""
                description: |
                  roleId of the role requested
                pattern: ^[\x20-\x7e]+$
                type: string
              scopes:
                IS_REQUIRED: true
                PROPERTY_NAME: scopes
                SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/scopes
                TYPE_NAME: ""
                description: |
                  List of scopes the role grants access to.  Scopes must be composed of
                  printable ASCII characters and spaces.
                items:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties/scopes/items
                  TYPE_NAME: ""
                  description: |
                    A single scope. A scope must be composed of
                    printable ASCII characters and spaces.  Scopes ending in more than
                    one `*` character are forbidden.
                  pattern: ^[ -~]*$
                  type: string
                type: array
                uniqueItems: false
            SortedPropertyNames:
            - created
            - description
            - expandedScopes
            - lastModified
            - roleId
            - scopes
            SourceURL: https://taskcluster-staging.net/schemas/auth/v1/get-role-response.json#/properties
          required:
          - roleId
          - scopes
          - description
          - created
          - lastModified
          - expandedScopes
          title: Get Role Response
          type: object
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#/properties/roles/items
        TYPE_NAME: ""
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - roles
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/list-roles2-response.json#/properties
required:
- roles
title: Get All Roles Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#
==============================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#
TYPE_NAME: SetOfScopes
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A set of scopes
properties:
  MemberNames:
    scopes: Scopes
  Properties:
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#/properties/scopes
      TYPE_NAME: ""
      description: |
        List of scopes.  Scopes must be composed of printable ASCII characters and spaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#/properties/scopes/items
        TYPE_NAME: ""
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - scopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/scopeset.json#/properties
required:
- scopes
title: Set of scopes
type: object


https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#
=========================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#
TYPE_NAME: SentryDSNResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Sentry DSN for submitting errors.
properties:
  MemberNames:
    dsn: Dsn
    expires: Expires
    project: Project
  Properties:
    dsn:
      IS_REQUIRED: true
      PROPERTY_NAME: dsn
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn
      TYPE_NAME: Dsn
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Access credentials and urls for the Sentry project.
        Credentials will expire in 24-48 hours, you should refresh them within
        24 hours.
      properties:
        MemberNames:
          public: Public
          secret: Secret
        Properties:
          public:
            IS_REQUIRED: true
            PROPERTY_NAME: public
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn/properties/public
            TYPE_NAME: ""
            description: |
              Access credential and URL for public error reports.
              These credentials can be used for up-to 24 hours.
              This is for use in client-side applications only.
            format: uri
            type: string
          secret:
            IS_REQUIRED: true
            PROPERTY_NAME: secret
            SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn/properties/secret
            TYPE_NAME: ""
            description: |
              Access credential and URL for private error reports.
              These credentials can be used for up-to 24 hours.
              This is for use in serser-side applications and should **not** be
              leaked.
            format: uri
            type: string
        SortedPropertyNames:
        - public
        - secret
        SourceURL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn/properties
      required:
      - secret
      - public
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Expiration time for the credentials. The credentials should not be used
        after this time. They might not be revoked immediately, but will be at
        some arbitrary point after this date-time.
      format: date-time
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/project
      TYPE_NAME: ""
      description: |
        Project name that the DSN grants access to.
      title: Project
      type: string
  SortedPropertyNames:
  - dsn
  - expires
  - project
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties
required:
- project
- dsn
- expires
title: Sentry DSN Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn
========================================================================================
IS_REQUIRED: true
PROPERTY_NAME: dsn
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn
TYPE_NAME: Dsn
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Access credentials and urls for the Sentry project.
  Credentials will expire in 24-48 hours, you should refresh them within
  24 hours.
properties:
  MemberNames:
    public: Public
    secret: Secret
  Properties:
    public:
      IS_REQUIRED: true
      PROPERTY_NAME: public
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn/properties/public
      TYPE_NAME: ""
      description: |
        Access credential and URL for public error reports.
        These credentials can be used for up-to 24 hours.
        This is for use in client-side applications only.
      format: uri
      type: string
    secret:
      IS_REQUIRED: true
      PROPERTY_NAME: secret
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn/properties/secret
      TYPE_NAME: ""
      description: |
        Access credential and URL for private error reports.
        These credentials can be used for up-to 24 hours.
        This is for use in serser-side applications and should **not** be
        leaked.
      format: uri
      type: string
  SortedPropertyNames:
  - public
  - secret
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/sentry-dsn-response.json#/properties/dsn/properties
required:
- secret
- public
type: object


https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#
TYPE_NAME: StatsumTokenResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Token for submitting statistics to statsum.
properties:
  MemberNames:
    baseUrl: BaseURL
    expires: Expires
    project: Project
    token: Token
  Properties:
    baseUrl:
      IS_REQUIRED: true
      PROPERTY_NAME: baseUrl
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#/properties/baseUrl
      TYPE_NAME: ""
      description: |
        Base URL for the statsum server this project is allocated on.
      format: uri
      title: BaseUrl
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Time at which the token expires and should not be used anymore.
      format: date-time
      title: Token Expiration
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#/properties/project
      TYPE_NAME: ""
      description: |
        Project name that the token grants access to.
      title: Project
      type: string
    token:
      IS_REQUIRED: true
      PROPERTY_NAME: token
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#/properties/token
      TYPE_NAME: ""
      description: |
        JWT token to be used as `Bearer <token>` when submitting data to statsum.
      title: Access Token
      type: string
  SortedPropertyNames:
  - baseUrl
  - expires
  - project
  - token
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/statsum-token-response.json#/properties
required:
- project
- token
- expires
- baseUrl
title: Statsum Token Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#
===============================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#
TYPE_NAME: TestAuthenticateRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Details on how the test request should be authenticated.
properties:
  MemberNames:
    clientScopes: ClientScopes
    requiredScopes: RequiredScopes
  Properties:
    clientScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: clientScopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#/properties/clientScopes
      TYPE_NAME: ""
      default: []
      description: |
        List of scopes that should be client used should be given.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#/properties/clientScopes/items
        TYPE_NAME: ""
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
    requiredScopes:
      IS_REQUIRED: true
      PROPERTY_NAME: requiredScopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#/properties/requiredScopes
      TYPE_NAME: ""
      default: []
      description: |
        List of scopes the request should require.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#/properties/requiredScopes/items
        TYPE_NAME: ""
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - clientScopes
  - requiredScopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-request.json#/properties
required:
- clientScopes
- requiredScopes
title: Test Authenticate Request
type: object


https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#
TYPE_NAME: TestAuthenticateResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Details on how the test request was authenticated.
properties:
  MemberNames:
    clientId: ClientID
    scopes: Scopes
  Properties:
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#/properties/clientId
      TYPE_NAME: ""
      description: |
        ClientId from the request as it will be logged
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#/properties/scopes
      TYPE_NAME: ""
      default: []
      description: |
        List of scopes the request was authorized.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#/properties/scopes/items
        TYPE_NAME: ""
        description: Scope
        pattern: ^[ -~]*$
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - clientId
  - scopes
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/test-authenticate-response.json#/properties
required:
- clientId
- scopes
title: Test Authenticate Response
type: object


https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#
==================================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#
TYPE_NAME: WebsocktunnelTokenResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Token for connecting a worker to websocktunnel proxy
properties:
  MemberNames:
    expires: Expires
    token: Token
    wstAudience: WstAudience
    wstClient: WstClient
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        The time at which the JWT will expire.
      format: date-time
      title: Expires
      type: string
    token:
      IS_REQUIRED: true
      PROPERTY_NAME: token
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#/properties/token
      TYPE_NAME: ""
      description: |
        The JWT to be used as `Bearer <token>` when connecting to the service.
      title: Token
      type: string
    wstAudience:
      IS_REQUIRED: true
      PROPERTY_NAME: wstAudience
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#/properties/wstAudience
      TYPE_NAME: ""
      description: |
        Audience identifying the websocktunnel servers that will honor this token; this will be the
        same as the requested `wstAudience`.
      pattern: ^[a-zA-Z0-9_-]{1,38}$
      title: Websocktunnel Audience
      type: string
    wstClient:
      IS_REQUIRED: true
      PROPERTY_NAME: wstClient
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#/properties/wstClient
      TYPE_NAME: ""
      description: |
        Id for the websocktunnel client connection; this will be the same as the requested `wstClient`.
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      title: Websocktunnel Client
      type: string
  SortedPropertyNames:
  - expires
  - token
  - wstAudience
  - wstClient
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/websocktunnel-token-response.json#/properties
required:
- wstClient
- wstAudience
- token
- expires
title: Websocktunnel Token Response
type: object


https://taskcluster-staging.net/references/auth/v1/exchanges.json
=================================================================
Version         = 'v1'
Schema          = 'https://taskcluster-staging.net/schemas/common/exchanges-reference-v0.json#'
Title           = 'Auth Pulse Exchanges'
Description     = 'The auth service is responsible for storing credentials, managing
assignment of scopes, and validation of request signatures from other
services.

These exchanges provides notifications when credentials or roles are
updated. This is mostly so that multiple instances of the auth service
can purge their caches and synchronize state. But you are of course
welcome to use these for other purposes, monitoring changes for example.'
Exchange Prefix = 'exchange/taskcluster-auth/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'client-created'
    Entry Name        = 'clientCreated'
    Entry Title       = 'Client Created Messages'
    Entry Description = 'Message that a new client has been created.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/client-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/auth/v1/client-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'client-updated'
    Entry Name        = 'clientUpdated'
    Entry Title       = 'Client Updated Messages'
    Entry Description = 'Message that a new client has been updated.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/client-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/auth/v1/client-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'client-deleted'
    Entry Name        = 'clientDeleted'
    Entry Title       = 'Client Deleted Messages'
    Entry Description = 'Message that a new client has been deleted.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/client-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/auth/v1/client-message.json#'
Entry 3     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'role-created'
    Entry Name        = 'roleCreated'
    Entry Title       = 'Role Created Messages'
    Entry Description = 'Message that a new role has been created.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/role-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/auth/v1/role-message.json#'
Entry 4     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'role-updated'
    Entry Name        = 'roleUpdated'
    Entry Title       = 'Role Updated Messages'
    Entry Description = 'Message that a new role has been updated.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/role-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/auth/v1/role-message.json#'
Entry 5     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'role-deleted'
    Entry Name        = 'roleDeleted'
    Entry Title       = 'Role Deleted Messages'
    Entry Description = 'Message that a new role has been deleted.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/role-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/auth/v1/role-message.json#'


https://taskcluster-staging.net/schemas/auth/v1/client-message.json#
====================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/client-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/client-message.json#
TYPE_NAME: ClientMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a client has changed
properties:
  MemberNames:
    clientId: ClientID
    version: Version
  Properties:
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/client-message.json#/properties/clientId
      TYPE_NAME: ""
      description: |
        `clientId` of the client that was changed
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/client-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version number
      enum:
      - 1
      type: number
  SortedPropertyNames:
  - clientId
  - version
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/client-message.json#/properties
required:
- version
- clientId
title: Client Message
type: object


https://taskcluster-staging.net/schemas/auth/v1/role-message.json#
==================================================================
$id: https://taskcluster-staging.net/schemas/auth/v1/role-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/role-message.json#
TYPE_NAME: RoleMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a role has changed
properties:
  MemberNames:
    roleId: RoleID
    version: Version
  Properties:
    roleId:
      IS_REQUIRED: true
      PROPERTY_NAME: roleId
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/role-message.json#/properties/roleId
      TYPE_NAME: ""
      description: |
        `roleId` of the role that was changed
      pattern: ^[\x20-\x7e]+$
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/auth/v1/role-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version number
      enum:
      - 1
      type: number
  SortedPropertyNames:
  - roleId
  - version
  SourceURL: https://taskcluster-staging.net/schemas/auth/v1/role-message.json#/properties
required:
- version
- roleId
title: Role Message
type: object


https://taskcluster-staging.net/references/github/v1/api.json
=============================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Taskcluster GitHub API Documentation'
Description = 'The github service is responsible for creating tasks in reposnse
to GitHub events, and posting results to the GitHub UI.

This document describes the API end-point for consuming GitHub
web hooks, as well as some useful consumer APIs.

When Github forbids an action, this service returns an HTTP 403
with code ForbiddenByGithub.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/github'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'githubWebHookConsumer'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Consume GitHub WebHook'
    Entry Description = 'Capture a GitHub event and publish it via pulse, if it's a push,
release or pull request.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/builds'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit organization repository sha]'
    Entry Name        = 'builds'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/build-list.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/github/v1/build-list.json#'
    Entry Title       = 'List of Builds'
    Entry Description = 'A paginated list of builds that have been run in
Taskcluster. Can be filtered on various git-specific
fields.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/repository/<owner>/<repo>/<branch>/badge.svg'
    Entry Args        = '[owner repo branch]'
    Entry Query        = '[]'
    Entry Name        = 'badge'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Latest Build Status Badge'
    Entry Description = 'Checks the status of the latest build of a given branch
and returns corresponding badge svg.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/repository/<owner>/<repo>'
    Entry Args        = '[owner repo]'
    Entry Query        = '[]'
    Entry Name        = 'repository'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/repository.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/github/v1/repository.json#'
    Entry Title       = 'Get Repository Info'
    Entry Description = 'Returns any repository metadata that is
useful within Taskcluster related services.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/repository/<owner>/<repo>/<branch>/latest'
    Entry Args        = '[owner repo branch]'
    Entry Query        = '[]'
    Entry Name        = 'latest'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Latest Status for Branch'
    Entry Description = 'For a given branch of a repository, this will always point
to a status page for the most recent task triggered by that
branch.

Note: This is a redirect rather than a direct link.'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/repository/<owner>/<repo>/statuses/<sha>'
    Entry Args        = '[owner repo sha]'
    Entry Query        = '[]'
    Entry Name        = 'createStatus'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'github:create-status:<owner>/<repo>'
    Entry Input       = 'v1/create-status.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/github/v1/create-status.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Post a status against a given changeset'
    Entry Description = 'For a given changeset (SHA) of a repository, this will attach a "commit status"
on github. These statuses are links displayed next to each revision.
The status is either OK (green check) or FAILURE (red cross), 
made of a custom title and link.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/repository/<owner>/<repo>/issues/<number>/comments'
    Entry Args        = '[owner repo number]'
    Entry Query        = '[]'
    Entry Name        = 'createComment'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'github:create-comment:<owner>/<repo>'
    Entry Input       = 'v1/create-comment.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/github/v1/create-comment.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Post a comment on a given GitHub Issue or Pull Request'
    Entry Description = 'For a given Issue or Pull Request of a repository, this will write a new message.'


https://taskcluster-staging.net/schemas/github/v1/build-list.json#
==================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/build-list.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#
TYPE_NAME: BuildsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A paginated list of builds
properties:
  MemberNames:
    builds: Builds
    continuationToken: ContinuationToken
  Properties:
    builds:
      IS_REQUIRED: true
      PROPERTY_NAME: builds
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds
      TYPE_NAME: ""
      description: |
        A simple list of builds.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items
        TYPE_NAME: Build
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            created: Created
            eventId: EventID
            eventType: EventType
            organization: Organization
            repository: Repository
            sha: Sha
            state: State
            taskGroupId: TaskGroupID
            updated: Updated
          Properties:
            created:
              IS_REQUIRED: true
              PROPERTY_NAME: created
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/created
              TYPE_NAME: ""
              description: |
                The initial creation time of the build. This is when it became pending.
              format: date-time
              type: string
            eventId:
              IS_REQUIRED: true
              PROPERTY_NAME: eventId
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId
              TYPE_NAME: ""
              description: |
                The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
              oneOf:
                Items:
                - IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[0]
                  TYPE_NAME: GithubGUID
                  description: |
                    The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
                  pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
                  title: Github GUID
                  type: string
                - IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[1]
                  TYPE_NAME: UnknownGithubGUID
                  description: |
                    The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
                  enum:
                  - Unknown
                  title: Unknown Github GUID
                  type: string
                SourceURL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf
              type: string
            eventType:
              IS_REQUIRED: true
              PROPERTY_NAME: eventType
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventType
              TYPE_NAME: ""
              description: Type of Github event that triggered the build (i.e. push,
                pull_request.opened).
              type: string
            organization:
              IS_REQUIRED: true
              PROPERTY_NAME: organization
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/organization
              TYPE_NAME: ""
              description: Github organization associated with the build.
              maxLength: 100
              minLength: 1
              pattern: ^([a-zA-Z0-9-_%]*)$
              type: string
            repository:
              IS_REQUIRED: true
              PROPERTY_NAME: repository
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/repository
              TYPE_NAME: ""
              description: Github repository associated with the build.
              maxLength: 100
              minLength: 1
              pattern: ^([a-zA-Z0-9-_%]*)$
              type: string
            sha:
              IS_REQUIRED: true
              PROPERTY_NAME: sha
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/sha
              TYPE_NAME: ""
              description: Github revision associated with the build.
              maxLength: 40
              minLength: 40
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/state
              TYPE_NAME: ""
              description: Github status associated with the build.
              enum:
              - pending
              - success
              - error
              - failure
              type: string
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/taskGroupId
              TYPE_NAME: ""
              description: Taskcluster task-group associated with the build.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              type: string
            updated:
              IS_REQUIRED: true
              PROPERTY_NAME: updated
              SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/updated
              TYPE_NAME: ""
              description: |
                The last updated of the build. If it is done, this is when it finished.
              format: date-time
              type: string
          SortedPropertyNames:
          - created
          - eventId
          - eventType
          - organization
          - repository
          - sha
          - state
          - taskGroupId
          - updated
          SourceURL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties
        required:
        - organization
        - repository
        - sha
        - state
        - taskGroupId
        - eventType
        - eventId
        - created
        - updated
        title: Build
        type: object
      type: array
      uniqueItems: false
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/continuationToken
      TYPE_NAME: ""
      description: Passed back from Azure to allow us to page through long result
        sets.
      type: string
  SortedPropertyNames:
  - builds
  - continuationToken
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties
required:
- builds
title: Builds Response
type: object


https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items
==========================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items
TYPE_NAME: Build
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    created: Created
    eventId: EventID
    eventType: EventType
    organization: Organization
    repository: Repository
    sha: Sha
    state: State
    taskGroupId: TaskGroupID
    updated: Updated
  Properties:
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/created
      TYPE_NAME: ""
      description: |
        The initial creation time of the build. This is when it became pending.
      format: date-time
      type: string
    eventId:
      IS_REQUIRED: true
      PROPERTY_NAME: eventId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId
      TYPE_NAME: ""
      description: |
        The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
      oneOf:
        Items:
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[0]
          TYPE_NAME: GithubGUID
          description: |
            The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
          pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
          title: Github GUID
          type: string
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[1]
          TYPE_NAME: UnknownGithubGUID
          description: |
            The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
          enum:
          - Unknown
          title: Unknown Github GUID
          type: string
        SourceURL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf
      type: string
    eventType:
      IS_REQUIRED: true
      PROPERTY_NAME: eventType
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventType
      TYPE_NAME: ""
      description: Type of Github event that triggered the build (i.e. push, pull_request.opened).
      type: string
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/organization
      TYPE_NAME: ""
      description: Github organization associated with the build.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/repository
      TYPE_NAME: ""
      description: Github repository associated with the build.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    sha:
      IS_REQUIRED: true
      PROPERTY_NAME: sha
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/sha
      TYPE_NAME: ""
      description: Github revision associated with the build.
      maxLength: 40
      minLength: 40
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/state
      TYPE_NAME: ""
      description: Github status associated with the build.
      enum:
      - pending
      - success
      - error
      - failure
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/taskGroupId
      TYPE_NAME: ""
      description: Taskcluster task-group associated with the build.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      type: string
    updated:
      IS_REQUIRED: true
      PROPERTY_NAME: updated
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/updated
      TYPE_NAME: ""
      description: |
        The last updated of the build. If it is done, this is when it finished.
      format: date-time
      type: string
  SortedPropertyNames:
  - created
  - eventId
  - eventType
  - organization
  - repository
  - sha
  - state
  - taskGroupId
  - updated
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties
required:
- organization
- repository
- sha
- state
- taskGroupId
- eventType
- eventId
- created
- updated
title: Build
type: object


https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[0]
======================================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[0]
TYPE_NAME: GithubGUID
description: |
  The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
title: Github GUID
type: string


https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[1]
======================================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/build-list.json#/properties/builds/items/properties/eventId/oneOf[1]
TYPE_NAME: UnknownGithubGUID
description: |
  The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
enum:
- Unknown
title: Unknown Github GUID
type: string


https://taskcluster-staging.net/schemas/github/v1/create-comment.json#
======================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/create-comment.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/create-comment.json#
TYPE_NAME: CreateCommentRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Write a new comment on a GitHub Issue or Pull Request.
  Full specification on [GitHub docs](https://developer.github.com/v3/issues/comments/#create-a-comment)
properties:
  MemberNames:
    body: Body
  Properties:
    body:
      IS_REQUIRED: true
      PROPERTY_NAME: body
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/create-comment.json#/properties/body
      TYPE_NAME: ""
      description: The contents of the comment.
      type: string
  SortedPropertyNames:
  - body
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/create-comment.json#/properties
required:
- body
title: Create Comment Request
type: object


https://taskcluster-staging.net/schemas/github/v1/create-status.json#
=====================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/create-status.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/create-status.json#
TYPE_NAME: CreateStatusRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Create a commit status on GitHub.
  Full specification on [GitHub docs](https://developer.github.com/v3/repos/statuses/#create-a-status)
properties:
  MemberNames:
    context: Context
    description: Description
    state: State
    target_url: Target_URL
  Properties:
    context:
      IS_REQUIRED: false
      PROPERTY_NAME: context
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/create-status.json#/properties/context
      TYPE_NAME: ""
      description: A string label to differentiate this status from the status of
        other systems.
      type: string
    description:
      IS_REQUIRED: false
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/create-status.json#/properties/description
      TYPE_NAME: ""
      description: A short description of the status.
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/create-status.json#/properties/state
      TYPE_NAME: ""
      description: The state of the status.
      enum:
      - pending
      - success
      - error
      - failure
      type: string
    target_url:
      IS_REQUIRED: false
      PROPERTY_NAME: target_url
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/create-status.json#/properties/target_url
      TYPE_NAME: ""
      description: The target URL to associate with this status. This URL will be
        linked from the GitHub UI to allow users to easily see the 'source' of the
        Status.
      type: string
  SortedPropertyNames:
  - context
  - description
  - state
  - target_url
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/create-status.json#/properties
required:
- state
title: Create Status Request
type: object


https://taskcluster-staging.net/schemas/github/v1/repository.json#
==================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/repository.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/repository.json#
TYPE_NAME: RepositoryResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Any Taskcluster-specific Github repository information.
properties:
  MemberNames:
    installed: Installed
  Properties:
    installed:
      IS_REQUIRED: true
      PROPERTY_NAME: installed
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/repository.json#/properties/installed
      TYPE_NAME: ""
      description: |
        True if integration is installed, False otherwise.
      type: boolean
  SortedPropertyNames:
  - installed
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/repository.json#/properties
required:
- installed
title: Repository Response
type: object


https://taskcluster-staging.net/references/github/v1/exchanges.json
===================================================================
Version         = 'v1'
Schema          = 'https://taskcluster-staging.net/schemas/common/exchanges-reference-v0.json#'
Title           = 'Taskcluster-Github Exchanges'
Description     = 'The github service publishes a pulse
message for supported github events, translating Github webhook
events into pulse messages.

This document describes the exchange offered by the taskcluster
github service'
Exchange Prefix = 'exchange/taskcluster-github/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'pull-request'
    Entry Name        = 'pullRequest'
    Entry Title       = 'GitHub Pull Request Event'
    Entry Description = 'When a GitHub pull request event is posted it will be broadcast on this
exchange with the designated `organization` and `repository`
in the routing-key along with event specific metadata in the payload.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `"primary"` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'organization'
        Element Summary   = 'The GitHub `organization` which had an event. All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'repository'
        Element Summary   = 'The GitHub `repository` which had an event.All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'action'
        Element Summary   = 'The GitHub `action` which triggered an event. See for possible values see the payload actions property.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'v1/github-pull-request-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'push'
    Entry Name        = 'push'
    Entry Title       = 'GitHub push Event'
    Entry Description = 'When a GitHub push event is posted it will be broadcast on this
exchange with the designated `organization` and `repository`
in the routing-key along with event specific metadata in the payload.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `"primary"` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'organization'
        Element Summary   = 'The GitHub `organization` which had an event. All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'repository'
        Element Summary   = 'The GitHub `repository` which had an event.All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'v1/github-push-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'release'
    Entry Name        = 'release'
    Entry Title       = 'GitHub release Event'
    Entry Description = 'When a GitHub release event is posted it will be broadcast on this
exchange with the designated `organization` and `repository`
in the routing-key along with event specific metadata in the payload.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `"primary"` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'organization'
        Element Summary   = 'The GitHub `organization` which had an event. All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'repository'
        Element Summary   = 'The GitHub `repository` which had an event.All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'v1/github-release-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#'
Entry 3     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-group-creation-requested'
    Entry Name        = 'taskGroupCreationRequested'
    Entry Title       = 'tc-gh requested the Queue service to create all the tasks in a group'
    Entry Description = 'supposed to signal that taskCreate API has been called for every task in the task group
for this particular repo and this particular organization
currently used for creating initial status indicators in GitHub UI using Statuses API.
This particular exchange can also be bound to RabbitMQ queues by custom routes - for that,
Pass in the array of routes as a second argument to the publish method. Currently, we do
use the statuses routes to bind the handler that creates the initial status.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `"primary"` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'organization'
        Element Summary   = 'The GitHub `organization` which had an event. All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'repository'
        Element Summary   = 'The GitHub `repository` which had an event.All periods have been replaced by % - such that foo.bar becomes foo%bar - and all other special characters aside from - and _ have been stripped.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Entry Schema      = 'v1/task-group-creation-requested.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#'


https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#
===================================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#
TYPE_NAME: GitHubPullRequestMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a GitHub pull request has occurred
properties:
  MemberNames:
    action: Action
    body: Body
    branch: Branch
    details: Details
    eventId: EventID
    installationId: InstallationID
    organization: Organization
    repository: Repository
    tasks_for: Tasks_For
    version: Version
  Properties:
    action:
      IS_REQUIRED: true
      PROPERTY_NAME: action
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/action
      TYPE_NAME: ""
      description: |
        The GitHub `action` which triggered an event.
      enum:
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - opened
      - edited
      - closed
      - reopened
      - synchronize
      - review_requested
      - review_request_removed
      type: string
    body:
      IS_REQUIRED: true
      PROPERTY_NAME: body
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/body
      TYPE_NAME: ""
      description: |
        The raw body of github event (for version 1)
      type: object
    branch:
      IS_REQUIRED: true
      PROPERTY_NAME: branch
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/branch
      TYPE_NAME: ""
      description: |
        The head ref of the event (for version 1)
      type: string
    details:
      IS_REQUIRED: false
      PROPERTY_NAME: details
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/details
      TYPE_NAME: ""
      description: |
        Metadata describing the pull request (for version 0)
      type: object
    eventId:
      IS_REQUIRED: true
      PROPERTY_NAME: eventId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/eventId
      TYPE_NAME: ""
      description: |
        The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
      pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
      type: string
    installationId:
      IS_REQUIRED: true
      PROPERTY_NAME: installationId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/installationId
      TYPE_NAME: ""
      description: |
        The installation which had an event.
      maximum: 10000000000
      minimum: 0
      type: integer
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/organization
      TYPE_NAME: ""
      description: |
        The GitHub `organization` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/repository
      TYPE_NAME: ""
      description: |
        The GitHub `repository` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    tasks_for:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks_for
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/tasks_for
      TYPE_NAME: ""
      description: |
        The type of the event (for version 1)
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: number
  SortedPropertyNames:
  - action
  - body
  - branch
  - details
  - eventId
  - installationId
  - organization
  - repository
  - tasks_for
  - version
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/github-pull-request-message.json#/properties
required:
- version
- organization
- repository
- action
- installationId
- eventId
- body
- tasks_for
- branch
title: GitHub Pull Request Message
type: object


https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#
TYPE_NAME: GitHubPushMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a GitHub push has occurred
properties:
  MemberNames:
    body: Body
    branch: Branch
    details: Details
    eventId: EventID
    installationId: InstallationID
    organization: Organization
    repository: Repository
    tasks_for: Tasks_For
    version: Version
  Properties:
    body:
      IS_REQUIRED: true
      PROPERTY_NAME: body
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/body
      TYPE_NAME: ""
      description: |
        The raw body of github event (for version 1)
      type: object
    branch:
      IS_REQUIRED: true
      PROPERTY_NAME: branch
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/branch
      TYPE_NAME: ""
      description: |
        The head ref of the event (for version 1)
      type: string
    details:
      IS_REQUIRED: false
      PROPERTY_NAME: details
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/details
      TYPE_NAME: ""
      description: |
        Metadata describing the push (for version 0)
      type: object
    eventId:
      IS_REQUIRED: true
      PROPERTY_NAME: eventId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/eventId
      TYPE_NAME: ""
      description: |
        The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
      pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
      type: string
    installationId:
      IS_REQUIRED: true
      PROPERTY_NAME: installationId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/installationId
      TYPE_NAME: ""
      description: |
        The installation which had an event.
      maxLength: 10000000000
      minLength: 0
      type: integer
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/organization
      TYPE_NAME: ""
      description: |
        The GitHub `organization` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/repository
      TYPE_NAME: ""
      description: |
        The GitHub `repository` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    tasks_for:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks_for
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/tasks_for
      TYPE_NAME: ""
      description: |
        The type of the event (for version 1)
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: number
  SortedPropertyNames:
  - body
  - branch
  - details
  - eventId
  - installationId
  - organization
  - repository
  - tasks_for
  - version
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/github-push-message.json#/properties
required:
- version
- organization
- repository
- installationId
- eventId
- body
- tasks_for
- branch
title: GitHub Push Message
type: object


https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#
==============================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#
TYPE_NAME: GitHubReleaseMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a GitHub release has occurred
properties:
  MemberNames:
    body: Body
    branch: Branch
    details: Details
    eventId: EventID
    installationId: InstallationID
    organization: Organization
    repository: Repository
    tasks_for: Tasks_For
    version: Version
  Properties:
    body:
      IS_REQUIRED: true
      PROPERTY_NAME: body
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/body
      TYPE_NAME: ""
      description: |
        The raw body of github event (for version 1)
      type: object
    branch:
      IS_REQUIRED: true
      PROPERTY_NAME: branch
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/branch
      TYPE_NAME: ""
      description: |
        The head ref of the event (for version 1)
      type: string
    details:
      IS_REQUIRED: false
      PROPERTY_NAME: details
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/details
      TYPE_NAME: ""
      description: |
        Metadata describing the release (for version 0)
      type: object
    eventId:
      IS_REQUIRED: true
      PROPERTY_NAME: eventId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/eventId
      TYPE_NAME: ""
      description: |
        The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
      pattern: ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
      type: string
    installationId:
      IS_REQUIRED: true
      PROPERTY_NAME: installationId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/installationId
      TYPE_NAME: ""
      description: |
        The installation which had an event.
      maximum: 10000000000
      minimum: 0
      type: integer
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/organization
      TYPE_NAME: ""
      description: |
        The GitHub `organization` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/repository
      TYPE_NAME: ""
      description: |
        The GitHub `repository` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    tasks_for:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks_for
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/tasks_for
      TYPE_NAME: ""
      description: |
        The type of the event (for version 1)
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: number
  SortedPropertyNames:
  - body
  - branch
  - details
  - eventId
  - installationId
  - organization
  - repository
  - tasks_for
  - version
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/github-release-message.json#/properties
required:
- version
- organization
- repository
- installationId
- eventId
- body
- tasks_for
- branch
title: GitHub Release Message
type: object


https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#
=====================================================================================
$id: https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#
TYPE_NAME: TaskGroupDefinedCreateStatus
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Indicates that this service has created a new task group in response to a GitHub event.
  This message is for internal use only and should not be relied on for other purposes.
  Full specification on [GitHub docs](https://developer.github.com/v3/repos/statuses/#create-a-status)
properties:
  MemberNames:
    organization: Organization
    repository: Repository
    taskGroupId: TaskGroupID
    version: Version
  Properties:
    organization:
      IS_REQUIRED: true
      PROPERTY_NAME: organization
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#/properties/organization
      TYPE_NAME: ""
      description: |
        The GitHub `organization` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    repository:
      IS_REQUIRED: true
      PROPERTY_NAME: repository
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#/properties/repository
      TYPE_NAME: ""
      description: |
        The GitHub `repository` which had an event.
      maxLength: 100
      minLength: 1
      pattern: ^([a-zA-Z0-9-_%]*)$
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#/properties/taskGroupId
      TYPE_NAME: ""
      description: The id of the taskGroup that had been created.
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: number
  SortedPropertyNames:
  - organization
  - repository
  - taskGroupId
  - version
  SourceURL: https://taskcluster-staging.net/schemas/github/v1/task-group-creation-requested.json#/properties
required:
- taskGroupId
- organization
- repository
- version
title: Task Group Defined - Create Status
type: object


https://taskcluster-staging.net/references/hooks/v1/api.json
============================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Hooks API Documentation'
Description = 'Hooks are a mechanism for creating tasks in response to events.

Hooks are identified with a `hookGroupId` and a `hookId`.

When an event occurs, the resulting task is automatically created.  The
task is created using the scope `assume:hook-id:<hookGroupId>/<hookId>`,
which must have scopes to make the createTask call, including satisfying all
scopes in `task.scopes`.  The new task has a `taskGroupId` equal to its
`taskId`, as is the convention for decision tasks.

Hooks can have a "schedule" indicating specific times that new tasks should
be created.  Each schedule is in a simple cron format, per 
https://www.npmjs.com/package/cron-parser.  For example:
 * `['0 0 1 * * *']` -- daily at 1:00 UTC
 * `['0 0 9,21 * * 1-5', '0 0 12 * * 0,6']` -- weekdays at 9:00 and 21:00 UTC, weekends at noon

The task definition is used as a JSON-e template, with a context depending on how it is fired.  See
[/docs/reference/core/taskcluster-hooks/docs/firing-hooks](firing-hooks)
for more information.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'listHookGroups'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-hook-groups-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/list-hook-groups-response.json#'
    Entry Title       = 'List hook groups'
    Entry Description = 'This endpoint will return a list of all hook groups with at least one hook.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>'
    Entry Args        = '[hookGroupId]'
    Entry Query        = '[]'
    Entry Name        = 'listHooks'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-hooks-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/list-hooks-response.json#'
    Entry Title       = 'List hooks in a given group'
    Entry Description = 'This endpoint will return a list of all the hook definitions within a
given hook group.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'hook'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/hook-definition.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#'
    Entry Title       = 'Get hook definition'
    Entry Description = 'This endpoint will return the hook definition for the given `hookGroupId`
and hookId.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/status'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'getHookStatus'
    Entry Stability   = 'deprecated'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/hook-status.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#'
    Entry Title       = 'Get hook status'
    Entry Description = 'This endpoint will return the current status of the hook.  This represents a
snapshot in time and may vary from one call to the next.

This method is deprecated in favor of listLastFires.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'createHook'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* hooks:modify-hook:<hookGroupId>/<hookId>
* assume:hook-id:<hookGroupId>/<hookId>'
    Entry Input       = 'v1/create-hook-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#'
    Entry Output      = 'v1/hook-definition.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#'
    Entry Title       = 'Create a hook'
    Entry Description = 'This endpoint will create a new hook.

The caller's credentials must include the role that will be used to
create the task.  That role must satisfy task.scopes as well as the
necessary scopes to add the task to the queue.'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'updateHook'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* hooks:modify-hook:<hookGroupId>/<hookId>
* assume:hook-id:<hookGroupId>/<hookId>'
    Entry Input       = 'v1/create-hook-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#'
    Entry Output      = 'v1/hook-definition.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#'
    Entry Title       = 'Update a hook'
    Entry Description = 'This endpoint will update an existing hook.  All fields except
`hookGroupId` and `hookId` can be modified.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'removeHook'
    Entry Stability   = 'stable'
    Entry Scopes      = 'hooks:modify-hook:<hookGroupId>/<hookId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Delete a hook'
    Entry Description = 'This endpoint will remove a hook definition.'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/trigger'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'triggerHook'
    Entry Stability   = 'stable'
    Entry Scopes      = 'hooks:trigger-hook:<hookGroupId>/<hookId>'
    Entry Input       = 'v1/trigger-hook.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook.json#'
    Entry Output      = 'v1/trigger-hook-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#'
    Entry Title       = 'Trigger a hook'
    Entry Description = 'This endpoint will trigger the creation of a task from a hook definition.

The HTTP payload must match the hooks `triggerSchema`.  If it does, it is
provided as the `payload` property of the JSON-e context used to render the
task template.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/token'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'getTriggerToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'hooks:get-trigger-token:<hookGroupId>/<hookId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/trigger-token-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/trigger-token-response.json#'
    Entry Title       = 'Get a trigger token'
    Entry Description = 'Retrieve a unique secret token for triggering the specified hook. This
token can be deactivated with `resetTriggerToken`.'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/token'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'resetTriggerToken'
    Entry Stability   = 'stable'
    Entry Scopes      = 'hooks:reset-trigger-token:<hookGroupId>/<hookId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/trigger-token-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/trigger-token-response.json#'
    Entry Title       = 'Reset a trigger token'
    Entry Description = 'Reset the token for triggering a given hook. This invalidates token that
may have been issued via getTriggerToken with a new token.'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/trigger/<token>'
    Entry Args        = '[hookGroupId hookId token]'
    Entry Query        = '[]'
    Entry Name        = 'triggerHookWithToken'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = 'v1/trigger-hook.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook.json#'
    Entry Output      = 'v1/trigger-hook-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#'
    Entry Title       = 'Trigger a hook with a token'
    Entry Description = 'This endpoint triggers a defined hook with a valid token.

The HTTP payload must match the hooks `triggerSchema`.  If it does, it is
provided as the `payload` property of the JSON-e context used to render the
task template.'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/hooks/<hookGroupId>/<hookId>/last-fires'
    Entry Args        = '[hookGroupId hookId]'
    Entry Query        = '[]'
    Entry Name        = 'listLastFires'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-lastFires-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#'
    Entry Title       = 'Get information about recent hook fires'
    Entry Description = 'This endpoint will return information about the the last few times this hook has been
fired, including whether the hook was fired successfully or not'


https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items
=====================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items
TYPE_NAME: Binding
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Exchange and RoutingKeyPattern for each binding
properties:
  MemberNames:
    exchange: Exchange
    routingKeyPattern: RoutingKeyPattern
  Properties:
    exchange:
      IS_REQUIRED: true
      PROPERTY_NAME: exchange
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/exchange
      TYPE_NAME: ""
      minLength: 1
      type: string
    routingKeyPattern:
      IS_REQUIRED: true
      PROPERTY_NAME: routingKeyPattern
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/routingKeyPattern
      TYPE_NAME: ""
      minLength: 1
      type: string
  SortedPropertyNames:
  - exchange
  - routingKeyPattern
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties
required:
- exchange
- routingKeyPattern
title: Binding
type: object


https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#
TYPE_NAME: HookCreationRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a hook that can create tasks at defined times.
properties:
  MemberNames:
    bindings: Bindings
    hookGroupId: HookGroupID
    hookId: HookID
    metadata: Metadata
    schedule: Schedule
    task: Task
    triggerSchema: TriggerSchema
  Properties:
    bindings:
      $ref: bindings.json#
      IS_REQUIRED: false
      PROPERTY_NAME: bindings
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
        TYPE_NAME: ""
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items
          TYPE_NAME: Binding
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Exchange and RoutingKeyPattern for each binding
          properties:
            MemberNames:
              exchange: Exchange
              routingKeyPattern: RoutingKeyPattern
            Properties:
              exchange:
                IS_REQUIRED: true
                PROPERTY_NAME: exchange
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/exchange
                TYPE_NAME: ""
                minLength: 1
                type: string
              routingKeyPattern:
                IS_REQUIRED: true
                PROPERTY_NAME: routingKeyPattern
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/routingKeyPattern
                TYPE_NAME: ""
                minLength: 1
                type: string
            SortedPropertyNames:
            - exchange
            - routingKeyPattern
            SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties
          required:
          - exchange
          - routingKeyPattern
          title: Binding
          type: object
        title: List of Bindings
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/bindings
      TYPE_NAME: ""
    hookGroupId:
      IS_REQUIRED: false
      PROPERTY_NAME: hookGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/hookGroupId
      TYPE_NAME: ""
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    hookId:
      IS_REQUIRED: false
      PROPERTY_NAME: hookId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/hookId
      TYPE_NAME: ""
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_/]*)$
      type: string
    metadata:
      $ref: hook-metadata.json#
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
        TYPE_NAME: HookMetadata
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            description: Description
            emailOnError: EmailOnError
            name: Name
            owner: Owner
          Properties:
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/description
              TYPE_NAME: ""
              description: Long-form of the hook's purpose and behavior
              maxLength: 32768
              title: Description
              type: string
            emailOnError:
              IS_REQUIRED: false
              PROPERTY_NAME: emailOnError
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/emailOnError
              TYPE_NAME: ""
              default: true
              description: Whether to email the owner on an error creating the task.
              title: Email on error
              type: boolean
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/name
              TYPE_NAME: ""
              description: Human readable name of the hook
              maxLength: 255
              title: Name
              type: string
            owner:
              IS_REQUIRED: true
              PROPERTY_NAME: owner
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/owner
              TYPE_NAME: ""
              description: Email of the person or group responsible for this hook.
              format: email
              maxLength: 255
              title: Owner
              type: string
          SortedPropertyNames:
          - description
          - emailOnError
          - name
          - owner
          SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties
        required:
        - name
        - description
        - owner
        title: Hook Metadata
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/metadata
      TYPE_NAME: ""
    schedule:
      IS_REQUIRED: false
      PROPERTY_NAME: schedule
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/schedule
      TYPE_NAME: ""
      default: []
      description: |
        Definition of the times at which a hook will result in creation of a task.
        If several patterns are specified, tasks will be created at any time
        specified by one or more patterns.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/schedule/items
        TYPE_NAME: ""
        description: |
          Cron-like specification for when tasks should be created.  The pattern is
          parsed in a UTC context.
          See [cron-parser on npm](https://www.npmjs.com/package/cron-parser).
          Note that tasks may not be created at exactly the time specified.
        title: Cron Pattern
        type: string
      type: array
      uniqueItems: true
    task:
      IS_REQUIRED: true
      PROPERTY_NAME: task
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/task
      TYPE_NAME: ""
      description: |
        Template for the task definition.  This is rendered using [JSON-e](https://taskcluster.github.io/json-e/)
        as described in [firing hooks](/docs/reference/core/taskcluster-hooks/docs/firing-hooks) to produce
        a task definition that is submitted to the Queue service.
      title: Task Template
      type: object
    triggerSchema:
      IS_REQUIRED: false
      PROPERTY_NAME: triggerSchema
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties/triggerSchema
      TYPE_NAME: ""
      default:
        additionalProperties: false
        type: object
      type: object
  SortedPropertyNames:
  - bindings
  - hookGroupId
  - hookId
  - metadata
  - schedule
  - task
  - triggerSchema
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/create-hook-request.json#/properties
required:
- metadata
- task
title: Hook creation request
type: object


https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#
======================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#
TYPE_NAME: HookDefinition
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a hook that will create tasks when defined events occur.
properties:
  MemberNames:
    bindings: Bindings
    hookGroupId: HookGroupID
    hookId: HookID
    metadata: Metadata
    schedule: Schedule
    task: Task
    triggerSchema: TriggerSchema
  Properties:
    bindings:
      $ref: bindings.json#
      IS_REQUIRED: false
      PROPERTY_NAME: bindings
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
        TYPE_NAME: ""
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items
          TYPE_NAME: Binding
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Exchange and RoutingKeyPattern for each binding
          properties:
            MemberNames:
              exchange: Exchange
              routingKeyPattern: RoutingKeyPattern
            Properties:
              exchange:
                IS_REQUIRED: true
                PROPERTY_NAME: exchange
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/exchange
                TYPE_NAME: ""
                minLength: 1
                type: string
              routingKeyPattern:
                IS_REQUIRED: true
                PROPERTY_NAME: routingKeyPattern
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/routingKeyPattern
                TYPE_NAME: ""
                minLength: 1
                type: string
            SortedPropertyNames:
            - exchange
            - routingKeyPattern
            SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties
          required:
          - exchange
          - routingKeyPattern
          title: Binding
          type: object
        title: List of Bindings
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/bindings
      TYPE_NAME: ""
    hookGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/hookGroupId
      TYPE_NAME: ""
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    hookId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/hookId
      TYPE_NAME: ""
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_/]*)$
      type: string
    metadata:
      $ref: hook-metadata.json#
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
        TYPE_NAME: HookMetadata
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            description: Description
            emailOnError: EmailOnError
            name: Name
            owner: Owner
          Properties:
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/description
              TYPE_NAME: ""
              description: Long-form of the hook's purpose and behavior
              maxLength: 32768
              title: Description
              type: string
            emailOnError:
              IS_REQUIRED: false
              PROPERTY_NAME: emailOnError
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/emailOnError
              TYPE_NAME: ""
              default: true
              description: Whether to email the owner on an error creating the task.
              title: Email on error
              type: boolean
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/name
              TYPE_NAME: ""
              description: Human readable name of the hook
              maxLength: 255
              title: Name
              type: string
            owner:
              IS_REQUIRED: true
              PROPERTY_NAME: owner
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/owner
              TYPE_NAME: ""
              description: Email of the person or group responsible for this hook.
              format: email
              maxLength: 255
              title: Owner
              type: string
          SortedPropertyNames:
          - description
          - emailOnError
          - name
          - owner
          SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties
        required:
        - name
        - description
        - owner
        title: Hook Metadata
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/metadata
      TYPE_NAME: ""
    schedule:
      $ref: schedule.json#
      IS_REQUIRED: true
      PROPERTY_NAME: schedule
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#
        TYPE_NAME: ""
        default: []
        description: |
          A list of cron-style definitions to represent a set of moments in (UTC) time.
          If several patterns are specified, a given moment in time represented by
          more than one pattern is considered only to be counted once, in other words
          it is allowed for the cron patterns to overlap; duplicates are redundant.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#/items
          TYPE_NAME: ""
          description: |
            Cron-like specification for when tasks should be created.  The pattern is
            parsed in a UTC context.
            See [cron-parser on npm](https://www.npmjs.com/package/cron-parser).
          title: Cron Pattern
          type: string
        title: Schedule
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/schedule
      TYPE_NAME: ""
    task:
      IS_REQUIRED: true
      PROPERTY_NAME: task
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/task
      TYPE_NAME: ""
      description: |
        Template for the task definition.  This is rendered using [JSON-e](https://taskcluster.github.io/json-e/)
        as described in [firing hooks](/docs/reference/core/taskcluster-hooks/docs/firing-hooks) to produce
        a task definition that is submitted to the Queue service.
      title: Task Template
      type: object
    triggerSchema:
      IS_REQUIRED: true
      PROPERTY_NAME: triggerSchema
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/triggerSchema
      TYPE_NAME: ""
      type: object
  SortedPropertyNames:
  - bindings
  - hookGroupId
  - hookId
  - metadata
  - schedule
  - task
  - triggerSchema
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties
required:
- hookGroupId
- hookId
- metadata
- task
- schedule
- triggerSchema
title: Hook definition
type: object


https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
====================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
TYPE_NAME: HookMetadata
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    description: Description
    emailOnError: EmailOnError
    name: Name
    owner: Owner
  Properties:
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/description
      TYPE_NAME: ""
      description: Long-form of the hook's purpose and behavior
      maxLength: 32768
      title: Description
      type: string
    emailOnError:
      IS_REQUIRED: false
      PROPERTY_NAME: emailOnError
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/emailOnError
      TYPE_NAME: ""
      default: true
      description: Whether to email the owner on an error creating the task.
      title: Email on error
      type: boolean
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/name
      TYPE_NAME: ""
      description: Human readable name of the hook
      maxLength: 255
      title: Name
      type: string
    owner:
      IS_REQUIRED: true
      PROPERTY_NAME: owner
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/owner
      TYPE_NAME: ""
      description: Email of the person or group responsible for this hook.
      format: email
      maxLength: 255
      title: Owner
      type: string
  SortedPropertyNames:
  - description
  - emailOnError
  - name
  - owner
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties
required:
- name
- description
- owner
title: Hook Metadata
type: object


https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#
==================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#
TYPE_NAME: HookStatusResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A snapshot of the current status of a hook.
properties:
  MemberNames:
    lastFire: LastFire
    nextScheduledDate: NextScheduledDate
  Properties:
    lastFire:
      IS_REQUIRED: true
      PROPERTY_NAME: lastFire
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire
      TYPE_NAME: ""
      description: |
        Information about the last time this hook fired.  This property is only present
        if the hook has fired at least once.
      oneOf:
        Items:
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]
          TYPE_NAME: SuccessfulFire
          additionalProperties:
            Boolean: false
            Properties: null
          description: Information about a successful firing of the hook
          properties:
            MemberNames:
              result: Result
              taskId: TaskID
              time: Time
            Properties:
              result:
                IS_REQUIRED: true
                PROPERTY_NAME: result
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/result
                TYPE_NAME: ""
                enum:
                - success
                type: string
              taskId:
                IS_REQUIRED: true
                PROPERTY_NAME: taskId
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/taskId
                TYPE_NAME: ""
                description: The task created
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                type: string
              time:
                IS_REQUIRED: true
                PROPERTY_NAME: time
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/time
                TYPE_NAME: ""
                description: |
                  The time the task was created.  This will not necessarily match `task.created`.
                format: date-time
                type: string
            SortedPropertyNames:
            - result
            - taskId
            - time
            SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties
          required:
          - result
          - taskId
          - time
          title: Successful Fire
          type: object
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]
          TYPE_NAME: FailedFire
          additionalProperties:
            Boolean: false
            Properties: null
          description: Information about an unsuccessful firing of the hook
          properties:
            MemberNames:
              error: Error
              result: Result
              time: Time
            Properties:
              error:
                IS_REQUIRED: true
                PROPERTY_NAME: error
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/error
                TYPE_NAME: ""
                description: |
                  The error that occurred when firing the task.  This is typically,
                  but not always, an API error message.
                type: object
              result:
                IS_REQUIRED: true
                PROPERTY_NAME: result
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/result
                TYPE_NAME: ""
                enum:
                - error
                type: string
              time:
                IS_REQUIRED: true
                PROPERTY_NAME: time
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/time
                TYPE_NAME: ""
                description: |
                  The time the task was created.  This will not necessarily match `task.created`.
                format: date-time
                type: string
            SortedPropertyNames:
            - error
            - result
            - time
            SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties
          required:
          - result
          - error
          - time
          title: Failed Fire
          type: object
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]
          TYPE_NAME: NoFire
          additionalProperties:
            Boolean: false
            Properties: null
          description: Information about no firing of the hook (e.g., a new hook)
          properties:
            MemberNames:
              result: Result
            Properties:
              result:
                IS_REQUIRED: true
                PROPERTY_NAME: result
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties/result
                TYPE_NAME: ""
                enum:
                - no-fire
                type: string
            SortedPropertyNames:
            - result
            SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties
          required:
          - result
          title: No Fire
          type: object
        SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf
      type: object
    nextScheduledDate:
      IS_REQUIRED: false
      PROPERTY_NAME: nextScheduledDate
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/nextScheduledDate
      TYPE_NAME: ""
      description: |
        The next time this hook's task is scheduled to be created. This property
        is only present if there is a scheduled next time. Some hooks don't have
        any schedules.
      format: date-time
      type: string
  SortedPropertyNames:
  - lastFire
  - nextScheduledDate
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties
required:
- lastFire
title: Hook status response
type: object


https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]
===============================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]
TYPE_NAME: SuccessfulFire
additionalProperties:
  Boolean: false
  Properties: null
description: Information about a successful firing of the hook
properties:
  MemberNames:
    result: Result
    taskId: TaskID
    time: Time
  Properties:
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/result
      TYPE_NAME: ""
      enum:
      - success
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/taskId
      TYPE_NAME: ""
      description: The task created
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      type: string
    time:
      IS_REQUIRED: true
      PROPERTY_NAME: time
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties/time
      TYPE_NAME: ""
      description: |
        The time the task was created.  This will not necessarily match `task.created`.
      format: date-time
      type: string
  SortedPropertyNames:
  - result
  - taskId
  - time
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[0]/properties
required:
- result
- taskId
- time
title: Successful Fire
type: object


https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]
===============================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]
TYPE_NAME: FailedFire
additionalProperties:
  Boolean: false
  Properties: null
description: Information about an unsuccessful firing of the hook
properties:
  MemberNames:
    error: Error
    result: Result
    time: Time
  Properties:
    error:
      IS_REQUIRED: true
      PROPERTY_NAME: error
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/error
      TYPE_NAME: ""
      description: |
        The error that occurred when firing the task.  This is typically,
        but not always, an API error message.
      type: object
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/result
      TYPE_NAME: ""
      enum:
      - error
      type: string
    time:
      IS_REQUIRED: true
      PROPERTY_NAME: time
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties/time
      TYPE_NAME: ""
      description: |
        The time the task was created.  This will not necessarily match `task.created`.
      format: date-time
      type: string
  SortedPropertyNames:
  - error
  - result
  - time
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[1]/properties
required:
- result
- error
- time
title: Failed Fire
type: object


https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]
===============================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]
TYPE_NAME: NoFire
additionalProperties:
  Boolean: false
  Properties: null
description: Information about no firing of the hook (e.g., a new hook)
properties:
  MemberNames:
    result: Result
  Properties:
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties/result
      TYPE_NAME: ""
      enum:
      - no-fire
      type: string
  SortedPropertyNames:
  - result
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-status.json#/properties/lastFire/oneOf[2]/properties
required:
- result
title: No Fire
type: object


https://taskcluster-staging.net/schemas/hooks/v1/list-hook-groups-response.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/list-hook-groups-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-hook-groups-response.json#
TYPE_NAME: HookGroups
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of `hookGroupIds`.
properties:
  MemberNames:
    groups: Groups
  Properties:
    groups:
      IS_REQUIRED: true
      PROPERTY_NAME: groups
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-hook-groups-response.json#/properties/groups
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-hook-groups-response.json#/properties/groups/items
        TYPE_NAME: ""
        type: string
      title: Groups
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - groups
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/list-hook-groups-response.json#/properties
required:
- groups
title: Hook groups
type: object


https://taskcluster-staging.net/schemas/hooks/v1/list-hooks-response.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/list-hooks-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-hooks-response.json#
TYPE_NAME: HookList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of hooks
properties:
  MemberNames:
    hooks: Hooks
  Properties:
    hooks:
      IS_REQUIRED: true
      PROPERTY_NAME: hooks
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-hooks-response.json#/properties/hooks
      TYPE_NAME: ""
      items:
        $ref: hook-definition.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#
        REF_SUBSCHEMA:
          $id: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#
          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#
          TYPE_NAME: HookDefinition
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Definition of a hook that will create tasks when defined events occur.
          properties:
            MemberNames:
              bindings: Bindings
              hookGroupId: HookGroupID
              hookId: HookID
              metadata: Metadata
              schedule: Schedule
              task: Task
              triggerSchema: TriggerSchema
            Properties:
              bindings:
                $ref: bindings.json#
                IS_REQUIRED: false
                PROPERTY_NAME: bindings
                REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
                REF_SUBSCHEMA:
                  $id: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
                  $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#
                  TYPE_NAME: ""
                  items:
                    IS_REQUIRED: false
                    PROPERTY_NAME: ""
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items
                    TYPE_NAME: Binding
                    additionalProperties:
                      Boolean: false
                      Properties: null
                    description: |
                      Exchange and RoutingKeyPattern for each binding
                    properties:
                      MemberNames:
                        exchange: Exchange
                        routingKeyPattern: RoutingKeyPattern
                      Properties:
                        exchange:
                          IS_REQUIRED: true
                          PROPERTY_NAME: exchange
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/exchange
                          TYPE_NAME: ""
                          minLength: 1
                          type: string
                        routingKeyPattern:
                          IS_REQUIRED: true
                          PROPERTY_NAME: routingKeyPattern
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties/routingKeyPattern
                          TYPE_NAME: ""
                          minLength: 1
                          type: string
                      SortedPropertyNames:
                      - exchange
                      - routingKeyPattern
                      SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/bindings.json#/items/properties
                    required:
                    - exchange
                    - routingKeyPattern
                    title: Binding
                    type: object
                  title: List of Bindings
                  type: array
                  uniqueItems: true
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/bindings
                TYPE_NAME: ""
              hookGroupId:
                IS_REQUIRED: true
                PROPERTY_NAME: hookGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/hookGroupId
                TYPE_NAME: ""
                maxLength: 64
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                type: string
              hookId:
                IS_REQUIRED: true
                PROPERTY_NAME: hookId
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/hookId
                TYPE_NAME: ""
                maxLength: 64
                minLength: 1
                pattern: ^([a-zA-Z0-9-_/]*)$
                type: string
              metadata:
                $ref: hook-metadata.json#
                IS_REQUIRED: true
                PROPERTY_NAME: metadata
                REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
                REF_SUBSCHEMA:
                  $id: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
                  $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#
                  TYPE_NAME: HookMetadata
                  additionalProperties:
                    Boolean: false
                    Properties: null
                  properties:
                    MemberNames:
                      description: Description
                      emailOnError: EmailOnError
                      name: Name
                      owner: Owner
                    Properties:
                      description:
                        IS_REQUIRED: true
                        PROPERTY_NAME: description
                        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/description
                        TYPE_NAME: ""
                        description: Long-form of the hook's purpose and behavior
                        maxLength: 32768
                        title: Description
                        type: string
                      emailOnError:
                        IS_REQUIRED: false
                        PROPERTY_NAME: emailOnError
                        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/emailOnError
                        TYPE_NAME: ""
                        default: true
                        description: Whether to email the owner on an error creating
                          the task.
                        title: Email on error
                        type: boolean
                      name:
                        IS_REQUIRED: true
                        PROPERTY_NAME: name
                        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/name
                        TYPE_NAME: ""
                        description: Human readable name of the hook
                        maxLength: 255
                        title: Name
                        type: string
                      owner:
                        IS_REQUIRED: true
                        PROPERTY_NAME: owner
                        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties/owner
                        TYPE_NAME: ""
                        description: Email of the person or group responsible for
                          this hook.
                        format: email
                        maxLength: 255
                        title: Owner
                        type: string
                    SortedPropertyNames:
                    - description
                    - emailOnError
                    - name
                    - owner
                    SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-metadata.json#/properties
                  required:
                  - name
                  - description
                  - owner
                  title: Hook Metadata
                  type: object
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/metadata
                TYPE_NAME: ""
              schedule:
                $ref: schedule.json#
                IS_REQUIRED: true
                PROPERTY_NAME: schedule
                REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#
                REF_SUBSCHEMA:
                  $id: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#
                  $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#
                  TYPE_NAME: ""
                  default: []
                  description: |
                    A list of cron-style definitions to represent a set of moments in (UTC) time.
                    If several patterns are specified, a given moment in time represented by
                    more than one pattern is considered only to be counted once, in other words
                    it is allowed for the cron patterns to overlap; duplicates are redundant.
                  items:
                    IS_REQUIRED: false
                    PROPERTY_NAME: ""
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/schedule.json#/items
                    TYPE_NAME: ""
                    description: |
                      Cron-like specification for when tasks should be created.  The pattern is
                      parsed in a UTC context.
                      See [cron-parser on npm](https://www.npmjs.com/package/cron-parser).
                    title: Cron Pattern
                    type: string
                  title: Schedule
                  type: array
                  uniqueItems: true
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/schedule
                TYPE_NAME: ""
              task:
                IS_REQUIRED: true
                PROPERTY_NAME: task
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/task
                TYPE_NAME: ""
                description: |
                  Template for the task definition.  This is rendered using [JSON-e](https://taskcluster.github.io/json-e/)
                  as described in [firing hooks](/docs/reference/core/taskcluster-hooks/docs/firing-hooks) to produce
                  a task definition that is submitted to the Queue service.
                title: Task Template
                type: object
              triggerSchema:
                IS_REQUIRED: true
                PROPERTY_NAME: triggerSchema
                SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties/triggerSchema
                TYPE_NAME: ""
                type: object
            SortedPropertyNames:
            - bindings
            - hookGroupId
            - hookId
            - metadata
            - schedule
            - task
            - triggerSchema
            SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/hook-definition.json#/properties
          required:
          - hookGroupId
          - hookId
          - metadata
          - task
          - schedule
          - triggerSchema
          title: Hook definition
          type: object
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-hooks-response.json#/properties/hooks/items
        TYPE_NAME: ""
      title: Hooks
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - hooks
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/list-hooks-response.json#/properties
required:
- hooks
title: Hook list
type: object


https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#
==============================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#
TYPE_NAME: LastFiresList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of lastFires
properties:
  MemberNames:
    lastFires: LastFires
  Properties:
    lastFires:
      IS_REQUIRED: true
      PROPERTY_NAME: lastFires
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items
        TYPE_NAME: Var
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            error: Error
            firedBy: FiredBy
            hookGroupId: HookGroupID
            hookId: HookID
            result: Result
            taskCreateTime: TaskCreateTime
            taskId: TaskID
          Properties:
            error:
              IS_REQUIRED: true
              PROPERTY_NAME: error
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/error
              TYPE_NAME: ""
              description: |
                The error that occurred when firing the task. This is typically,
                but not always, an API error message.
              type: string
            firedBy:
              IS_REQUIRED: true
              PROPERTY_NAME: firedBy
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/firedBy
              TYPE_NAME: ""
              type: string
            hookGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: hookGroupId
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/hookGroupId
              TYPE_NAME: ""
              maxLength: 64
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
            hookId:
              IS_REQUIRED: true
              PROPERTY_NAME: hookId
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/hookId
              TYPE_NAME: ""
              maxLength: 64
              minLength: 1
              pattern: ^([a-zA-Z0-9-_/]*)$
              type: string
            result:
              IS_REQUIRED: true
              PROPERTY_NAME: result
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/result
              TYPE_NAME: ""
              description: Information about success or failure of firing of the hook
              enum:
              - success
              - error
              type: string
            taskCreateTime:
              IS_REQUIRED: true
              PROPERTY_NAME: taskCreateTime
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/taskCreateTime
              TYPE_NAME: ""
              description: Time when the task was created
              format: date-time
              type: string
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
          SortedPropertyNames:
          - error
          - firedBy
          - hookGroupId
          - hookId
          - result
          - taskCreateTime
          - taskId
          SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties
        required:
        - hookGroupId
        - hookId
        - taskId
        - firedBy
        - taskCreateTime
        - result
        - error
        type: object
      title: LastFires
      type: array
      uniqueItems: false
  SortedPropertyNames:
  - lastFires
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties
required:
- lastFires
title: LastFires list
type: object


https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items
=========================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items
TYPE_NAME: Var
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    error: Error
    firedBy: FiredBy
    hookGroupId: HookGroupID
    hookId: HookID
    result: Result
    taskCreateTime: TaskCreateTime
    taskId: TaskID
  Properties:
    error:
      IS_REQUIRED: true
      PROPERTY_NAME: error
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/error
      TYPE_NAME: ""
      description: |
        The error that occurred when firing the task. This is typically,
        but not always, an API error message.
      type: string
    firedBy:
      IS_REQUIRED: true
      PROPERTY_NAME: firedBy
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/firedBy
      TYPE_NAME: ""
      type: string
    hookGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/hookGroupId
      TYPE_NAME: ""
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    hookId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/hookId
      TYPE_NAME: ""
      maxLength: 64
      minLength: 1
      pattern: ^([a-zA-Z0-9-_/]*)$
      type: string
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/result
      TYPE_NAME: ""
      description: Information about success or failure of firing of the hook
      enum:
      - success
      - error
      type: string
    taskCreateTime:
      IS_REQUIRED: true
      PROPERTY_NAME: taskCreateTime
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/taskCreateTime
      TYPE_NAME: ""
      description: Time when the task was created
      format: date-time
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
  SortedPropertyNames:
  - error
  - firedBy
  - hookGroupId
  - hookId
  - result
  - taskCreateTime
  - taskId
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/list-lastFires-response.json#/properties/lastFires/items/properties
required:
- hookGroupId
- hookId
- taskId
- firedBy
- taskCreateTime
- result
- error
type: object


https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#
==================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#
TYPE_NAME: TaskStatusStructure
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A representation of **task status** as known by the queue
properties:
  MemberNames:
    status: Status
  Properties:
    status:
      IS_REQUIRED: true
      PROPERTY_NAME: status
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status
      TYPE_NAME: Status
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          deadline: Deadline
          expires: Expires
          provisionerId: ProvisionerID
          retriesLeft: RetriesLeft
          runs: Runs
          schedulerId: SchedulerID
          state: State
          taskGroupId: TaskGroupID
          taskId: TaskID
          workerType: WorkerType
        Properties:
          deadline:
            IS_REQUIRED: true
            PROPERTY_NAME: deadline
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/deadline
            TYPE_NAME: ""
            description: |
              Deadline of the task, `pending` and `running` runs are
              resolved as **exception** if not resolved by other means
              before the deadline. Note, deadline cannot be more than
              5 days into the future
            format: date-time
            title: Deadline
            type: string
          expires:
            IS_REQUIRED: true
            PROPERTY_NAME: expires
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/expires
            TYPE_NAME: ""
            description: |
              Task expiration, time at which task definition and
              status is deleted. Notice that all artifacts for the task
              must have an expiration that is no later than this.
            format: date-time
            title: Expiration
            type: string
          provisionerId:
            IS_REQUIRED: true
            PROPERTY_NAME: provisionerId
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/provisionerId
            TYPE_NAME: ""
            description: |
              Unique identifier for the provisioner that this task must be scheduled on
            maxLength: 38
            minLength: 1
            pattern: ^([a-zA-Z0-9-_]*)$
            title: Provisioner Id
            type: string
          retriesLeft:
            IS_REQUIRED: true
            PROPERTY_NAME: retriesLeft
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/retriesLeft
            TYPE_NAME: ""
            description: |
              Number of retries left for the task in case of infrastructure issues
            maximum: 999
            minimum: 0
            title: Retries Left
            type: integer
          runs:
            IS_REQUIRED: true
            PROPERTY_NAME: runs
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs
            TYPE_NAME: ""
            description: |
              List of runs, ordered so that index `i` has `runId == i`
            items:
              IS_REQUIRED: false
              PROPERTY_NAME: ""
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items
              TYPE_NAME: RunInformation
              additionalProperties:
                Boolean: false
                Properties: null
              description: |
                JSON object with information about a run
              properties:
                MemberNames:
                  reasonCreated: ReasonCreated
                  reasonResolved: ReasonResolved
                  resolved: Resolved
                  runId: RunID
                  scheduled: Scheduled
                  started: Started
                  state: State
                  takenUntil: TakenUntil
                  workerGroup: WorkerGroup
                  workerId: WorkerID
                Properties:
                  reasonCreated:
                    IS_REQUIRED: true
                    PROPERTY_NAME: reasonCreated
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonCreated
                    TYPE_NAME: ""
                    description: |
                      Reason for the creation of this run,
                      **more reasons may be added in the future**.
                    enum:
                    - scheduled
                    - retry
                    - task-retry
                    - rerun
                    - exception
                    title: Reason Created
                    type: string
                  reasonResolved:
                    IS_REQUIRED: false
                    PROPERTY_NAME: reasonResolved
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonResolved
                    TYPE_NAME: ""
                    description: |
                      Reason that run was resolved, this is mainly
                      useful for runs resolved as `exception`.
                      Note, **more reasons may be added in the future**, also this
                      property is only available after the run is resolved.
                    enum:
                    - completed
                    - failed
                    - deadline-exceeded
                    - canceled
                    - superseded
                    - claim-expired
                    - worker-shutdown
                    - malformed-payload
                    - resource-unavailable
                    - internal-error
                    - intermittent-task
                    title: Reason Resolved
                    type: string
                  resolved:
                    IS_REQUIRED: false
                    PROPERTY_NAME: resolved
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/resolved
                    TYPE_NAME: ""
                    description: |
                      Date-time at which this run was resolved, ie. when the run changed
                      state from `running` to either `completed`, `failed` or `exception`.
                      This property is only present after the run as been resolved.
                    format: date-time
                    title: Resolved
                    type: string
                  runId:
                    IS_REQUIRED: true
                    PROPERTY_NAME: runId
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/runId
                    TYPE_NAME: ""
                    description: |
                      Id of this task run, `run-id`s always starts from `0`
                    maximum: 1000
                    minimum: 0
                    title: Run Identifier
                    type: integer
                  scheduled:
                    IS_REQUIRED: true
                    PROPERTY_NAME: scheduled
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/scheduled
                    TYPE_NAME: ""
                    description: |
                      Date-time at which this run was scheduled, ie. when the run was
                      created in state `pending`.
                    format: date-time
                    title: Scheduled
                    type: string
                  started:
                    IS_REQUIRED: false
                    PROPERTY_NAME: started
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/started
                    TYPE_NAME: ""
                    description: |
                      Date-time at which this run was claimed, ie. when the run changed
                      state from `pending` to `running`. This property is only present
                      after the run has been claimed.
                    format: date-time
                    title: Started
                    type: string
                  state:
                    IS_REQUIRED: true
                    PROPERTY_NAME: state
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/state
                    TYPE_NAME: ""
                    description: |
                      State of this run
                    enum:
                    - pending
                    - running
                    - completed
                    - failed
                    - exception
                    title: Run State
                    type: string
                  takenUntil:
                    IS_REQUIRED: false
                    PROPERTY_NAME: takenUntil
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/takenUntil
                    TYPE_NAME: ""
                    description: |
                      Time at which the run expires and is resolved as `failed`, if the
                      run isn't reclaimed. Note, only present after the run has been
                      claimed.
                    format: date-time
                    title: Taken Until
                    type: string
                  workerGroup:
                    IS_REQUIRED: false
                    PROPERTY_NAME: workerGroup
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerGroup
                    TYPE_NAME: ""
                    description: |
                      Identifier for group that worker who executes this run is a part of,
                      this identifier is mainly used for efficient routing.
                      Note, this property is only present after the run is claimed.
                    maxLength: 38
                    minLength: 1
                    pattern: ^([a-zA-Z0-9-_]*)$
                    title: Worker Group
                    type: string
                  workerId:
                    IS_REQUIRED: false
                    PROPERTY_NAME: workerId
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerId
                    TYPE_NAME: ""
                    description: |
                      Identifier for worker evaluating this run within given
                      `workerGroup`. Note, this property is only available after the run
                      has been claimed.
                    maxLength: 38
                    minLength: 1
                    pattern: ^([a-zA-Z0-9-_]*)$
                    title: Worker Identifier
                    type: string
                SortedPropertyNames:
                - reasonCreated
                - reasonResolved
                - resolved
                - runId
                - scheduled
                - started
                - state
                - takenUntil
                - workerGroup
                - workerId
                SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties
              required:
              - runId
              - state
              - reasonCreated
              - scheduled
              title: Run Information
              type: object
            title: List of Runs
            type: array
            uniqueItems: false
          schedulerId:
            IS_REQUIRED: true
            PROPERTY_NAME: schedulerId
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/schedulerId
            TYPE_NAME: ""
            description: |
              Identifier for the scheduler that _defined_ this task.
            maxLength: 38
            minLength: 1
            pattern: ^([a-zA-Z0-9-_]*)$
            title: Scheduler Identifier
            type: string
          state:
            IS_REQUIRED: true
            PROPERTY_NAME: state
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/state
            TYPE_NAME: ""
            description: |
              State of this task. This is just an auxiliary property derived from state
              of latests run, or `unscheduled` if none.
            enum:
            - unscheduled
            - pending
            - running
            - completed
            - failed
            - exception
            title: State
            type: string
          taskGroupId:
            IS_REQUIRED: true
            PROPERTY_NAME: taskGroupId
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/taskGroupId
            TYPE_NAME: ""
            description: |
              Identifier for a group of tasks scheduled together with this task, by
              scheduler identified by `schedulerId`. For tasks scheduled by the
              task-graph scheduler, this is the `taskGraphId`.
            pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
            title: Task-Group Identifier
            type: string
          taskId:
            IS_REQUIRED: true
            PROPERTY_NAME: taskId
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/taskId
            TYPE_NAME: ""
            description: |
              Unique task identifier, this is UUID encoded as
              [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
              stripped of `=` padding.
            pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
            title: Task Identifier
            type: string
          workerType:
            IS_REQUIRED: true
            PROPERTY_NAME: workerType
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/workerType
            TYPE_NAME: ""
            description: |
              Identifier for worker type within the specified provisioner
            maxLength: 38
            minLength: 1
            pattern: ^([a-zA-Z0-9-_]*)$
            title: Worker Type
            type: string
        SortedPropertyNames:
        - deadline
        - expires
        - provisionerId
        - retriesLeft
        - runs
        - schedulerId
        - state
        - taskGroupId
        - taskId
        - workerType
        SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties
      required:
      - taskId
      - provisionerId
      - workerType
      - schedulerId
      - taskGroupId
      - deadline
      - expires
      - retriesLeft
      - state
      - runs
      type: object
  SortedPropertyNames:
  - status
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties
required:
- status
title: Task Status Structure
type: object


https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status
====================================================================================
IS_REQUIRED: true
PROPERTY_NAME: status
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status
TYPE_NAME: Status
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    deadline: Deadline
    expires: Expires
    provisionerId: ProvisionerID
    retriesLeft: RetriesLeft
    runs: Runs
    schedulerId: SchedulerID
    state: State
    taskGroupId: TaskGroupID
    taskId: TaskID
    workerType: WorkerType
  Properties:
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/deadline
      TYPE_NAME: ""
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/expires
      TYPE_NAME: ""
      description: |
        Task expiration, time at which task definition and
        status is deleted. Notice that all artifacts for the task
        must have an expiration that is no later than this.
      format: date-time
      title: Expiration
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/provisionerId
      TYPE_NAME: ""
      description: |
        Unique identifier for the provisioner that this task must be scheduled on
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    retriesLeft:
      IS_REQUIRED: true
      PROPERTY_NAME: retriesLeft
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/retriesLeft
      TYPE_NAME: ""
      description: |
        Number of retries left for the task in case of infrastructure issues
      maximum: 999
      minimum: 0
      title: Retries Left
      type: integer
    runs:
      IS_REQUIRED: true
      PROPERTY_NAME: runs
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs
      TYPE_NAME: ""
      description: |
        List of runs, ordered so that index `i` has `runId == i`
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items
        TYPE_NAME: RunInformation
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          JSON object with information about a run
        properties:
          MemberNames:
            reasonCreated: ReasonCreated
            reasonResolved: ReasonResolved
            resolved: Resolved
            runId: RunID
            scheduled: Scheduled
            started: Started
            state: State
            takenUntil: TakenUntil
            workerGroup: WorkerGroup
            workerId: WorkerID
          Properties:
            reasonCreated:
              IS_REQUIRED: true
              PROPERTY_NAME: reasonCreated
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonCreated
              TYPE_NAME: ""
              description: |
                Reason for the creation of this run,
                **more reasons may be added in the future**.
              enum:
              - scheduled
              - retry
              - task-retry
              - rerun
              - exception
              title: Reason Created
              type: string
            reasonResolved:
              IS_REQUIRED: false
              PROPERTY_NAME: reasonResolved
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonResolved
              TYPE_NAME: ""
              description: |
                Reason that run was resolved, this is mainly
                useful for runs resolved as `exception`.
                Note, **more reasons may be added in the future**, also this
                property is only available after the run is resolved.
              enum:
              - completed
              - failed
              - deadline-exceeded
              - canceled
              - superseded
              - claim-expired
              - worker-shutdown
              - malformed-payload
              - resource-unavailable
              - internal-error
              - intermittent-task
              title: Reason Resolved
              type: string
            resolved:
              IS_REQUIRED: false
              PROPERTY_NAME: resolved
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/resolved
              TYPE_NAME: ""
              description: |
                Date-time at which this run was resolved, ie. when the run changed
                state from `running` to either `completed`, `failed` or `exception`.
                This property is only present after the run as been resolved.
              format: date-time
              title: Resolved
              type: string
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/runId
              TYPE_NAME: ""
              description: |
                Id of this task run, `run-id`s always starts from `0`
              maximum: 1000
              minimum: 0
              title: Run Identifier
              type: integer
            scheduled:
              IS_REQUIRED: true
              PROPERTY_NAME: scheduled
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/scheduled
              TYPE_NAME: ""
              description: |
                Date-time at which this run was scheduled, ie. when the run was
                created in state `pending`.
              format: date-time
              title: Scheduled
              type: string
            started:
              IS_REQUIRED: false
              PROPERTY_NAME: started
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/started
              TYPE_NAME: ""
              description: |
                Date-time at which this run was claimed, ie. when the run changed
                state from `pending` to `running`. This property is only present
                after the run has been claimed.
              format: date-time
              title: Started
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/state
              TYPE_NAME: ""
              description: |
                State of this run
              enum:
              - pending
              - running
              - completed
              - failed
              - exception
              title: Run State
              type: string
            takenUntil:
              IS_REQUIRED: false
              PROPERTY_NAME: takenUntil
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/takenUntil
              TYPE_NAME: ""
              description: |
                Time at which the run expires and is resolved as `failed`, if the
                run isn't reclaimed. Note, only present after the run has been
                claimed.
              format: date-time
              title: Taken Until
              type: string
            workerGroup:
              IS_REQUIRED: false
              PROPERTY_NAME: workerGroup
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerGroup
              TYPE_NAME: ""
              description: |
                Identifier for group that worker who executes this run is a part of,
                this identifier is mainly used for efficient routing.
                Note, this property is only present after the run is claimed.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Group
              type: string
            workerId:
              IS_REQUIRED: false
              PROPERTY_NAME: workerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerId
              TYPE_NAME: ""
              description: |
                Identifier for worker evaluating this run within given
                `workerGroup`. Note, this property is only available after the run
                has been claimed.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Identifier
              type: string
          SortedPropertyNames:
          - reasonCreated
          - reasonResolved
          - resolved
          - runId
          - scheduled
          - started
          - state
          - takenUntil
          - workerGroup
          - workerId
          SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties
        required:
        - runId
        - state
        - reasonCreated
        - scheduled
        title: Run Information
        type: object
      title: List of Runs
      type: array
      uniqueItems: false
    schedulerId:
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/schedulerId
      TYPE_NAME: ""
      description: |
        Identifier for the scheduler that _defined_ this task.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/state
      TYPE_NAME: ""
      description: |
        State of this task. This is just an auxiliary property derived from state
        of latests run, or `unscheduled` if none.
      enum:
      - unscheduled
      - pending
      - running
      - completed
      - failed
      - exception
      title: State
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/taskGroupId
      TYPE_NAME: ""
      description: |
        Identifier for a group of tasks scheduled together with this task, by
        scheduler identified by `schedulerId`. For tasks scheduled by the
        task-graph scheduler, this is the `taskGraphId`.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/workerType
      TYPE_NAME: ""
      description: |
        Identifier for worker type within the specified provisioner
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - deadline
  - expires
  - provisionerId
  - retriesLeft
  - runs
  - schedulerId
  - state
  - taskGroupId
  - taskId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties
required:
- taskId
- provisionerId
- workerType
- schedulerId
- taskGroupId
- deadline
- expires
- retriesLeft
- state
- runs
type: object


https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items
==========================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items
TYPE_NAME: RunInformation
additionalProperties:
  Boolean: false
  Properties: null
description: |
  JSON object with information about a run
properties:
  MemberNames:
    reasonCreated: ReasonCreated
    reasonResolved: ReasonResolved
    resolved: Resolved
    runId: RunID
    scheduled: Scheduled
    started: Started
    state: State
    takenUntil: TakenUntil
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    reasonCreated:
      IS_REQUIRED: true
      PROPERTY_NAME: reasonCreated
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonCreated
      TYPE_NAME: ""
      description: |
        Reason for the creation of this run,
        **more reasons may be added in the future**.
      enum:
      - scheduled
      - retry
      - task-retry
      - rerun
      - exception
      title: Reason Created
      type: string
    reasonResolved:
      IS_REQUIRED: false
      PROPERTY_NAME: reasonResolved
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonResolved
      TYPE_NAME: ""
      description: |
        Reason that run was resolved, this is mainly
        useful for runs resolved as `exception`.
        Note, **more reasons may be added in the future**, also this
        property is only available after the run is resolved.
      enum:
      - completed
      - failed
      - deadline-exceeded
      - canceled
      - superseded
      - claim-expired
      - worker-shutdown
      - malformed-payload
      - resource-unavailable
      - internal-error
      - intermittent-task
      title: Reason Resolved
      type: string
    resolved:
      IS_REQUIRED: false
      PROPERTY_NAME: resolved
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/resolved
      TYPE_NAME: ""
      description: |
        Date-time at which this run was resolved, ie. when the run changed
        state from `running` to either `completed`, `failed` or `exception`.
        This property is only present after the run as been resolved.
      format: date-time
      title: Resolved
      type: string
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/runId
      TYPE_NAME: ""
      description: |
        Id of this task run, `run-id`s always starts from `0`
      maximum: 1000
      minimum: 0
      title: Run Identifier
      type: integer
    scheduled:
      IS_REQUIRED: true
      PROPERTY_NAME: scheduled
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/scheduled
      TYPE_NAME: ""
      description: |
        Date-time at which this run was scheduled, ie. when the run was
        created in state `pending`.
      format: date-time
      title: Scheduled
      type: string
    started:
      IS_REQUIRED: false
      PROPERTY_NAME: started
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/started
      TYPE_NAME: ""
      description: |
        Date-time at which this run was claimed, ie. when the run changed
        state from `pending` to `running`. This property is only present
        after the run has been claimed.
      format: date-time
      title: Started
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/state
      TYPE_NAME: ""
      description: |
        State of this run
      enum:
      - pending
      - running
      - completed
      - failed
      - exception
      title: Run State
      type: string
    takenUntil:
      IS_REQUIRED: false
      PROPERTY_NAME: takenUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/takenUntil
      TYPE_NAME: ""
      description: |
        Time at which the run expires and is resolved as `failed`, if the
        run isn't reclaimed. Note, only present after the run has been
        claimed.
      format: date-time
      title: Taken Until
      type: string
    workerGroup:
      IS_REQUIRED: false
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for group that worker who executes this run is a part of,
        this identifier is mainly used for efficient routing.
        Note, this property is only present after the run is claimed.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Group
      type: string
    workerId:
      IS_REQUIRED: false
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for worker evaluating this run within given
        `workerGroup`. Note, this property is only available after the run
        has been claimed.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Identifier
      type: string
  SortedPropertyNames:
  - reasonCreated
  - reasonResolved
  - resolved
  - runId
  - scheduled
  - started
  - state
  - takenUntil
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties
required:
- runId
- state
- reasonCreated
- scheduled
title: Run Information
type: object


https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#
TYPE_NAME: TriggerHookResponse
anyOf:
  Items:
  - $ref: task-status.json#
    $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#
    REF_SUBSCHEMA:
      $id: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#
      $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
      IS_REQUIRED: false
      PROPERTY_NAME: ""
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#
      TYPE_NAME: TaskStatusStructure
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        A representation of **task status** as known by the queue
      properties:
        MemberNames:
          status: Status
        Properties:
          status:
            IS_REQUIRED: true
            PROPERTY_NAME: status
            SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status
            TYPE_NAME: Status
            additionalProperties:
              Boolean: false
              Properties: null
            properties:
              MemberNames:
                deadline: Deadline
                expires: Expires
                provisionerId: ProvisionerID
                retriesLeft: RetriesLeft
                runs: Runs
                schedulerId: SchedulerID
                state: State
                taskGroupId: TaskGroupID
                taskId: TaskID
                workerType: WorkerType
              Properties:
                deadline:
                  IS_REQUIRED: true
                  PROPERTY_NAME: deadline
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/deadline
                  TYPE_NAME: ""
                  description: |
                    Deadline of the task, `pending` and `running` runs are
                    resolved as **exception** if not resolved by other means
                    before the deadline. Note, deadline cannot be more than
                    5 days into the future
                  format: date-time
                  title: Deadline
                  type: string
                expires:
                  IS_REQUIRED: true
                  PROPERTY_NAME: expires
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/expires
                  TYPE_NAME: ""
                  description: |
                    Task expiration, time at which task definition and
                    status is deleted. Notice that all artifacts for the task
                    must have an expiration that is no later than this.
                  format: date-time
                  title: Expiration
                  type: string
                provisionerId:
                  IS_REQUIRED: true
                  PROPERTY_NAME: provisionerId
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/provisionerId
                  TYPE_NAME: ""
                  description: |
                    Unique identifier for the provisioner that this task must be scheduled on
                  maxLength: 38
                  minLength: 1
                  pattern: ^([a-zA-Z0-9-_]*)$
                  title: Provisioner Id
                  type: string
                retriesLeft:
                  IS_REQUIRED: true
                  PROPERTY_NAME: retriesLeft
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/retriesLeft
                  TYPE_NAME: ""
                  description: |
                    Number of retries left for the task in case of infrastructure issues
                  maximum: 999
                  minimum: 0
                  title: Retries Left
                  type: integer
                runs:
                  IS_REQUIRED: true
                  PROPERTY_NAME: runs
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs
                  TYPE_NAME: ""
                  description: |
                    List of runs, ordered so that index `i` has `runId == i`
                  items:
                    IS_REQUIRED: false
                    PROPERTY_NAME: ""
                    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items
                    TYPE_NAME: RunInformation
                    additionalProperties:
                      Boolean: false
                      Properties: null
                    description: |
                      JSON object with information about a run
                    properties:
                      MemberNames:
                        reasonCreated: ReasonCreated
                        reasonResolved: ReasonResolved
                        resolved: Resolved
                        runId: RunID
                        scheduled: Scheduled
                        started: Started
                        state: State
                        takenUntil: TakenUntil
                        workerGroup: WorkerGroup
                        workerId: WorkerID
                      Properties:
                        reasonCreated:
                          IS_REQUIRED: true
                          PROPERTY_NAME: reasonCreated
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonCreated
                          TYPE_NAME: ""
                          description: |
                            Reason for the creation of this run,
                            **more reasons may be added in the future**.
                          enum:
                          - scheduled
                          - retry
                          - task-retry
                          - rerun
                          - exception
                          title: Reason Created
                          type: string
                        reasonResolved:
                          IS_REQUIRED: false
                          PROPERTY_NAME: reasonResolved
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/reasonResolved
                          TYPE_NAME: ""
                          description: |
                            Reason that run was resolved, this is mainly
                            useful for runs resolved as `exception`.
                            Note, **more reasons may be added in the future**, also this
                            property is only available after the run is resolved.
                          enum:
                          - completed
                          - failed
                          - deadline-exceeded
                          - canceled
                          - superseded
                          - claim-expired
                          - worker-shutdown
                          - malformed-payload
                          - resource-unavailable
                          - internal-error
                          - intermittent-task
                          title: Reason Resolved
                          type: string
                        resolved:
                          IS_REQUIRED: false
                          PROPERTY_NAME: resolved
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/resolved
                          TYPE_NAME: ""
                          description: |
                            Date-time at which this run was resolved, ie. when the run changed
                            state from `running` to either `completed`, `failed` or `exception`.
                            This property is only present after the run as been resolved.
                          format: date-time
                          title: Resolved
                          type: string
                        runId:
                          IS_REQUIRED: true
                          PROPERTY_NAME: runId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/runId
                          TYPE_NAME: ""
                          description: |
                            Id of this task run, `run-id`s always starts from `0`
                          maximum: 1000
                          minimum: 0
                          title: Run Identifier
                          type: integer
                        scheduled:
                          IS_REQUIRED: true
                          PROPERTY_NAME: scheduled
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/scheduled
                          TYPE_NAME: ""
                          description: |
                            Date-time at which this run was scheduled, ie. when the run was
                            created in state `pending`.
                          format: date-time
                          title: Scheduled
                          type: string
                        started:
                          IS_REQUIRED: false
                          PROPERTY_NAME: started
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/started
                          TYPE_NAME: ""
                          description: |
                            Date-time at which this run was claimed, ie. when the run changed
                            state from `pending` to `running`. This property is only present
                            after the run has been claimed.
                          format: date-time
                          title: Started
                          type: string
                        state:
                          IS_REQUIRED: true
                          PROPERTY_NAME: state
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/state
                          TYPE_NAME: ""
                          description: |
                            State of this run
                          enum:
                          - pending
                          - running
                          - completed
                          - failed
                          - exception
                          title: Run State
                          type: string
                        takenUntil:
                          IS_REQUIRED: false
                          PROPERTY_NAME: takenUntil
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/takenUntil
                          TYPE_NAME: ""
                          description: |
                            Time at which the run expires and is resolved as `failed`, if the
                            run isn't reclaimed. Note, only present after the run has been
                            claimed.
                          format: date-time
                          title: Taken Until
                          type: string
                        workerGroup:
                          IS_REQUIRED: false
                          PROPERTY_NAME: workerGroup
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerGroup
                          TYPE_NAME: ""
                          description: |
                            Identifier for group that worker who executes this run is a part of,
                            this identifier is mainly used for efficient routing.
                            Note, this property is only present after the run is claimed.
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Worker Group
                          type: string
                        workerId:
                          IS_REQUIRED: false
                          PROPERTY_NAME: workerId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties/workerId
                          TYPE_NAME: ""
                          description: |
                            Identifier for worker evaluating this run within given
                            `workerGroup`. Note, this property is only available after the run
                            has been claimed.
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Worker Identifier
                          type: string
                      SortedPropertyNames:
                      - reasonCreated
                      - reasonResolved
                      - resolved
                      - runId
                      - scheduled
                      - started
                      - state
                      - takenUntil
                      - workerGroup
                      - workerId
                      SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/runs/items/properties
                    required:
                    - runId
                    - state
                    - reasonCreated
                    - scheduled
                    title: Run Information
                    type: object
                  title: List of Runs
                  type: array
                  uniqueItems: false
                schedulerId:
                  IS_REQUIRED: true
                  PROPERTY_NAME: schedulerId
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/schedulerId
                  TYPE_NAME: ""
                  description: |
                    Identifier for the scheduler that _defined_ this task.
                  maxLength: 38
                  minLength: 1
                  pattern: ^([a-zA-Z0-9-_]*)$
                  title: Scheduler Identifier
                  type: string
                state:
                  IS_REQUIRED: true
                  PROPERTY_NAME: state
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/state
                  TYPE_NAME: ""
                  description: |
                    State of this task. This is just an auxiliary property derived from state
                    of latests run, or `unscheduled` if none.
                  enum:
                  - unscheduled
                  - pending
                  - running
                  - completed
                  - failed
                  - exception
                  title: State
                  type: string
                taskGroupId:
                  IS_REQUIRED: true
                  PROPERTY_NAME: taskGroupId
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/taskGroupId
                  TYPE_NAME: ""
                  description: |
                    Identifier for a group of tasks scheduled together with this task, by
                    scheduler identified by `schedulerId`. For tasks scheduled by the
                    task-graph scheduler, this is the `taskGraphId`.
                  pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                  title: Task-Group Identifier
                  type: string
                taskId:
                  IS_REQUIRED: true
                  PROPERTY_NAME: taskId
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/taskId
                  TYPE_NAME: ""
                  description: |
                    Unique task identifier, this is UUID encoded as
                    [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                    stripped of `=` padding.
                  pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                  title: Task Identifier
                  type: string
                workerType:
                  IS_REQUIRED: true
                  PROPERTY_NAME: workerType
                  SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties/workerType
                  TYPE_NAME: ""
                  description: |
                    Identifier for worker type within the specified provisioner
                  maxLength: 38
                  minLength: 1
                  pattern: ^([a-zA-Z0-9-_]*)$
                  title: Worker Type
                  type: string
              SortedPropertyNames:
              - deadline
              - expires
              - provisionerId
              - retriesLeft
              - runs
              - schedulerId
              - state
              - taskGroupId
              - taskId
              - workerType
              SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties/status/properties
            required:
            - taskId
            - provisionerId
            - workerType
            - schedulerId
            - taskGroupId
            - deadline
            - expires
            - retriesLeft
            - state
            - runs
            type: object
        SortedPropertyNames:
        - status
        SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/task-status.json#/properties
      required:
      - status
      title: Task Status Structure
      type: object
    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#/anyOf[0]
    TYPE_NAME: ""
    description: |
      Response to a `triggerHook` or `triggerHookWithToken` call.

      In most cases, this is a task status, but in cases where the hook template
      does not generate a task, it is an empty object with no `status` property.
    title: Trigger Hook Response
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#/anyOf[1]
    TYPE_NAME: TriggerHookResponse1
    additionalProperties:
      Boolean: false
      Properties: null
    description: Empty response indicating no task was created
    properties:
      MemberNames: {}
      Properties: {}
      SortedPropertyNames: []
      SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#/anyOf[1]/properties
    title: Trigger Hook Response
    type: object
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#/anyOf
description: |
  Response to a `triggerHook` or `triggerHookWithToken` call.

  In most cases, this is a task status, but in cases where the hook template
  does not generate a task, it is an empty object with no `status` property.
title: Trigger Hook Response


https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#/anyOf[1]
=====================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#/anyOf[1]
TYPE_NAME: TriggerHookResponse1
additionalProperties:
  Boolean: false
  Properties: null
description: Empty response indicating no task was created
properties:
  MemberNames: {}
  Properties: {}
  SortedPropertyNames: []
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook-response.json#/anyOf[1]/properties
title: Trigger Hook Response
type: object


https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook.json#
===================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-hook.json#
TYPE_NAME: TriggerHookRequest
description: |
  A request to trigger a hook.  The payload must be a JSON object, and is used as the context
  for a JSON-e rendering of the hook's task template, as described in "Firing Hooks".
title: Trigger Hook Request
type: object


https://taskcluster-staging.net/schemas/hooks/v1/trigger-token-response.json#
=============================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/trigger-token-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-token-response.json#
TYPE_NAME: TriggerTokenResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Secret token for a trigger
properties:
  MemberNames:
    token: Token
  Properties:
    token:
      IS_REQUIRED: true
      PROPERTY_NAME: token
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-token-response.json#/properties/token
      TYPE_NAME: ""
      title: Token
      type: string
  SortedPropertyNames:
  - token
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/trigger-token-response.json#/properties
required:
- token
title: trigger token response
type: object


https://taskcluster-staging.net/references/hooks/v1/exchanges.json
==================================================================
Version         = 'v1'
Schema          = 'https://taskcluster-staging.net/schemas/common/exchanges-reference-v0.json#'
Title           = 'Exchanges to manage hooks'
Description     = 'The hooks service is responsible for creating tasks at specific times orin .  response to webhooks and API calls.Using this exchange allows us tomake hooks which repsond to particular pulse messagesThese exchanges provide notifications when a hook is created, updatedor deleted. This is so that the listener running in a different hooks process at the other end can direct another listener specified by`hookGroupId` and `hookId` to synchronize its bindings. But you are ofcourse welcome to use these for other purposes, monitoring changes for example.'
Exchange Prefix = 'exchange/taskcluster-hooks/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'hook-created'
    Entry Name        = 'hookCreated'
    Entry Title       = 'Hook Created Messages'
    Entry Description = 'Whenever the api receives a request to create apulse based hook, a message is posted to this exchange andthe receiver creates a listener with the bindings, to create a task'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/pulse-hook-changed-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'hook-updated'
    Entry Name        = 'hookUpdated'
    Entry Title       = 'Hook Updated Messages'
    Entry Description = 'Whenever the api receives a request to update apulse based hook, a message is posted to this exchange andthe receiver updates the listener associated with that hook.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/pulse-hook-changed-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'hook-deleted'
    Entry Name        = 'hookDeleted'
    Entry Title       = 'Hook Deleted Messages'
    Entry Description = 'Whenever the api receives a request to delete apulse based hook, a message is posted to this exchange andthe receiver deletes the listener associated with that hook.'
    Routing Key Element 0     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/pulse-hook-changed-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#'


https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#
TYPE_NAME: HookChangedMessage
additionalProperties:
  Boolean: true
  Properties: null
description: |
  Message reporting that a hook has changed
properties:
  MemberNames:
    hookGroupId: HookGroupID
    hookId: HookID
  Properties:
    hookGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#/properties/hookGroupId
      TYPE_NAME: ""
      description: |
        `hookGroupId` of the hook that was changed
      type: string
    hookId:
      IS_REQUIRED: true
      PROPERTY_NAME: hookId
      SOURCE_URL: https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#/properties/hookId
      TYPE_NAME: ""
      description: |
        `hookId` of the hook that was changed
      type: string
  SortedPropertyNames:
  - hookGroupId
  - hookId
  SourceURL: https://taskcluster-staging.net/schemas/hooks/v1/pulse-hook-changed-message.json#/properties
required:
- hookId
- hookGroupId
title: Hook Changed Message
type: object


https://taskcluster-staging.net/references/index/v1/api.json
============================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Task Index API Documentation'
Description = 'The task index is responsible for indexing tasks. The service ensures that
tasks can be located by recency and/or arbitrary strings. Common
use-cases include:

 * Locate tasks by git or mercurial `<revision>`, or
 * Locate latest task from given `<branch>`, such as a release.

**Index hierarchy**, tasks are indexed in a dot (`.`) separated hierarchy
called a namespace. For example a task could be indexed with the index path
`some-app.<revision>.linux-64.release-build`. In this case the following
namespaces is created.

 1. `some-app`,
 1. `some-app.<revision>`, and,
 2. `some-app.<revision>.linux-64`

Inside the namespace `some-app.<revision>` you can find the namespace
`some-app.<revision>.linux-64` inside which you can find the indexed task
`some-app.<revision>.linux-64.release-build`. This is an example of indexing
builds for a given platform and revision.

**Task Rank**, when a task is indexed, it is assigned a `rank` (defaults
to `0`). If another task is already indexed in the same namespace with
lower or equal `rank`, the index for that task will be overwritten. For example
consider index path `mozilla-central.linux-64.release-build`. In
this case one might choose to use a UNIX timestamp or mercurial revision
number as `rank`. This way the latest completed linux 64 bit release
build is always available at `mozilla-central.linux-64.release-build`.

Note that this does mean index paths are not immutable: the same path may
point to a different task now than it did a moment ago.

**Indexed Data**, when a task is retrieved from the index the result includes
a `taskId` and an additional user-defined JSON blob that was indexed with
the task.

**Entry Expiration**, all indexed entries must have an expiration date.
Typically this defaults to one year, if not specified. If you are
indexing tasks to make it easy to find artifacts, consider using the
artifact's expiration date.

**Valid Characters**, all keys in a namespace `<key1>.<key2>` must be
in the form `/[a-zA-Z0-9_!~*'()%-]+/`. Observe that this is URL-safe and
that if you strictly want to put another character you can URL encode it.

**Indexing Routes**, tasks can be indexed using the API below, but the
most common way to index tasks is adding a custom route to `task.routes` of the
form `index.<namespace>`. In order to add this route to a task you'll
need the scope `queue:route:index.<namespace>`. When a task has
this route, it will be indexed when the task is **completed successfully**.
The task will be indexed with `rank`, `data` and `expires` as specified
in `task.extra.index`. See the example below:

```js
{
  payload:  { /* ... */ },
  routes: [
    // index.<namespace> prefixed routes, tasks CC'ed such a route will
    // be indexed under the given <namespace>
    "index.mozilla-central.linux-64.release-build",
    "index.<revision>.linux-64.release-build"
  ],
  extra: {
    // Optional details for indexing service
    index: {
      // Ordering, this taskId will overwrite any thing that has
      // rank <= 4000 (defaults to zero)
      rank:       4000,

      // Specify when the entries expire (Defaults to 1 year)
      expires:          new Date().toJSON(),

      // A little informal data to store along with taskId
      // (less 16 kb when encoded as JSON)
      data: {
        hgRevision:   "...",
        commitMessae: "...",
        whatever...
      }
    },
    // Extra properties for other services...
  }
  // Other task properties...
}
```

**Remark**, when indexing tasks using custom routes, it's also possible
to listen for messages about these tasks. For
example one could bind to `route.index.some-app.*.release-build`,
and pick up all messages about release builds. Hence, it is a
good idea to document task index hierarchies, as these make up extension
points in their own.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<indexPath>'
    Entry Args        = '[indexPath]'
    Entry Query        = '[]'
    Entry Name        = 'findTask'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/indexed-task-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#'
    Entry Title       = 'Find Indexed Task'
    Entry Description = 'Find a task by index path, returning the highest-rank task with that path. If no
task exists for the given path, this API end-point will respond with a 404 status.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/namespaces/<namespace>'
    Entry Args        = '[namespace]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listNamespaces'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-namespaces-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#'
    Entry Title       = 'List Namespaces'
    Entry Description = 'List the namespaces immediately under a given namespace.

This endpoint
lists up to 1000 namespaces. If more namespaces are present, a
`continuationToken` will be returned, which can be given in the next
request. For the initial request, the payload should be an empty JSON
object.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/tasks/<namespace>'
    Entry Args        = '[namespace]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listTasks'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-tasks-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#'
    Entry Title       = 'List Tasks'
    Entry Description = 'List the tasks immediately under a given namespace.

This endpoint
lists up to 1000 tasks. If more tasks are present, a
`continuationToken` will be returned, which can be given in the next
request. For the initial request, the payload should be an empty JSON
object.

**Remark**, this end-point is designed for humans browsing for tasks, not
services, as that makes little sense.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/task/<namespace>'
    Entry Args        = '[namespace]'
    Entry Query        = '[]'
    Entry Name        = 'insertTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'index:insert-task:<namespace>'
    Entry Input       = 'v1/insert-task-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#'
    Entry Output      = 'v1/indexed-task-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#'
    Entry Title       = 'Insert Task into Index'
    Entry Description = 'Insert a task into the index.  If the new rank is less than the existing rank
at the given index path, the task is not indexed but the response is still 200 OK.

Please see the introduction above for information
about indexing successfully completed tasks automatically using custom routes.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<indexPath>/artifacts/<name>'
    Entry Args        = '[indexPath name]'
    Entry Query        = '[]'
    Entry Name        = 'findArtifactFromTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If private:
  queue:get-artifact:<name>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Get Artifact From Indexed Task'
    Entry Description = 'Find a task by index path and redirect to the artifact on the most recent
run with the given `name`.

Note that multiple calls to this endpoint may return artifacts from differen tasks
if a new task is inserted into the index between calls. Avoid using this method as
a stable link to multiple, connected files if the index path does not contain a
unique identifier.  For example, the following two links may return unrelated files:
* https://tc.example.com/api/index/v1/task/some-app.win64.latest.installer/artifacts/public/installer.exe`
* https://tc.example.com/api/index/v1/task/some-app.win64.latest.installer/artifacts/public/debug-symbols.zip`

This problem be remedied by including the revision in the index path or by bundling both
installer and debug symbols into a single artifact.

If no task exists for the given index path, this API end-point responds with 404.'


https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#
TYPE_NAME: IndexedTaskResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of an indexed task.
properties:
  MemberNames:
    data: Data
    expires: Expires
    namespace: Namespace
    rank: Rank
    taskId: TaskID
  Properties:
    data:
      IS_REQUIRED: true
      PROPERTY_NAME: data
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#/properties/data
      TYPE_NAME: ""
      description: |
        Data that was reported with the task. This is an arbitrary JSON object.
      title: Task Specific Data
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date at which this entry expires from the task index.
      format: date-time
      title: Expiration
      type: string
    namespace:
      IS_REQUIRED: true
      PROPERTY_NAME: namespace
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#/properties/namespace
      TYPE_NAME: ""
      description: |
        Namespace of the indexed task, used to find the indexed task in the index.
      maxLength: 255
      title: Namespace
      type: string
    rank:
      IS_REQUIRED: true
      PROPERTY_NAME: rank
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#/properties/rank
      TYPE_NAME: ""
      description: |
        If multiple tasks are indexed with the same `namespace` the task with the
        highest `rank` will be stored and returned in later requests. If two tasks
        has the same `rank` the latest task will be stored.
      title: Rank
      type: number
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
  SortedPropertyNames:
  - data
  - expires
  - namespace
  - rank
  - taskId
  SourceURL: https://taskcluster-staging.net/schemas/index/v1/indexed-task-response.json#/properties
required:
- namespace
- taskId
- rank
- data
- expires
title: Indexed Task Response
type: object


https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#
TYPE_NAME: InsertTaskRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of the index entry to insert.
properties:
  MemberNames:
    data: Data
    expires: Expires
    rank: Rank
    taskId: TaskID
  Properties:
    data:
      IS_REQUIRED: true
      PROPERTY_NAME: data
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#/properties/data
      TYPE_NAME: ""
      description: |
        This is an arbitrary JSON object. Feel free to put whatever data you want
        here, but do limit it, you'll get errors if you store more than 32KB.
        So stay well, below that limit.
      title: Task Specific Data
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date at which this entry expires from the task index.
      format: date-time
      title: Expiration
      type: string
    rank:
      IS_REQUIRED: true
      PROPERTY_NAME: rank
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#/properties/rank
      TYPE_NAME: ""
      description: |
        If multiple tasks are indexed with the same `namespace` the task with the
        highest `rank` will be stored and returned in later requests. If two tasks
        has the same `rank` the latest task will be stored.
      title: Rank
      type: number
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
  SortedPropertyNames:
  - data
  - expires
  - rank
  - taskId
  SourceURL: https://taskcluster-staging.net/schemas/index/v1/insert-task-request.json#/properties
required:
- taskId
- rank
- data
- expires
title: Insert Task Request
type: object


https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#
===============================================================================
$id: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#
TYPE_NAME: ListNamespacesResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a request to list namespaces within a given namespace.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    namespaces: Namespaces
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
    namespaces:
      IS_REQUIRED: true
      PROPERTY_NAME: namespaces
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces
      TYPE_NAME: ""
      description: |
        List of namespaces.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items
        TYPE_NAME: Namespace
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Representation of a namespace that contains indexed tasks.
        properties:
          MemberNames:
            expires: Expires
            name: Name
            namespace: Namespace
          Properties:
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/expires
              TYPE_NAME: ""
              description: |
                Date at which this entry, and by implication all entries below it,
                expires from the task index.
              format: date-time
              title: Expiration
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/name
              TYPE_NAME: ""
              description: |
                Name of namespace within it's parent namespace.
              title: Name
              type: string
            namespace:
              IS_REQUIRED: true
              PROPERTY_NAME: namespace
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/namespace
              TYPE_NAME: ""
              description: |
                Fully qualified name of the namespace, you can use this to list
                namespaces or tasks under this namespace.
              maxLength: 255
              title: Namespace
              type: string
          SortedPropertyNames:
          - expires
          - name
          - namespace
          SourceURL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties
        required:
        - namespace
        - name
        - expires
        title: Namespace
        type: object
      title: Namespaces
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - namespaces
  SourceURL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties
required:
- namespaces
title: List Namespaces Response
type: object


https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items
===========================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items
TYPE_NAME: Namespace
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of a namespace that contains indexed tasks.
properties:
  MemberNames:
    expires: Expires
    name: Name
    namespace: Namespace
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/expires
      TYPE_NAME: ""
      description: |
        Date at which this entry, and by implication all entries below it,
        expires from the task index.
      format: date-time
      title: Expiration
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/name
      TYPE_NAME: ""
      description: |
        Name of namespace within it's parent namespace.
      title: Name
      type: string
    namespace:
      IS_REQUIRED: true
      PROPERTY_NAME: namespace
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties/namespace
      TYPE_NAME: ""
      description: |
        Fully qualified name of the namespace, you can use this to list
        namespaces or tasks under this namespace.
      maxLength: 255
      title: Namespace
      type: string
  SortedPropertyNames:
  - expires
  - name
  - namespace
  SourceURL: https://taskcluster-staging.net/schemas/index/v1/list-namespaces-response.json#/properties/namespaces/items/properties
required:
- namespace
- name
- expires
title: Namespace
type: object


https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#
TYPE_NAME: ListTasksResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of an indexed task.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    tasks: Tasks
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks
      TYPE_NAME: ""
      description: |
        List of tasks.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items
        TYPE_NAME: Task
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Representation of a task.
        properties:
          MemberNames:
            data: Data
            expires: Expires
            namespace: Namespace
            rank: Rank
            taskId: TaskID
          Properties:
            data:
              IS_REQUIRED: true
              PROPERTY_NAME: data
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/data
              TYPE_NAME: ""
              description: |
                Data that was reported with the task. This is an arbitrary JSON
                object.
              title: Task Specific Data
              type: object
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/expires
              TYPE_NAME: ""
              description: |
                Date at which this entry expires from the task index.
              format: date-time
              title: Expiration
              type: string
            namespace:
              IS_REQUIRED: true
              PROPERTY_NAME: namespace
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/namespace
              TYPE_NAME: ""
              description: |
                Index path of the task.
              maxLength: 255
              title: Namespace
              type: string
            rank:
              IS_REQUIRED: true
              PROPERTY_NAME: rank
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/rank
              TYPE_NAME: ""
              description: |
                If multiple tasks are indexed with the same `namespace` the task
                with the highest `rank` will be stored and returned in later
                requests. If two tasks has the same `rank` the latest task will be
                stored.
              title: Rank
              type: number
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier for the task currently indexed at `namespace`.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
          SortedPropertyNames:
          - data
          - expires
          - namespace
          - rank
          - taskId
          SourceURL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties
        required:
        - namespace
        - taskId
        - rank
        - data
        - expires
        title: Task
        type: object
      title: Tasks
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - tasks
  SourceURL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties
required:
- tasks
title: List Tasks Response
type: object


https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items
=================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items
TYPE_NAME: Task
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Representation of a task.
properties:
  MemberNames:
    data: Data
    expires: Expires
    namespace: Namespace
    rank: Rank
    taskId: TaskID
  Properties:
    data:
      IS_REQUIRED: true
      PROPERTY_NAME: data
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/data
      TYPE_NAME: ""
      description: |
        Data that was reported with the task. This is an arbitrary JSON
        object.
      title: Task Specific Data
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/expires
      TYPE_NAME: ""
      description: |
        Date at which this entry expires from the task index.
      format: date-time
      title: Expiration
      type: string
    namespace:
      IS_REQUIRED: true
      PROPERTY_NAME: namespace
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/namespace
      TYPE_NAME: ""
      description: |
        Index path of the task.
      maxLength: 255
      title: Namespace
      type: string
    rank:
      IS_REQUIRED: true
      PROPERTY_NAME: rank
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/rank
      TYPE_NAME: ""
      description: |
        If multiple tasks are indexed with the same `namespace` the task
        with the highest `rank` will be stored and returned in later
        requests. If two tasks has the same `rank` the latest task will be
        stored.
      title: Rank
      type: number
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier for the task currently indexed at `namespace`.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
  SortedPropertyNames:
  - data
  - expires
  - namespace
  - rank
  - taskId
  SourceURL: https://taskcluster-staging.net/schemas/index/v1/list-tasks-response.json#/properties/tasks/items/properties
required:
- namespace
- taskId
- rank
- data
- expires
title: Task
type: object


https://taskcluster-staging.net/references/login/v1/api.json
============================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Login API'
Description = 'The Login service serves as the interface between external authentication
systems and Taskcluster credentials.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/oidc-credentials/<provider>'
    Entry Args        = '[provider]'
    Entry Query        = '[]'
    Entry Name        = 'oidcCredentials'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/oidc-credentials-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#'
    Entry Title       = 'Get Taskcluster credentials given a suitable `access_token`'
    Entry Description = 'Given an OIDC `access_token` from a trusted OpenID provider, return a
set of Taskcluster credentials for use on behalf of the identified
user.

This method is typically not called with a Taskcluster client library
and does not accept Hawk credentials. The `access_token` should be
given in an `Authorization` header:
```
Authorization: Bearer abc.xyz
```

The `access_token` is first verified against the named
:provider, then passed to the provider's APIBuilder to retrieve a user
profile. That profile is then used to generate Taskcluster credentials
appropriate to the user. Note that the resulting credentials may or may
not include a `certificate` property. Callers should be prepared for either
alternative.

The given credentials will expire in a relatively short time. Callers should
monitor this expiration and refresh the credentials if necessary, by calling
this endpoint again, if they have expired.'


https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#
TYPE_NAME: CredentialsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A response containing credentials corresponding to a supplied OIDC `access_token`.
properties:
  MemberNames:
    credentials: Credentials
    expires: Expires
  Properties:
    credentials:
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials
      TYPE_NAME: TaskclusterCredentials
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Taskcluster credentials. Note that the credentials may not contain a certificate!
      properties:
        MemberNames:
          accessToken: AccessToken
          certificate: Certificate
          clientId: ClientID
        Properties:
          accessToken:
            IS_REQUIRED: true
            PROPERTY_NAME: accessToken
            SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties/accessToken
            TYPE_NAME: ""
            pattern: ^[a-zA-Z0-9_-]{22,66}$
            type: string
          certificate:
            IS_REQUIRED: false
            PROPERTY_NAME: certificate
            SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties/certificate
            TYPE_NAME: ""
            type: string
          clientId:
            IS_REQUIRED: true
            PROPERTY_NAME: clientId
            SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties/clientId
            TYPE_NAME: ""
            pattern: ^[A-Za-z0-9!@/:.+|_-]+$
            type: string
        SortedPropertyNames:
        - accessToken
        - certificate
        - clientId
        SourceURL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties
      required:
      - clientId
      - accessToken
      title: Taskcluster Credentials
      type: object
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Time after which the credentials are no longer valid.  Callers should
        call `oidcCredentials` again to get fresh credentials before this time.
      format: date-time
      type: string
  SortedPropertyNames:
  - credentials
  - expires
  SourceURL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties
required:
- expires
- credentials
title: Credentials Response
type: object


https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials
=======================================================================================================
IS_REQUIRED: true
PROPERTY_NAME: credentials
SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials
TYPE_NAME: TaskclusterCredentials
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Taskcluster credentials. Note that the credentials may not contain a certificate!
properties:
  MemberNames:
    accessToken: AccessToken
    certificate: Certificate
    clientId: ClientID
  Properties:
    accessToken:
      IS_REQUIRED: true
      PROPERTY_NAME: accessToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties/accessToken
      TYPE_NAME: ""
      pattern: ^[a-zA-Z0-9_-]{22,66}$
      type: string
    certificate:
      IS_REQUIRED: false
      PROPERTY_NAME: certificate
      SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties/certificate
      TYPE_NAME: ""
      type: string
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties/clientId
      TYPE_NAME: ""
      pattern: ^[A-Za-z0-9!@/:.+|_-]+$
      type: string
  SortedPropertyNames:
  - accessToken
  - certificate
  - clientId
  SourceURL: https://taskcluster-staging.net/schemas/login/v1/oidc-credentials-response.json#/properties/credentials/properties
required:
- clientId
- accessToken
title: Taskcluster Credentials
type: object


https://taskcluster-staging.net/references/notify/v1/api.json
=============================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Notification Service'
Description = 'The notification service listens for tasks with associated notifications
and handles requests to send emails and post pulse messages.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/email'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'email'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'notify:email:<address>'
    Entry Input       = 'v1/email-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/notify/v1/email-request.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Send an Email'
    Entry Description = 'Send an email to `address`. The content is markdown and will be rendered
to HTML, but both the HTML and raw markdown text will be sent in the
email. If a link is included, it will be rendered to a nice button in the
HTML version of the email'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/pulse'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'pulse'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'notify:pulse:<routingKey>'
    Entry Input       = 'v1/pulse-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/notify/v1/pulse-request.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Publish a Pulse Message'
    Entry Description = 'Publish a message on pulse with the given `routingKey`.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/irc'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'irc'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'If channelRequest:
  notify:irc-channel:<channel>'
    Entry Input       = 'v1/irc-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Post IRC Message'
    Entry Description = 'Post a message on IRC to a specific channel or user, or a specific user
on a specific channel.

Success of this API method does not imply the message was successfully
posted. This API method merely inserts the IRC message into a queue
that will be processed by a background process.
This allows us to re-send the message in face of connection issues.

However, if the user isn't online the message will be dropped without
error. We maybe improve this behavior in the future. For now just keep
in mind that IRC is a best-effort service.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/denylist/add'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'addDenylistAddress'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'notify:manage-denylist:<notificationType>/<notificationAddress>'
    Entry Input       = 'v1/notification-address.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Denylist Given Address'
    Entry Description = 'Add the given address to the notification denylist. The address
can be of either of the three supported address type namely pulse, email
or IRC(user or channel). Addresses in the denylist will be ignored
by the notification service.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/denylist/delete'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'deleteDenylistAddress'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'notify:manage-denylist:<notificationType>/<notificationAddress>'
    Entry Input       = 'v1/notification-address.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Delete Denylisted Address'
    Entry Description = 'Delete the specified address from the notification denylist.'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/denylist/list'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'list'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/notification-address-list.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#'
    Entry Title       = 'List Denylisted Notifications'
    Entry Description = 'Lists all the denylisted addresses.

By default this end-point will try to return up to 1000 addresses in one
request. But it **may return less**, even if more tasks are available.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `list` with the last `continuationToken` until you
get a result without a `continuationToken`.

If you are not interested in listing all the members at once, you may
use the query-string option `limit` to return fewer.'


https://taskcluster-staging.net/schemas/notify/v1/email-request.json#
=====================================================================
$id: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#
TYPE_NAME: SendEmailRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to send an email
properties:
  MemberNames:
    address: Address
    content: Content
    link: Link
    replyTo: ReplyTo
    subject: Subject
    template: Template
  Properties:
    address:
      IS_REQUIRED: true
      PROPERTY_NAME: address
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/address
      TYPE_NAME: ""
      description: |
        E-mail address to which the message should be sent
      format: email
      type: string
    content:
      IS_REQUIRED: true
      PROPERTY_NAME: content
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/content
      TYPE_NAME: ""
      description: |
        Content of the e-mail as **markdown**, will be rendered to HTML before
        the email is sent. Notice that markdown allows for a few HTML tags, but
        won't allow inclusion of script tags and other unpleasantries.
      maxLength: 102400
      minLength: 1
      type: string
    link:
      IS_REQUIRED: false
      PROPERTY_NAME: link
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link
      TYPE_NAME: Link
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Optional link that can be added as a button to the email.
      properties:
        MemberNames:
          href: Href
          text: Text
        Properties:
          href:
            IS_REQUIRED: true
            PROPERTY_NAME: href
            SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link/properties/href
            TYPE_NAME: ""
            description: |
              Where the link should point to.
            format: uri
            maxLength: 1024
            minLength: 1
            type: string
          text:
            IS_REQUIRED: true
            PROPERTY_NAME: text
            SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link/properties/text
            TYPE_NAME: ""
            description: |
              Text to display on link.
            maxLength: 40
            minLength: 1
            type: string
        SortedPropertyNames:
        - href
        - text
        SourceURL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link/properties
      required:
      - text
      - href
      type: object
    replyTo:
      IS_REQUIRED: false
      PROPERTY_NAME: replyTo
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/replyTo
      TYPE_NAME: ""
      description: |
        Reply-to e-mail (this property is optional)
      format: email
      type: string
    subject:
      IS_REQUIRED: true
      PROPERTY_NAME: subject
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/subject
      TYPE_NAME: ""
      description: |
        Subject line of the e-mail, this is plain-text
      maxLength: 255
      minLength: 1
      type: string
    template:
      IS_REQUIRED: false
      PROPERTY_NAME: template
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/template
      TYPE_NAME: ""
      default: simple
      description: |
        E-mail html template used to format your content.
      enum:
      - simple
      - fullscreen
      type: string
  SortedPropertyNames:
  - address
  - content
  - link
  - replyTo
  - subject
  - template
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties
required:
- address
- subject
- content
title: Send Email Request
type: object


https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link
=====================================================================================
IS_REQUIRED: false
PROPERTY_NAME: link
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link
TYPE_NAME: Link
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Optional link that can be added as a button to the email.
properties:
  MemberNames:
    href: Href
    text: Text
  Properties:
    href:
      IS_REQUIRED: true
      PROPERTY_NAME: href
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link/properties/href
      TYPE_NAME: ""
      description: |
        Where the link should point to.
      format: uri
      maxLength: 1024
      minLength: 1
      type: string
    text:
      IS_REQUIRED: true
      PROPERTY_NAME: text
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link/properties/text
      TYPE_NAME: ""
      description: |
        Text to display on link.
      maxLength: 40
      minLength: 1
      type: string
  SortedPropertyNames:
  - href
  - text
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/email-request.json#/properties/link/properties
required:
- text
- href
type: object


https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#
===================================================================
$id: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#
TYPE_NAME: PostIRCMessageRequest
definitions:
  MemberNames:
    message: Message
  Properties:
    message:
      IS_REQUIRED: false
      PROPERTY_NAME: message
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
      TYPE_NAME: ""
      description: |
        IRC message to send as plain text.
      maxLength: 510
      minLength: 1
      title: IRC Message Text
      type: string
  SortedPropertyNames:
  - message
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions
description: |
  Request to post a message on IRC.
oneOf:
  Items:
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]
    TYPE_NAME: ChannelMessage
    additionalProperties:
      Boolean: false
      Properties: null
    definitions:
      MemberNames:
        message: Message
      Properties:
        message:
          IS_REQUIRED: false
          PROPERTY_NAME: message
          SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
          TYPE_NAME: ""
          description: |
            IRC message to send as plain text.
          maxLength: 510
          minLength: 1
          title: IRC Message Text
          type: string
      SortedPropertyNames:
      - message
      SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions
    description: |
      Request to post a message on IRC.
    properties:
      MemberNames:
        channel: Channel
        message: Message
      Properties:
        channel:
          IS_REQUIRED: true
          PROPERTY_NAME: channel
          SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]/properties/channel
          TYPE_NAME: ""
          description: |
            Channel to post the message in.
          minLength: 1
          pattern: ^[#&][^ ,\u0007]{1,199}$
          title: Channel Name
          type: string
        message:
          $ref: '#/definitions/message'
          IS_REQUIRED: true
          PROPERTY_NAME: message
          REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
          REF_SUBSCHEMA:
            IS_REQUIRED: false
            PROPERTY_NAME: message
            SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
            TYPE_NAME: ""
            description: |
              IRC message to send as plain text.
            maxLength: 510
            minLength: 1
            title: IRC Message Text
            type: string
          SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]/properties/message
          TYPE_NAME: ""
      SortedPropertyNames:
      - channel
      - message
      SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]/properties
    required:
    - channel
    - message
    title: Channel Message
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]
    TYPE_NAME: PrivateMessage
    additionalProperties:
      Boolean: false
      Properties: null
    definitions:
      MemberNames:
        message: Message
      Properties:
        message:
          IS_REQUIRED: false
          PROPERTY_NAME: message
          SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
          TYPE_NAME: ""
          description: |
            IRC message to send as plain text.
          maxLength: 510
          minLength: 1
          title: IRC Message Text
          type: string
      SortedPropertyNames:
      - message
      SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions
    description: |
      Request to post a message on IRC.
    properties:
      MemberNames:
        message: Message
        user: User
      Properties:
        message:
          $ref: '#/definitions/message'
          IS_REQUIRED: true
          PROPERTY_NAME: message
          REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
          REF_SUBSCHEMA:
            IS_REQUIRED: false
            PROPERTY_NAME: message
            SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
            TYPE_NAME: ""
            description: |
              IRC message to send as plain text.
            maxLength: 510
            minLength: 1
            title: IRC Message Text
            type: string
          SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]/properties/message
          TYPE_NAME: ""
        user:
          IS_REQUIRED: true
          PROPERTY_NAME: user
          SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]/properties/user
          TYPE_NAME: ""
          description: |
            User to post the message to.
          maxLength: 255
          minLength: 1
          pattern: ^[A-Za-z\[\]\\~_\^{|}][A-Za-z0-9\-\[\]\\~_\^{|}]{0,254}$
          title: IRC Handle
          type: string
      SortedPropertyNames:
      - message
      - user
      SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]/properties
    required:
    - user
    - message
    title: Private Message
    type: object
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf
title: Post IRC Message Request
type: object


https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]
============================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]
TYPE_NAME: ChannelMessage
additionalProperties:
  Boolean: false
  Properties: null
definitions:
  MemberNames:
    message: Message
  Properties:
    message:
      IS_REQUIRED: false
      PROPERTY_NAME: message
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
      TYPE_NAME: ""
      description: |
        IRC message to send as plain text.
      maxLength: 510
      minLength: 1
      title: IRC Message Text
      type: string
  SortedPropertyNames:
  - message
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions
description: |
  Request to post a message on IRC.
properties:
  MemberNames:
    channel: Channel
    message: Message
  Properties:
    channel:
      IS_REQUIRED: true
      PROPERTY_NAME: channel
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]/properties/channel
      TYPE_NAME: ""
      description: |
        Channel to post the message in.
      minLength: 1
      pattern: ^[#&][^ ,\u0007]{1,199}$
      title: Channel Name
      type: string
    message:
      $ref: '#/definitions/message'
      IS_REQUIRED: true
      PROPERTY_NAME: message
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: message
        SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
        TYPE_NAME: ""
        description: |
          IRC message to send as plain text.
        maxLength: 510
        minLength: 1
        title: IRC Message Text
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]/properties/message
      TYPE_NAME: ""
  SortedPropertyNames:
  - channel
  - message
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[0]/properties
required:
- channel
- message
title: Channel Message
type: object


https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]
============================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]
TYPE_NAME: PrivateMessage
additionalProperties:
  Boolean: false
  Properties: null
definitions:
  MemberNames:
    message: Message
  Properties:
    message:
      IS_REQUIRED: false
      PROPERTY_NAME: message
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
      TYPE_NAME: ""
      description: |
        IRC message to send as plain text.
      maxLength: 510
      minLength: 1
      title: IRC Message Text
      type: string
  SortedPropertyNames:
  - message
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions
description: |
  Request to post a message on IRC.
properties:
  MemberNames:
    message: Message
    user: User
  Properties:
    message:
      $ref: '#/definitions/message'
      IS_REQUIRED: true
      PROPERTY_NAME: message
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: message
        SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/definitions/message
        TYPE_NAME: ""
        description: |
          IRC message to send as plain text.
        maxLength: 510
        minLength: 1
        title: IRC Message Text
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]/properties/message
      TYPE_NAME: ""
    user:
      IS_REQUIRED: true
      PROPERTY_NAME: user
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]/properties/user
      TYPE_NAME: ""
      description: |
        User to post the message to.
      maxLength: 255
      minLength: 1
      pattern: ^[A-Za-z\[\]\\~_\^{|}][A-Za-z0-9\-\[\]\\~_\^{|}]{0,254}$
      title: IRC Handle
      type: string
  SortedPropertyNames:
  - message
  - user
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/irc-request.json#/oneOf[1]/properties
required:
- user
- message
title: Private Message
type: object


https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#
TYPE_NAME: ListOfNotificationAdresses
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of notification addresses.
properties:
  MemberNames:
    addresses: Addresses
    continuationToken: ContinuationToken
  Properties:
    addresses:
      IS_REQUIRED: true
      PROPERTY_NAME: addresses
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#/properties/addresses
      TYPE_NAME: ""
      items:
        $ref: notification-address.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#
        REF_SUBSCHEMA:
          $id: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#
          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#
          TYPE_NAME: NotificaitonTypeAndAddress
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Type of notification and its corresponding address.
          properties:
            MemberNames:
              notificationAddress: NotificationAddress
              notificationType: NotificationType
            Properties:
              notificationAddress:
                IS_REQUIRED: true
                PROPERTY_NAME: notificationAddress
                SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#/properties/notificationAddress
                TYPE_NAME: ""
                type: string
              notificationType:
                IS_REQUIRED: true
                PROPERTY_NAME: notificationType
                SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#/properties/notificationType
                TYPE_NAME: ""
                enum:
                - email
                - pulse
                - irc-user
                - irc-channel
                type: string
            SortedPropertyNames:
            - notificationAddress
            - notificationType
            SourceURL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#/properties
          required:
          - notificationType
          - notificationAddress
          title: Notificaiton Type And Address
          type: object
        SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#/properties/addresses/items
        TYPE_NAME: ""
      type: array
      uniqueItems: true
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        A continuation token is returned if there are more results than listed
        here. You can optionally provide the token in the request payload to
        load the additional results.
      title: Continuation Token
      type: string
  SortedPropertyNames:
  - addresses
  - continuationToken
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/notification-address-list.json#/properties
required:
- addresses
title: List of notification adresses
type: object


https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#
TYPE_NAME: NotificaitonTypeAndAddress
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Type of notification and its corresponding address.
properties:
  MemberNames:
    notificationAddress: NotificationAddress
    notificationType: NotificationType
  Properties:
    notificationAddress:
      IS_REQUIRED: true
      PROPERTY_NAME: notificationAddress
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#/properties/notificationAddress
      TYPE_NAME: ""
      type: string
    notificationType:
      IS_REQUIRED: true
      PROPERTY_NAME: notificationType
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#/properties/notificationType
      TYPE_NAME: ""
      enum:
      - email
      - pulse
      - irc-user
      - irc-channel
      type: string
  SortedPropertyNames:
  - notificationAddress
  - notificationType
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/notification-address.json#/properties
required:
- notificationType
- notificationAddress
title: Notificaiton Type And Address
type: object


https://taskcluster-staging.net/schemas/notify/v1/pulse-request.json#
=====================================================================
$id: https://taskcluster-staging.net/schemas/notify/v1/pulse-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/pulse-request.json#
TYPE_NAME: PostPulseMessageRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to post a message on pulse.
properties:
  MemberNames:
    message: Message
    routingKey: RoutingKey
  Properties:
    message:
      IS_REQUIRED: true
      PROPERTY_NAME: message
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/pulse-request.json#/properties/message
      TYPE_NAME: ""
      description: |
        IRC message to send as plain text.
      type: object
    routingKey:
      IS_REQUIRED: true
      PROPERTY_NAME: routingKey
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/pulse-request.json#/properties/routingKey
      TYPE_NAME: ""
      description: |
        Routing-key to use when posting the message.
      maxLength: 255
      type: string
  SortedPropertyNames:
  - message
  - routingKey
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/pulse-request.json#/properties
required:
- routingKey
- message
title: Post Pulse Message Request
type: object


https://taskcluster-staging.net/references/notify/v1/exchanges.json
===================================================================
Version         = 'v1'
Schema          = 'https://taskcluster-staging.net/schemas/common/exchanges-reference-v0.json#'
Title           = 'Notify AMQP Exchanges'
Description     = 'This pretty much only contains the simple free-form
message that can be published from this service from a request
by anybody with the proper scopes.'
Exchange Prefix = 'exchange/taskcluster-notify/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'notification'
    Entry Name        = 'notify'
    Entry Title       = 'Notification Messages'
    Entry Description = 'An arbitrary message that a taskcluster user
can trigger if they like.

The standard one that is published by us watching
for the completion of tasks is just the task status
data that we pull from the queue `status()` endpoint
when we notice a task is complete.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/notification-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/notify/v1/notification-message.json#'


https://taskcluster-staging.net/schemas/notify/v1/notification-message.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/notify/v1/notification-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-message.json#
TYPE_NAME: NotificationMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  This can be pretty much anything you want it to be.
properties:
  MemberNames:
    message: Message
    version: Version
  Properties:
    message:
      IS_REQUIRED: true
      PROPERTY_NAME: message
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-message.json#/properties/message
      TYPE_NAME: ""
      description: |
        Arbitrary message.
      title: Message
      type: object
    version:
      IS_REQUIRED: false
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/notify/v1/notification-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - message
  - version
  SourceURL: https://taskcluster-staging.net/schemas/notify/v1/notification-message.json#/properties
required:
- message
title: Notification Message
type: object


https://taskcluster-staging.net/references/purge-cache/v1/api.json
==================================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Purge Cache API'
Description = 'The purge-cache service is responsible for publishing a pulse
message for workers, so they can purge cache upon request.

This document describes the API end-point for publishing the pulse
message. This is mainly intended to be used by tools.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/purge-cache/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'purgeCache'
    Entry Stability   = 'stable'
    Entry Scopes      = 'purge-cache:<provisionerId>/<workerType>:<cacheName>'
    Entry Input       = 'v1/purge-cache-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Purge Worker Cache'
    Entry Description = 'Publish a purge-cache message to purge caches named `cacheName` with
`provisionerId` and `workerType` in the routing-key. Workers should
be listening for this message and purge caches when they see it.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/purge-cache/list'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'allPurgeRequests'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/all-purge-cache-request-list.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/purge-cache/v1/all-purge-cache-request-list.json#'
    Entry Title       = 'All Open Purge Requests'
    Entry Description = 'This is useful mostly for administors to view
the set of open purge requests. It should not
be used by workers. They should use the purgeRequests
endpoint that is specific to their workerType and
provisionerId.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/purge-cache/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[since]'
    Entry Name        = 'purgeRequests'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/purge-cache-request-list.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request-list.json#'
    Entry Title       = 'Open Purge Requests for a provisionerId/workerType pair'
    Entry Description = 'List of caches that need to be purged if they are from before
a certain time. This is safe to be used in automation from
workers.'


https://taskcluster-staging.net/schemas/purge-cache/v1/all-purge-cache-request-list.json#
=========================================================================================
$id: https://taskcluster-staging.net/schemas/purge-cache/v1/all-purge-cache-request-list.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/all-purge-cache-request-list.json#
TYPE_NAME: OpenAllPurgeRequestsList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of currently open purge-cache requests. Should not be used by workers.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    requests: Requests
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/all-purge-cache-request-list.json#/properties/continuationToken
      TYPE_NAME: ""
      description: Passed back from Azure to allow us to page through long result
        sets.
      type: string
    requests:
      $ref: purge-cache-requests.json#
      IS_REQUIRED: true
      PROPERTY_NAME: requests
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#
        TYPE_NAME: ""
        description: |
          A list of Purge Cache requests that the Purge Cache service has previously received.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items
          TYPE_NAME: PurgeCacheRequestsEntry
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            An entry in a list of Purge Cache Requests that the Purge Cache service has previously received.
          properties:
            MemberNames:
              before: Before
              cacheName: CacheName
              provisionerId: ProvisionerID
              workerType: WorkerType
            Properties:
              before:
                IS_REQUIRED: true
                PROPERTY_NAME: before
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/before
                TYPE_NAME: ""
                description: |
                  All caches that match this provisionerId, workerType, and cacheName must be destroyed if they were created _before_ this time.
                format: date-time
                type: string
              cacheName:
                IS_REQUIRED: true
                PROPERTY_NAME: cacheName
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/cacheName
                TYPE_NAME: ""
                description: Name of cache to purge.
                type: string
              provisionerId:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/provisionerId
                TYPE_NAME: ""
                description: ProvisionerId associated with the workerType.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                type: string
              workerType:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/workerType
                TYPE_NAME: ""
                description: Workertype cache exists on.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                type: string
            SortedPropertyNames:
            - before
            - cacheName
            - provisionerId
            - workerType
            SourceURL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties
          required:
          - provisionerId
          - workerType
          - cacheName
          - before
          title: Purge Cache Requests Entry
          type: object
        title: Purge Cache Requests
        type: array
        uniqueItems: false
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/all-purge-cache-request-list.json#/properties/requests
      TYPE_NAME: ""
  SortedPropertyNames:
  - continuationToken
  - requests
  SourceURL: https://taskcluster-staging.net/schemas/purge-cache/v1/all-purge-cache-request-list.json#/properties
required:
- requests
title: Open All Purge Requests List
type: object


https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request-list.json#
=====================================================================================
$id: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request-list.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request-list.json#
TYPE_NAME: OpenPurgeRequestList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A list of currently open purge-cache requests.
properties:
  MemberNames:
    requests: Requests
  Properties:
    requests:
      $ref: purge-cache-requests.json#
      IS_REQUIRED: true
      PROPERTY_NAME: requests
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#
        TYPE_NAME: ""
        description: |
          A list of Purge Cache requests that the Purge Cache service has previously received.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items
          TYPE_NAME: PurgeCacheRequestsEntry
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            An entry in a list of Purge Cache Requests that the Purge Cache service has previously received.
          properties:
            MemberNames:
              before: Before
              cacheName: CacheName
              provisionerId: ProvisionerID
              workerType: WorkerType
            Properties:
              before:
                IS_REQUIRED: true
                PROPERTY_NAME: before
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/before
                TYPE_NAME: ""
                description: |
                  All caches that match this provisionerId, workerType, and cacheName must be destroyed if they were created _before_ this time.
                format: date-time
                type: string
              cacheName:
                IS_REQUIRED: true
                PROPERTY_NAME: cacheName
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/cacheName
                TYPE_NAME: ""
                description: Name of cache to purge.
                type: string
              provisionerId:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/provisionerId
                TYPE_NAME: ""
                description: ProvisionerId associated with the workerType.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                type: string
              workerType:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/workerType
                TYPE_NAME: ""
                description: Workertype cache exists on.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                type: string
            SortedPropertyNames:
            - before
            - cacheName
            - provisionerId
            - workerType
            SourceURL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties
          required:
          - provisionerId
          - workerType
          - cacheName
          - before
          title: Purge Cache Requests Entry
          type: object
        title: Purge Cache Requests
        type: array
        uniqueItems: false
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request-list.json#/properties/requests
      TYPE_NAME: ""
  SortedPropertyNames:
  - requests
  SourceURL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request-list.json#/properties
required:
- requests
title: Open Purge Request List
type: object


https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request.json#
TYPE_NAME: PurgeCacheRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request that a message be published to purge a specific cache.
properties:
  MemberNames:
    cacheName: CacheName
  Properties:
    cacheName:
      IS_REQUIRED: true
      PROPERTY_NAME: cacheName
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request.json#/properties/cacheName
      TYPE_NAME: ""
      description: |
        Name of cache to purge. Notice that if a `workerType` have multiple kinds
        of caches (with independent names), it should purge all caches identified
        by `cacheName` regardless of cache type.
      type: string
  SortedPropertyNames:
  - cacheName
  SourceURL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-request.json#/properties
required:
- cacheName
title: Purge Cache Request
type: object


https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items
=======================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items
TYPE_NAME: PurgeCacheRequestsEntry
additionalProperties:
  Boolean: false
  Properties: null
description: |
  An entry in a list of Purge Cache Requests that the Purge Cache service has previously received.
properties:
  MemberNames:
    before: Before
    cacheName: CacheName
    provisionerId: ProvisionerID
    workerType: WorkerType
  Properties:
    before:
      IS_REQUIRED: true
      PROPERTY_NAME: before
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/before
      TYPE_NAME: ""
      description: |
        All caches that match this provisionerId, workerType, and cacheName must be destroyed if they were created _before_ this time.
      format: date-time
      type: string
    cacheName:
      IS_REQUIRED: true
      PROPERTY_NAME: cacheName
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/cacheName
      TYPE_NAME: ""
      description: Name of cache to purge.
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/provisionerId
      TYPE_NAME: ""
      description: ProvisionerId associated with the workerType.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties/workerType
      TYPE_NAME: ""
      description: Workertype cache exists on.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - before
  - cacheName
  - provisionerId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/purge-cache/v1/purge-cache-requests.json#/items/properties
required:
- provisionerId
- workerType
- cacheName
- before
title: Purge Cache Requests Entry
type: object


https://taskcluster-staging.net/references/queue/v1/api.json
============================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Queue API Documentation'
Description = 'The queue service is responsible for accepting tasks and track their state
as they are executed by workers. In order ensure they are eventually
resolved.

This document describes the API end-points offered by the queue. These 
end-points targets the following audience:
 * Schedulers, who create tasks to be executed,
 * Workers, who execute tasks, and
 * Tools, that wants to inspect the state of a task.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'task'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task.json#'
    Entry Title       = 'Get Task Definition'
    Entry Description = 'This end-point will return the task-definition. Notice that the task
definition may have been modified by queue, if an optional property is
not specified the queue may provide a default value.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/status'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'status'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Get task status'
    Entry Description = 'Get task status structure from `taskId`'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task-group/<taskGroupId>/list'
    Entry Args        = '[taskGroupId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listTaskGroup'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-task-group-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#'
    Entry Title       = 'List Task Group'
    Entry Description = 'List tasks sharing the same `taskGroupId`.

As a task-group may contain an unbounded number of tasks, this end-point
may return a `continuationToken`. To continue listing tasks you must call
the `listTaskGroup` again with the `continuationToken` as the
query-string option `continuationToken`.

By default this end-point will try to return up to 1000 members in one
request. But it **may return less**, even if more tasks are available.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `listTaskGroup` with the last `continuationToken` until you
get a result without a `continuationToken`.

If you are not interested in listing all the members at once, you may
use the query-string option `limit` to return fewer.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/dependents'
    Entry Args        = '[taskId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listDependentTasks'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-dependent-tasks-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#'
    Entry Title       = 'List Dependent Tasks'
    Entry Description = 'List tasks that depend on the given `taskId`.

As many tasks from different task-groups may dependent on a single tasks,
this end-point may return a `continuationToken`. To continue listing
tasks you must call `listDependentTasks` again with the
`continuationToken` as the query-string option `continuationToken`.

By default this end-point will try to return up to 1000 tasks in one
request. But it **may return less**, even if more tasks are available.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `listDependentTasks` with the last `continuationToken` until
you get a result without a `continuationToken`.

If you are not interested in listing all the tasks at once, you may
use the query-string option `limit` to return fewer.'
Entry 5     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/task/<taskId>'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'createTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* For scope in scopes each <scope>
* For route in routes each queue:route:<route>
* Any of:
  - All of:
    * queue:scheduler-id:<schedulerId>
    * For priority in priorities each queue:create-task:<priority>:<provisionerId>/<workerType>
  - If legacyScopes:
      Any of:
      - queue:create-task:<provisionerId>/<workerType>
      - All of:
        * queue:define-task:<provisionerId>/<workerType>
        * queue:task-group-id:<schedulerId>/<taskGroupId>
        * queue:schedule-task:<schedulerId>/<taskGroupId>/<taskId>'
    Entry Input       = 'v1/create-task-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#'
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Create New Task'
    Entry Description = 'Create a new task, this is an **idempotent** operation, so repeat it if
you get an internal server error or network connection is dropped.

**Task `deadline`**: the deadline property can be no more than 5 days
into the future. This is to limit the amount of pending tasks not being
taken care of. Ideally, you should use a much shorter deadline.

**Task expiration**: the `expires` property must be greater than the
task `deadline`. If not provided it will default to `deadline` + one
year. Notice, that artifacts created by task must expire before the task.

**Task specific routing-keys**: using the `task.routes` property you may
define task specific routing-keys. If a task has a task specific 
routing-key: `<route>`, then when the AMQP message about the task is
published, the message will be CC'ed with the routing-key: 
`route.<route>`. This is useful if you want another component to listen
for completed tasks you have posted.  The caller must have scope
`queue:route:<route>` for each route.

**Dependencies**: any tasks referenced in `task.dependencies` must have
already been created at the time of this call.

**Scopes**: Note that the scopes required to complete this API call depend
on the content of the `scopes`, `routes`, `schedulerId`, `priority`,
`provisionerId`, and `workerType` properties of the task definition.

**Legacy Scopes**: The `queue:create-task:..` scope without a priority and
the `queue:define-task:..` and `queue:task-group-id:..` scopes are considered
legacy and should not be used. Note that the new, non-legacy scopes require
a `queue:scheduler-id:..` scope as well as scopes for the proper priority.'
Entry 6     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/define'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'defineTask'
    Entry Stability   = 'deprecated'
    Entry Scopes      = 'All of:
* For scope in scopes each <scope>
* For route in routes each queue:route:<route>
* Any of:
  - All of:
    * queue:scheduler-id:<schedulerId>
    * For priority in priorities each queue:create-task:<priority>:<provisionerId>/<workerType>
  - If legacyScopes:
      Any of:
      - queue:define-task:<provisionerId>/<workerType>
      - queue:create-task:<provisionerId>/<workerType>
      - All of:
        * queue:define-task:<provisionerId>/<workerType>
        * queue:task-group-id:<schedulerId>/<taskGroupId>'
    Entry Input       = 'v1/create-task-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#'
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Define Task'
    Entry Description = '**Deprecated**, this is the same as `createTask` with a **self-dependency**.
This is only present for legacy.'
Entry 7     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/schedule'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'scheduleTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:schedule-task:<schedulerId>/<taskGroupId>/<taskId>
- All of:
  * queue:schedule-task
  * assume:scheduler-id:<schedulerId>/<taskGroupId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Schedule Defined Task'
    Entry Description = 'scheduleTask will schedule a task to be executed, even if it has
unresolved dependencies. A task would otherwise only be scheduled if
its dependencies were resolved.

This is useful if you have defined a task that depends on itself or on
some other task that has not been resolved, but you wish the task to be
scheduled immediately.

This will announce the task as pending and workers will be allowed to
claim it and resolve the task.

**Note** this operation is **idempotent** and will not fail or complain
if called with a `taskId` that is already scheduled, or even resolved.
To reschedule a task previously resolved, use `rerunTask`.'
Entry 8     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/rerun'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'rerunTask'
    Entry Stability   = 'deprecated'
    Entry Scopes      = 'Any of:
- queue:rerun-task:<schedulerId>/<taskGroupId>/<taskId>
- All of:
  * queue:rerun-task
  * assume:scheduler-id:<schedulerId>/<taskGroupId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Rerun a Resolved Task'
    Entry Description = 'This method _reruns_ a previously resolved task, even if it was
_completed_. This is useful if your task completes unsuccessfully, and
you just want to run it from scratch again. This will also reset the
number of `retries` allowed.

This method is deprecated in favour of creating a new task with the same
task definition (but with a new taskId).

Remember that `retries` in the task status counts the number of runs that
the queue have started because the worker stopped responding, for example
because a spot node died.

**Remark** this operation is idempotent, if you try to rerun a task that
is not either `failed` or `completed`, this operation will just return
the current task status.'
Entry 9     =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/cancel'
    Entry Args        = '[taskId]'
    Entry Query        = '[]'
    Entry Name        = 'cancelTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:cancel-task:<schedulerId>/<taskGroupId>/<taskId>
- All of:
  * queue:cancel-task
  * assume:scheduler-id:<schedulerId>/<taskGroupId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Cancel Task'
    Entry Description = 'This method will cancel a task that is either `unscheduled`, `pending` or
`running`. It will resolve the current run as `exception` with
`reasonResolved` set to `canceled`. If the task isn't scheduled yet, ie.
it doesn't have any runs, an initial run will be added and resolved as
described above. Hence, after canceling a task, it cannot be scheduled
with `queue.scheduleTask`, but a new run can be created with
`queue.rerun`. These semantics is equivalent to calling
`queue.scheduleTask` immediately followed by `queue.cancelTask`.

**Remark** this operation is idempotent, if you try to cancel a task that
isn't `unscheduled`, `pending` or `running`, this operation will just
return the current task status.'
Entry 10    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/claim-work/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'claimWork'
    Entry Stability   = 'stable'
    Entry Scopes      = 'All of:
* queue:claim-work:<provisionerId>/<workerType>
* queue:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'v1/claim-work-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#'
    Entry Output      = 'v1/claim-work-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#'
    Entry Title       = 'Claim Work'
    Entry Description = 'Claim pending task(s) for the given `provisionerId`/`workerType` queue.

If any work is available (even if fewer than the requested number of
tasks, this will return immediately. Otherwise, it will block for tens of
seconds waiting for work.  If no work appears, it will return an emtpy
list of tasks.  Callers should sleep a short while (to avoid denial of
service in an error condition) and call the endpoint again.  This is a
simple implementation of "long polling".'
Entry 11    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/claim'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'claimTask'
    Entry Stability   = 'deprecated'
    Entry Scopes      = 'Any of:
- All of:
  * queue:claim-task:<provisionerId>/<workerType>
  * queue:worker-id:<workerGroup>/<workerId>
- All of:
  * queue:claim-task
  * assume:worker-type:<provisionerId>/<workerType>
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'v1/task-claim-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/task-claim-request.json#'
    Entry Output      = 'v1/task-claim-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#'
    Entry Title       = 'Claim Task'
    Entry Description = 'claim a task - never documented'
Entry 12    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/reclaim'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reclaimTask'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:reclaim-task:<taskId>/<runId>
- All of:
  * queue:claim-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task-reclaim-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#'
    Entry Title       = 'Reclaim task'
    Entry Description = 'Refresh the claim for a specific `runId` for given `taskId`. This updates
the `takenUntil` property and returns a new set of temporary credentials
for performing requests on behalf of the task. These credentials should
be used in-place of the credentials returned by `claimWork`.

The `reclaimTask` requests serves to:
 * Postpone `takenUntil` preventing the queue from resolving
   `claim-expired`,
 * Refresh temporary credentials used for processing the task, and
 * Abort execution if the task/run have been resolved.

If the `takenUntil` timestamp is exceeded the queue will resolve the run
as _exception_ with reason `claim-expired`, and proceeded to retry to the
task. This ensures that tasks are retried, even if workers disappear
without warning.

If the task is resolved, this end-point will return `409` reporting
`RequestConflict`. This typically happens if the task have been canceled
or the `task.deadline` have been exceeded. If reclaiming fails, workers
should abort the task and forget about the given `runId`. There is no
need to resolve the run or upload artifacts.'
Entry 13    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/completed'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reportCompleted'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:resolve-task:<taskId>/<runId>
- All of:
  * queue:resolve-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Report Run Completed'
    Entry Description = 'Report a task completed, resolving the run as `completed`.'
Entry 14    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/failed'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reportFailed'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:resolve-task:<taskId>/<runId>
- All of:
  * queue:resolve-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Report Run Failed'
    Entry Description = 'Report a run failed, resolving the run as `failed`. Use this to resolve
a run that failed because the task specific code behaved unexpectedly.
For example the task exited non-zero, or didn't produce expected output.

Do not use this if the task couldn't be run because if malformed
payload, or other unexpected condition. In these cases we have a task
exception, which should be reported with `reportException`.'
Entry 15    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/exception'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[]'
    Entry Name        = 'reportException'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:resolve-task:<taskId>/<runId>
- All of:
  * queue:resolve-task
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'v1/task-exception-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/task-exception-request.json#'
    Entry Output      = 'v1/task-status-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#'
    Entry Title       = 'Report Task Exception'
    Entry Description = 'Resolve a run as _exception_. Generally, you will want to report tasks as
failed instead of exception. You should `reportException` if,

  * The `task.payload` is invalid,
  * Non-existent resources are referenced,
  * Declared actions cannot be executed due to unavailable resources,
  * The worker had to shutdown prematurely,
  * The worker experienced an unknown error, or,
  * The task explicitly requested a retry.

Do not use this to signal that some user-specified code crashed for any
reason specific to this code. If user-specific code hits a resource that
is temporarily unavailable worker should report task _failed_.'
Entry 16    =
    Entry Type        = 'function'
    Entry Method      = 'post'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts/<name>'
    Entry Args        = '[taskId runId name]'
    Entry Query        = '[]'
    Entry Name        = 'createArtifact'
    Entry Stability   = 'stable'
    Entry Scopes      = 'Any of:
- queue:create-artifact:<taskId>/<runId>
- All of:
  * queue:create-artifact:<name>
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'v1/post-artifact-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#'
    Entry Output      = 'v1/post-artifact-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#'
    Entry Title       = 'Create Artifact'
    Entry Description = 'This API end-point creates an artifact for a specific run of a task. This
should **only** be used by a worker currently operating on this task, or
from a process running within the task (ie. on the worker).

All artifacts must specify when they `expires`, the queue will
automatically take care of deleting artifacts past their
expiration point. This features makes it feasible to upload large
intermediate artifacts from data processing applications, as the
artifacts can be set to expire a few days later.

We currently support 3 different `storageType`s, each storage type have
slightly different features and in some cases difference semantics.
We also have 2 deprecated `storageType`s which are only maintained for
backwards compatiability and should not be used in new implementations

**Blob artifacts**, are useful for storing large files.  Currently, these
are all stored in S3 but there are facilities for adding support for other
backends in futre.  A call for this type of artifact must provide information
about the file which will be uploaded.  This includes sha256 sums and sizes.
This method will return a list of general form HTTP requests which are signed
by AWS S3 credentials managed by the Queue.  Once these requests are completed
the list of `ETag` values returned by the requests must be passed to the
queue `completeArtifact` method

**S3 artifacts**, DEPRECATED is useful for static files which will be
stored on S3. When creating an S3 artifact the queue will return a
pre-signed URL to which you can do a `PUT` request to upload your
artifact. Note that `PUT` request **must** specify the `content-length`
header and **must** give the `content-type` header the same value as in
the request to `createArtifact`.

**Azure artifacts**, DEPRECATED are stored in _Azure Blob Storage_ service
which given the consistency guarantees and API interface offered by Azure
is more suitable for artifacts that will be modified during the execution
of the task. For example docker-worker has a feature that persists the
task log to Azure Blob Storage every few seconds creating a somewhat
live log. A request to create an Azure artifact will return a URL
featuring a [Shared-Access-Signature](http://msdn.microsoft.com/en-us/library/azure/dn140256.aspx),
refer to MSDN for further information on how to use these.
**Warning: azure artifact is currently an experimental feature subject
to changes and data-drops.**

**Reference artifacts**, only consists of meta-data which the queue will
store for you. These artifacts really only have a `url` property and
when the artifact is requested the client will be redirect the URL
provided with a `303` (See Other) redirect. Please note that we cannot
delete artifacts you upload to other service, we can only delete the
reference to the artifact, when it expires.

**Error artifacts**, only consists of meta-data which the queue will
store for you. These artifacts are only meant to indicate that you the
worker or the task failed to generate a specific artifact, that you
would otherwise have uploaded. For example docker-worker will upload an
error artifact, if the file it was supposed to upload doesn't exists or
turns out to be a directory. Clients requesting an error artifact will
get a `424` (Failed Dependency) response. This is mainly designed to
ensure that dependent tasks can distinguish between artifacts that were
suppose to be generated and artifacts for which the name is misspelled.

**Artifact immutability**, generally speaking you cannot overwrite an
artifact when created. But if you repeat the request with the same
properties the request will succeed as the operation is idempotent.
This is useful if you need to refresh a signed URL while uploading.
Do not abuse this to overwrite artifacts created by another entity!
Such as worker-host overwriting artifact created by worker-code.

As a special case the `url` property on _reference artifacts_ can be
updated. You should only use this to update the `url` property for
reference artifacts your process has created.'
Entry 17    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts/<name>'
    Entry Args        = '[taskId runId name]'
    Entry Query        = '[]'
    Entry Name        = 'completeArtifact'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'Any of:
- queue:create-artifact:<taskId>/<runId>
- All of:
  * queue:create-artifact:<name>
  * assume:worker-id:<workerGroup>/<workerId>'
    Entry Input       = 'v1/put-artifact-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/put-artifact-request.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Complete Artifact'
    Entry Description = 'This endpoint finalises an upload done through the blob `storageType`.
The queue will ensure that the task/run is still allowing artifacts
to be uploaded.  For single-part S3 blob artifacts, this endpoint
will simply ensure the artifact is present in S3.  For multipart S3
artifacts, the endpoint will perform the commit step of the multipart
upload flow.  As the final step for both multi and single part artifacts,
the `present` entity field will be set to `true` to reflect that the
artifact is now present and a message published to pulse.  NOTE: This
endpoint *must* be called for all artifacts of storageType 'blob''
Entry 18    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts/<name>'
    Entry Args        = '[taskId runId name]'
    Entry Query        = '[]'
    Entry Name        = 'getArtifact'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If private:
  queue:get-artifact:<name>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Get Artifact from Run'
    Entry Description = 'Get artifact by `<name>` from a specific run.

**Public Artifacts**, in-order to get an artifact you need the scope
`queue:get-artifact:<name>`, where `<name>` is the name of the artifact.
But if the artifact `name` starts with `public/`, authentication and
authorization is not necessary to fetch the artifact.

**API Clients**, this method will redirect you to the artifact, if it is
stored externally. Either way, the response may not be JSON. So API
client users might want to generate a signed URL for this end-point and
use that URL with an HTTP client that can handle responses correctly.

**Downloading artifacts**
There are some special considerations for those http clients which download
artifacts.  This api endpoint is designed to be compatible with an HTTP 1.1
compliant client, but has extra features to ensure the download is valid.
It is strongly recommend that consumers use either taskcluster-lib-artifact (JS),
taskcluster-lib-artifact-go (Go) or the CLI written in Go to interact with
artifacts.

In order to download an artifact the following must be done:

1. Obtain queue url.  Building a signed url with a taskcluster client is
recommended
1. Make a GET request which does not follow redirects
1. In all cases, if specified, the
x-taskcluster-location-{content,transfer}-{sha256,length} values must be
validated to be equal to the Content-Length and Sha256 checksum of the
final artifact downloaded. as well as any intermediate redirects
1. If this response is a 500-series error, retry using an exponential
backoff.  No more than 5 retries should be attempted
1. If this response is a 400-series error, treat it appropriately for
your context.  This might be an error in responding to this request or
an Error storage type body.  This request should not be retried.
1. If this response is a 200-series response, the response body is the artifact.
If the x-taskcluster-location-{content,transfer}-{sha256,length} and
x-taskcluster-location-content-encoding are specified, they should match
this response body
1. If the response type is a 300-series redirect, the artifact will be at the
location specified by the `Location` header.  There are multiple artifact storage
types which use a 300-series redirect.
1. For all redirects followed, the user must verify that the content-sha256, content-length,
transfer-sha256, transfer-length and content-encoding match every further request.  The final
artifact must also be validated against the values specified in the original queue response
1. Caching of requests with an x-taskcluster-artifact-storage-type value of `reference`
must not occur
1. A request which has x-taskcluster-artifact-storage-type value of `blob` and does not
have x-taskcluster-location-content-sha256 or x-taskcluster-location-content-length
must be treated as an error

**Headers**
The following important headers are set on the response to this method:

* location: the url of the artifact if a redirect is to be performed
* x-taskcluster-artifact-storage-type: the storage type.  Example: blob, s3, error

The following important headers are set on responses to this method for Blob artifacts

* x-taskcluster-location-content-sha256: the SHA256 of the artifact
*after* any content-encoding is undone.  Sha256 is hex encoded (e.g. [0-9A-Fa-f]{64})
* x-taskcluster-location-content-length: the number of bytes *after* any content-encoding
is undone
* x-taskcluster-location-transfer-sha256: the SHA256 of the artifact
*before* any content-encoding is undone.  This is the SHA256 of what is sent over
the wire.  Sha256 is hex encoded (e.g. [0-9A-Fa-f]{64})
* x-taskcluster-location-transfer-length: the number of bytes *after* any content-encoding
is undone
* x-taskcluster-location-content-encoding: the content-encoding used.  It will either
be `gzip` or `identity` right now.  This is hardcoded to a value set when the artifact
was created and no content-negotiation occurs
* x-taskcluster-location-content-type: the content-type of the artifact

**Caching**, artifacts may be cached in data centers closer to the
workers in-order to reduce bandwidth costs. This can lead to longer
response times. Caching can be skipped by setting the header
`x-taskcluster-skip-cache: true`, this should only be used for resources
where request volume is known to be low, and caching not useful.
(This feature may be disabled in the future, use is sparingly!)'
Entry 19    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/artifacts/<name>'
    Entry Args        = '[taskId name]'
    Entry Query        = '[]'
    Entry Name        = 'getLatestArtifact'
    Entry Stability   = 'stable'
    Entry Scopes      = 'If private:
  queue:get-artifact:<name>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Get Artifact from Latest Run'
    Entry Description = 'Get artifact by `<name>` from the last run of a task.

**Public Artifacts**, in-order to get an artifact you need the scope
`queue:get-artifact:<name>`, where `<name>` is the name of the artifact.
But if the artifact `name` starts with `public/`, authentication and
authorization is not necessary to fetch the artifact.

**API Clients**, this method will redirect you to the artifact, if it is
stored externally. Either way, the response may not be JSON. So API
client users might want to generate a signed URL for this end-point and
use that URL with a normal HTTP client.

**Remark**, this end-point is slightly slower than
`queue.getArtifact`, so consider that if you already know the `runId` of
the latest run. Otherwise, just us the most convenient API end-point.'
Entry 20    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/runs/<runId>/artifacts'
    Entry Args        = '[taskId runId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listArtifacts'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-artifacts-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#'
    Entry Title       = 'Get Artifacts from Run'
    Entry Description = 'Returns a list of artifacts and associated meta-data for a given run.

As a task may have many artifacts paging may be necessary. If this
end-point returns a `continuationToken`, you should call the end-point
again with the `continuationToken` as the query-string option:
`continuationToken`.

By default this end-point will list up-to 1000 artifacts in a single page
you may limit this with the query-string parameter `limit`.'
Entry 21    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/task/<taskId>/artifacts'
    Entry Args        = '[taskId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listLatestArtifacts'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-artifacts-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#'
    Entry Title       = 'Get Artifacts from Latest Run'
    Entry Description = 'Returns a list of artifacts and associated meta-data for the latest run
from the given task.

As a task may have many artifacts paging may be necessary. If this
end-point returns a `continuationToken`, you should call the end-point
again with the `continuationToken` as the query-string option:
`continuationToken`.

By default this end-point will list up-to 1000 artifacts in a single page
you may limit this with the query-string parameter `limit`.'
Entry 22    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listProvisioners'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-provisioners-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#'
    Entry Title       = 'Get a list of all active provisioners'
    Entry Description = 'Get all active provisioners.

The term "provisioner" is taken broadly to mean anything with a provisionerId.
This does not necessarily mean there is an associated service performing any
provisioning activity.

The response is paged. If this end-point returns a `continuationToken`, you
should call the end-point again with the `continuationToken` as a query-string
option. By default this end-point will list up to 1000 provisioners in a single
page. You may limit this with the query-string parameter `limit`.'
Entry 23    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>'
    Entry Args        = '[provisionerId]'
    Entry Query        = '[]'
    Entry Name        = 'getProvisioner'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/provisioner-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#'
    Entry Title       = 'Get an active provisioner'
    Entry Description = 'Get an active provisioner.

The term "provisioner" is taken broadly to mean anything with a provisionerId.
This does not necessarily mean there is an associated service performing any
provisioning activity.'
Entry 24    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>'
    Entry Args        = '[provisionerId]'
    Entry Query        = '[]'
    Entry Name        = 'declareProvisioner'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'For property in properties each queue:declare-provisioner:<provisionerId>#<property>'
    Entry Input       = 'v1/update-provisioner-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#'
    Entry Output      = 'v1/provisioner-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#'
    Entry Title       = 'Update a provisioner'
    Entry Description = 'Declare a provisioner, supplying some details about it.

`declareProvisioner` allows updating one or more properties of a provisioner as long as the required scopes are
possessed. For example, a request to update the `aws-provisioner-v1`
provisioner with a body `{description: 'This provisioner is great'}` would require you to have the scope
`queue:declare-provisioner:aws-provisioner-v1#description`.

The term "provisioner" is taken broadly to mean anything with a provisionerId.
This does not necessarily mean there is an associated service performing any
provisioning activity.'
Entry 25    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/pending/<provisionerId>/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'pendingTasks'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/pending-tasks-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#'
    Entry Title       = 'Get Number of Pending Tasks'
    Entry Description = 'Get an approximate number of pending tasks for the given `provisionerId`
and `workerType`.

The underlying Azure Storage Queues only promises to give us an estimate.
Furthermore, we cache the result in memory for 20 seconds. So consumers
should be no means expect this to be an accurate number.
It is, however, a solid estimate of the number of pending tasks.'
Entry 26    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types'
    Entry Args        = '[provisionerId]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'listWorkerTypes'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-workertypes-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#'
    Entry Title       = 'Get a list of all active worker-types'
    Entry Description = 'Get all active worker-types for the given provisioner.

The response is paged. If this end-point returns a `continuationToken`, you
should call the end-point again with the `continuationToken` as a query-string
option. By default this end-point will list up to 1000 worker-types in a single
page. You may limit this with the query-string parameter `limit`.'
Entry 27    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'getWorkerType'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/workertype-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#'
    Entry Title       = 'Get a worker-type'
    Entry Description = 'Get a worker-type from a provisioner.'
Entry 28    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[]'
    Entry Name        = 'declareWorkerType'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'For property in properties each queue:declare-worker-type:<provisionerId>/<workerType>#<property>'
    Entry Input       = 'v1/update-workertype-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#'
    Entry Output      = 'v1/workertype-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#'
    Entry Title       = 'Update a worker-type'
    Entry Description = 'Declare a workerType, supplying some details about it.

`declareWorkerType` allows updating one or more properties of a worker-type as long as the required scopes are
possessed. For example, a request to update the `gecko-b-1-w2008` worker-type within the `aws-provisioner-v1`
provisioner with a body `{description: 'This worker type is great'}` would require you to have the scope
`queue:declare-worker-type:aws-provisioner-v1/gecko-b-1-w2008#description`.'
Entry 29    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/workers'
    Entry Args        = '[provisionerId workerType]'
    Entry Query        = '[continuationToken limit quarantined]'
    Entry Name        = 'listWorkers'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/list-workers-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#'
    Entry Title       = 'Get a list of all active workers of a workerType'
    Entry Description = 'Get a list of all active workers of a workerType.

`listWorkers` allows a response to be filtered by quarantined and non quarantined workers.
To filter the query, you should call the end-point with `quarantined` as a query-string option with a
true or false value.

The response is paged. If this end-point returns a `continuationToken`, you
should call the end-point again with the `continuationToken` as a query-string
option. By default this end-point will list up to 1000 workers in a single
page. You may limit this with the query-string parameter `limit`.'
Entry 30    =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/workers/<workerGroup>/<workerId>'
    Entry Args        = '[provisionerId workerType workerGroup workerId]'
    Entry Query        = '[]'
    Entry Name        = 'getWorker'
    Entry Stability   = 'experimental'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/worker-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#'
    Entry Title       = 'Get a worker-type'
    Entry Description = 'Get a worker from a worker-type.'
Entry 31    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/workers/<workerGroup>/<workerId>'
    Entry Args        = '[provisionerId workerType workerGroup workerId]'
    Entry Query        = '[]'
    Entry Name        = 'quarantineWorker'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'queue:quarantine-worker:<provisionerId>/<workerType>/<workerGroup>/<workerId>'
    Entry Input       = 'v1/quarantine-worker-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/quarantine-worker-request.json#'
    Entry Output      = 'v1/worker-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#'
    Entry Title       = 'Quarantine a worker'
    Entry Description = 'Quarantine a worker'
Entry 32    =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/provisioners/<provisionerId>/worker-types/<workerType>/<workerGroup>/<workerId>'
    Entry Args        = '[provisionerId workerType workerGroup workerId]'
    Entry Query        = '[]'
    Entry Name        = 'declareWorker'
    Entry Stability   = 'experimental'
    Entry Scopes      = 'For property in properties each queue:declare-worker:<provisionerId>/<workerType>/<workerGroup>/<workerId>#<property>'
    Entry Input       = 'v1/update-worker-request.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/queue/v1/update-worker-request.json#'
    Entry Output      = 'v1/worker-response.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#'
    Entry Title       = 'Declare a worker'
    Entry Description = 'Declare a worker, supplying some details about it.

`declareWorker` allows updating one or more properties of a worker as long as the required scopes are
possessed.'


https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items
====================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items
TYPE_NAME: Action
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Actions provide a generic mechanism to expose additional features of a
  provisioner, worker type, or worker to Taskcluster clients.

  An action is comprised of metadata describing the feature it exposes,
  together with a webhook for triggering it.

  The Taskcluster tools site, for example, retrieves actions when displaying
  provisioners, worker types and workers. It presents the provisioner/worker
  type/worker specific actions to the user. When the user triggers an action,
  the web client takes the registered webhook, substitutes parameters into the
  URL (see `url`), signs the requests with the Taskcluster credentials of the
  user operating the web interface, and issues the HTTP request.

  The level to which the action relates (provisioner, worker type, worker) is
  called the action context. All actions, regardless of the action contexts,
  are registered against the provisioner when calling
  `queue.declareProvisioner`.

  The action context is used by the web client to determine where in the web
  interface to present the action to the user as follows:

  | `context`   | Tool where action is displayed |
  |-------------|--------------------------------|
  | provisioner | Provisioner Explorer           |
  | worker-type | Workers Explorer               |
  | worker      | Worker Explorer                |

  See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
  for more information.
properties:
  MemberNames:
    context: Context
    description: Description
    method: Method
    name: Name
    title: Title
    url: URL
  Properties:
    context:
      IS_REQUIRED: true
      PROPERTY_NAME: context
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/context
      TYPE_NAME: ""
      description: |
        Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
        which it applies to. `context` is used by the front-end to know where to display the action.

        | `context`   | Page displayed        |
        |-------------|-----------------------|
        | provisioner | Provisioner Explorer  |
        | worker-type | Workers Explorer      |
        | worker      | Worker Explorer       |
      enum:
      - provisioner
      - worker-type
      - worker
      title: Context
      type: string
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/description
      TYPE_NAME: ""
      description: |
        Description of the provisioner.
      title: Description
      type: string
    method:
      IS_REQUIRED: true
      PROPERTY_NAME: method
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/method
      TYPE_NAME: ""
      description: |
        Method to indicate the desired action to be performed for a given resource.
      enum:
      - POST
      - PUT
      - DELETE
      - PATCH
      title: Method
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/name
      TYPE_NAME: ""
      description: |
        Short names for things like logging/error messages.
      title: Name
      type: string
    title:
      IS_REQUIRED: true
      PROPERTY_NAME: title
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/title
      TYPE_NAME: ""
      description: |
        Appropriate title for any sort of Modal prompt.
      title: Title
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/url
      TYPE_NAME: ""
      description: |
        When an action is triggered, a request is made using the `url` and `method`.
        Depending on the `context`, the following parameters will be substituted in the url:

        | `context`   | Path parameters                                          |
        |-------------|----------------------------------------------------------|
        | provisioner | <provisionerId>                                          |
        | worker-type | <provisionerId>, <workerType>                            |
        | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

        _Note: The request needs to be signed with the user's Taskcluster credentials._
      title: URL
      type: string
  SortedPropertyNames:
  - context
  - description
  - method
  - name
  - title
  - url
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties
required:
- name
- title
- context
- url
- method
- description
title: Action
type: object


https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#
=========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#
TYPE_NAME: ClaimWorkRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to claim a task for a worker to process.
properties:
  MemberNames:
    tasks: Tasks
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#/properties/tasks
      TYPE_NAME: ""
      default: 1
      description: |
        Number of tasks to attempt to claim.
      maximum: 32
      minimum: 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for group that worker claiming the task is a part of.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for worker within the given workerGroup
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - tasks
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-request.json#/properties
required:
- workerGroup
- workerId
- tasks
title: Claim Work Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#
TYPE_NAME: ClaimWorkResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to an attempt to claim tasks for a worker to process.
properties:
  MemberNames:
    tasks: Tasks
  Properties:
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks
      TYPE_NAME: ""
      description: |
        List of task claims, may be empty if no tasks was claimed, in which case
        the worker should sleep a tiny bit before polling again.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items
        TYPE_NAME: TaskClaim
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            credentials: Credentials
            runId: RunID
            status: Status
            takenUntil: TakenUntil
            task: Task
            workerGroup: WorkerGroup
            workerId: WorkerID
          Properties:
            credentials:
              $ref: task-credentials.json#
              IS_REQUIRED: true
              PROPERTY_NAME: credentials
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
                TYPE_NAME: TaskCredentials
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Temporary credentials granting `task.scopes` and the scope:
                  `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
                  the task, upload artifacts and report task resolution.

                  The temporary credentials are set to expire after `takenUntil`. They
                  won't expire exactly at `takenUntil` but shortly after, hence, requests
                  coming close `takenUntil` won't have problems even if there is a little
                  clock drift.

                  Workers should use these credentials when making requests on behalf of
                  a task. This includes requests to create artifacts, reclaiming the task
                  reporting the task `completed`, `failed` or `exception`.

                  Note, a new set of temporary credentials is issued when the worker
                  reclaims the task.
                properties:
                  MemberNames:
                    accessToken: AccessToken
                    certificate: Certificate
                    clientId: ClientID
                  Properties:
                    accessToken:
                      IS_REQUIRED: true
                      PROPERTY_NAME: accessToken
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/accessToken
                      TYPE_NAME: ""
                      description: |
                        The `accessToken` for the temporary credentials.
                      minLength: 1
                      type: string
                    certificate:
                      IS_REQUIRED: true
                      PROPERTY_NAME: certificate
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/certificate
                      TYPE_NAME: ""
                      description: |
                        The `certificate` for the temporary credentials, these are required
                        for the temporary credentials to work.
                      minLength: 1
                      type: string
                    clientId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: clientId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/clientId
                      TYPE_NAME: ""
                      description: |
                        The `clientId` for the temporary credentials.
                      minLength: 1
                      type: string
                  SortedPropertyNames:
                  - accessToken
                  - certificate
                  - clientId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties
                required:
                - clientId
                - accessToken
                - certificate
                title: Task Credentials
                type: object
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/credentials
              TYPE_NAME: ""
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/runId
              TYPE_NAME: ""
              description: |
                `run-id` assigned to this run of the task
              maximum: 1000
              minimum: 0
              type: integer
            status:
              $ref: task-status.json#
              IS_REQUIRED: true
              PROPERTY_NAME: status
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                TYPE_NAME: TaskStatusStructure
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  A representation of **task status** as known by the queue
                properties:
                  MemberNames:
                    deadline: Deadline
                    expires: Expires
                    provisionerId: ProvisionerID
                    retriesLeft: RetriesLeft
                    runs: Runs
                    schedulerId: SchedulerID
                    state: State
                    taskGroupId: TaskGroupID
                    taskId: TaskID
                    workerType: WorkerType
                  Properties:
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
                      TYPE_NAME: ""
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    expires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: expires
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
                      TYPE_NAME: ""
                      description: |
                        Task expiration, time at which task definition and
                        status is deleted. Notice that all artifacts for the task
                        must have an expiration that is no later than this.
                      format: date-time
                      title: Expiration
                      type: string
                    provisionerId:
                      $ref: task.json#/properties/provisionerId
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                      REF_SUBSCHEMA:
                        IS_REQUIRED: true
                        PROPERTY_NAME: provisionerId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                        TYPE_NAME: ""
                        description: |
                          Unique identifier for a provisioner, that can supply specified
                          `workerType`
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Provisioner Id
                        type: string
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
                      TYPE_NAME: ""
                    retriesLeft:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retriesLeft
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
                      TYPE_NAME: ""
                      description: |
                        Number of retries left for the task in case of infrastructure issues
                      maximum: 999
                      minimum: 0
                      title: Retries Left
                      type: integer
                    runs:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runs
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
                      TYPE_NAME: ""
                      description: |
                        List of runs, ordered so that index `i` has `runId == i`
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: ""
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                        TYPE_NAME: RunInformation
                        additionalProperties:
                          Boolean: false
                          Properties: null
                        description: |
                          JSON object with information about a run
                        properties:
                          MemberNames:
                            reasonCreated: ReasonCreated
                            reasonResolved: ReasonResolved
                            resolved: Resolved
                            runId: RunID
                            scheduled: Scheduled
                            started: Started
                            state: State
                            takenUntil: TakenUntil
                            workerGroup: WorkerGroup
                            workerId: WorkerID
                          Properties:
                            reasonCreated:
                              IS_REQUIRED: true
                              PROPERTY_NAME: reasonCreated
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                              TYPE_NAME: ""
                              description: |
                                Reason for the creation of this run,
                                **more reasons may be added in the future**.
                              enum:
                              - scheduled
                              - retry
                              - task-retry
                              - rerun
                              - exception
                              title: Reason Created
                              type: string
                            reasonResolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: reasonResolved
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                              TYPE_NAME: ""
                              description: |
                                Reason that run was resolved, this is mainly
                                useful for runs resolved as `exception`.
                                Note, **more reasons may be added in the future**, also this
                                property is only available after the run is resolved. Some of these
                                reasons, notably `intermittent-task`, `worker-shutdown`, and
                                `claim-expired`, will trigger an automatic retry of the task.
                              enum:
                              - completed
                              - failed
                              - deadline-exceeded
                              - canceled
                              - superseded
                              - claim-expired
                              - worker-shutdown
                              - malformed-payload
                              - resource-unavailable
                              - internal-error
                              - intermittent-task
                              title: Reason Resolved
                              type: string
                            resolved:
                              IS_REQUIRED: false
                              PROPERTY_NAME: resolved
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                              TYPE_NAME: ""
                              description: |
                                Date-time at which this run was resolved, ie. when the run changed
                                state from `running` to either `completed`, `failed` or `exception`.
                                This property is only present after the run as been resolved.
                              format: date-time
                              title: Resolved
                              type: string
                            runId:
                              IS_REQUIRED: true
                              PROPERTY_NAME: runId
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                              TYPE_NAME: ""
                              description: |
                                Id of this task run, `run-id`s always starts from `0`
                              maximum: 1000
                              minimum: 0
                              title: Run Identifier
                              type: integer
                            scheduled:
                              IS_REQUIRED: true
                              PROPERTY_NAME: scheduled
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                              TYPE_NAME: ""
                              description: |
                                Date-time at which this run was scheduled, ie. when the run was
                                created in state `pending`.
                              format: date-time
                              title: Scheduled
                              type: string
                            started:
                              IS_REQUIRED: false
                              PROPERTY_NAME: started
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                              TYPE_NAME: ""
                              description: |
                                Date-time at which this run was claimed, ie. when the run changed
                                state from `pending` to `running`. This property is only present
                                after the run has been claimed.
                              format: date-time
                              title: Started
                              type: string
                            state:
                              IS_REQUIRED: true
                              PROPERTY_NAME: state
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                              TYPE_NAME: ""
                              description: |
                                State of this run
                              enum:
                              - pending
                              - running
                              - completed
                              - failed
                              - exception
                              title: Run State
                              type: string
                            takenUntil:
                              IS_REQUIRED: false
                              PROPERTY_NAME: takenUntil
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                              TYPE_NAME: ""
                              description: |
                                Time at which the run expires and is resolved as `failed`, if the
                                run isn't reclaimed. Note, only present after the run has been
                                claimed.
                              format: date-time
                              title: Taken Until
                              type: string
                            workerGroup:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerGroup
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                              TYPE_NAME: ""
                              description: |
                                Identifier for group that worker who executes this run is a part of,
                                this identifier is mainly used for efficient routing.
                                Note, this property is only present after the run is claimed.
                              maxLength: 38
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Group
                              type: string
                            workerId:
                              IS_REQUIRED: false
                              PROPERTY_NAME: workerId
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                              TYPE_NAME: ""
                              description: |
                                Identifier for worker evaluating this run within given
                                `workerGroup`. Note, this property is only available after the run
                                has been claimed.
                              maxLength: 38
                              minLength: 1
                              pattern: ^([a-zA-Z0-9-_]*)$
                              title: Worker Identifier
                              type: string
                          SortedPropertyNames:
                          - reasonCreated
                          - reasonResolved
                          - resolved
                          - runId
                          - scheduled
                          - started
                          - state
                          - takenUntil
                          - workerGroup
                          - workerId
                          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                        required:
                        - runId
                        - state
                        - reasonCreated
                        - scheduled
                        title: Run Information
                        type: object
                      title: List of Runs
                      type: array
                      uniqueItems: true
                    schedulerId:
                      $ref: task.json#/properties/schedulerId
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                      REF_SUBSCHEMA:
                        IS_REQUIRED: true
                        PROPERTY_NAME: schedulerId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                        TYPE_NAME: ""
                        default: '-'
                        description: |
                          All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                          * it can represent the entity that created the task;
                          * it can limit addition of new tasks to a task group: the caller of
                              `createTask` must have a scope related to the `schedulerId` of the task
                              group;
                          * it controls who can manipulate tasks, again by requiring
                              `schedulerId`-related scopes; and
                          * it appears in the routing key for Pulse messages about the task.
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Scheduler Identifier
                        type: string
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
                      TYPE_NAME: ""
                      default: '-'
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this task. This is just an auxiliary property derived from state
                        of latests run, or `unscheduled` if none.
                      enum:
                      - unscheduled
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: State
                      type: string
                    taskGroupId:
                      $ref: task.json#/properties/taskGroupId
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                      REF_SUBSCHEMA:
                        IS_REQUIRED: true
                        PROPERTY_NAME: taskGroupId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                        TYPE_NAME: ""
                        description: |
                          Identifier for a group of tasks scheduled together with this task.
                          Generally, all tasks related to a single event such as a version-control
                          push or a nightly build have the same `taskGroupId`.  This property
                          defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                          the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                          decision tasks.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task-Group Identifier
                        type: string
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
                      TYPE_NAME: ""
                    taskId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
                      TYPE_NAME: ""
                      description: |
                        Unique task identifier, this is UUID encoded as
                        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                        stripped of `=` padding.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task Identifier
                      type: string
                    workerType:
                      $ref: task.json#/properties/workerType
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                      REF_SUBSCHEMA:
                        IS_REQUIRED: true
                        PROPERTY_NAME: workerType
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                        TYPE_NAME: ""
                        description: |
                          Unique identifier for a worker-type within a specific provisioner
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Worker Type
                        type: string
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
                      TYPE_NAME: ""
                  SortedPropertyNames:
                  - deadline
                  - expires
                  - provisionerId
                  - retriesLeft
                  - runs
                  - schedulerId
                  - state
                  - taskGroupId
                  - taskId
                  - workerType
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
                required:
                - taskId
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - deadline
                - expires
                - retriesLeft
                - state
                - runs
                title: Task Status Structure
                type: object
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/status
              TYPE_NAME: ""
            takenUntil:
              IS_REQUIRED: true
              PROPERTY_NAME: takenUntil
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/takenUntil
              TYPE_NAME: ""
              description: |
                Time at which the run expires and is resolved as `exception`,
                with reason `claim-expired` if the run haven't been reclaimed.
              format: date-time
              type: string
            task:
              $ref: task.json#
              IS_REQUIRED: true
              PROPERTY_NAME: task
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                TYPE_NAME: TaskDefinitionResponse
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Definition of a task that can be scheduled
                properties:
                  MemberNames:
                    created: Created
                    deadline: Deadline
                    dependencies: Dependencies
                    expires: Expires
                    extra: Extra
                    metadata: Metadata
                    payload: Payload
                    priority: Priority
                    provisionerId: ProvisionerID
                    requires: Requires
                    retries: Retries
                    routes: Routes
                    schedulerId: SchedulerID
                    scopes: Scopes
                    tags: Tags
                    taskGroupId: TaskGroupID
                    workerType: WorkerType
                  Properties:
                    created:
                      IS_REQUIRED: true
                      PROPERTY_NAME: created
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/created
                      TYPE_NAME: ""
                      description: Creation time of task
                      format: date-time
                      title: Created
                      type: string
                    deadline:
                      IS_REQUIRED: true
                      PROPERTY_NAME: deadline
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/deadline
                      TYPE_NAME: ""
                      description: |
                        Deadline of the task, `pending` and `running` runs are
                        resolved as **exception** if not resolved by other means
                        before the deadline. Note, deadline cannot be more than
                        5 days into the future
                      format: date-time
                      title: Deadline
                      type: string
                    dependencies:
                      IS_REQUIRED: true
                      PROPERTY_NAME: dependencies
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
                      TYPE_NAME: ""
                      default: []
                      description: |
                        List of dependent tasks. These must either be _completed_ or _resolved_
                        before this task is scheduled. See `requires` for semantics.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: ""
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
                        TYPE_NAME: ""
                        description: |
                          The `taskId` of a task that must be resolved before this task is
                          scheduled.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task Dependency
                        type: string
                      maxItems: 100
                      title: Task Dependencies
                      type: array
                      uniqueItems: true
                    expires:
                      IS_REQUIRED: false
                      PROPERTY_NAME: expires
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
                      TYPE_NAME: ""
                      description: |
                        Task expiration, time at which task definition and status is deleted.
                        Notice that all artifacts for the task must have an expiration that is no
                        later than this. If this property isn't it will be set to `deadline`
                        plus one year (this default may change).
                      format: date-time
                      title: Expiration
                      type: string
                    extra:
                      IS_REQUIRED: true
                      PROPERTY_NAME: extra
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
                      TYPE_NAME: ""
                      default: {}
                      description: |
                        Object with properties that can hold any kind of extra data that should be
                        associated with the task. This can be data for the task which doesn't
                        fit into `payload`, or it can supplementary data for use in services
                        listening for events from this task. For example this could be details to
                        display on _treeherder_, or information for indexing the task. Please, try
                        to put all related information under one property, so `extra` data keys
                        for treeherder reporting and task indexing don't conflict, hence, we have
                        reusable services. **Warning**, do not stuff large data-sets in here --
                        task definitions should not take-up multiple MiBs.
                      title: Extra Data
                      type: object
                    metadata:
                      $ref: task-metadata.json#
                      IS_REQUIRED: true
                      PROPERTY_NAME: metadata
                      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                      REF_SUBSCHEMA:
                        $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                        IS_REQUIRED: false
                        PROPERTY_NAME: ""
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                        TYPE_NAME: TaskMetadata
                        additionalProperties:
                          Boolean: false
                          Properties: null
                        description: |
                          Required task metadata
                        properties:
                          MemberNames:
                            description: Description
                            name: Name
                            owner: Owner
                            source: Source
                          Properties:
                            description:
                              IS_REQUIRED: true
                              PROPERTY_NAME: description
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
                              TYPE_NAME: ""
                              description: |
                                Human readable description of the task, please **explain** what the
                                task does. A few lines of documentation is not going to hurt you.
                              maxLength: 32768
                              title: Description
                              type: string
                            name:
                              IS_REQUIRED: true
                              PROPERTY_NAME: name
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
                              TYPE_NAME: ""
                              description: |
                                Human readable name of task, used to very briefly given an idea about
                                what the task does.
                              maxLength: 255
                              title: Name
                              type: string
                            owner:
                              IS_REQUIRED: true
                              PROPERTY_NAME: owner
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
                              TYPE_NAME: ""
                              description: |
                                E-mail of person who caused this task, e.g. the person who did
                                `hg push`. The person we should contact to ask why this task is here.
                              format: email
                              maxLength: 255
                              title: Owner
                              type: string
                            source:
                              IS_REQUIRED: true
                              PROPERTY_NAME: source
                              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
                              TYPE_NAME: ""
                              description: |
                                Link to source of this task, should specify a file, revision and
                                repository. This should be place someone can go an do a git/hg blame
                                to who came up with recipe for this task.
                              format: uri
                              maxLength: 4096
                              pattern: ^https?://
                              title: Source
                              type: string
                          SortedPropertyNames:
                          - description
                          - name
                          - owner
                          - source
                          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
                        required:
                        - name
                        - description
                        - owner
                        - source
                        title: Task Metadata
                        type: object
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/metadata
                      TYPE_NAME: ""
                    payload:
                      IS_REQUIRED: true
                      PROPERTY_NAME: payload
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
                      TYPE_NAME: ""
                      description: |
                        Task-specific payload following worker-specific format.
                        Refer to the documentation for the worker implementing
                        `<provisionerId>/<workerType>` for details.
                      title: Task Payload
                      type: object
                    priority:
                      IS_REQUIRED: true
                      PROPERTY_NAME: priority
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
                      TYPE_NAME: ""
                      default: lowest
                      description: |
                        Priority of task. This defaults to `lowest` and the scope
                        `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                        to define a task with `<priority>`. The `normal` priority is treated as
                        `lowest`.
                      enum:
                      - highest
                      - very-high
                      - high
                      - medium
                      - low
                      - very-low
                      - lowest
                      - normal
                      title: Task Priority
                      type: string
                    provisionerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: provisionerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                      TYPE_NAME: ""
                      description: |
                        Unique identifier for a provisioner, that can supply specified
                        `workerType`
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Provisioner Id
                      type: string
                    requires:
                      IS_REQUIRED: true
                      PROPERTY_NAME: requires
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
                      TYPE_NAME: ""
                      default: all-completed
                      description: |
                        The tasks relation to its dependencies. This property specifies the
                        semantics of the `task.dependencies` property.
                        If `all-completed` is given the task will be scheduled when all
                        dependencies are resolved _completed_ (successful resolution).
                        If `all-resolved` is given the task will be scheduled when all dependencies
                        have been resolved, regardless of what their resolution is.
                      enum:
                      - all-completed
                      - all-resolved
                      title: Dependency Requirement Semantics
                      type: string
                    retries:
                      IS_REQUIRED: true
                      PROPERTY_NAME: retries
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
                      TYPE_NAME: ""
                      default: 5
                      description: |
                        Number of times to retry the task in case of infrastructure issues.
                        An _infrastructure issue_ is a worker node that crashes or is shutdown,
                        these events are to be expected.
                      maximum: 49
                      minimum: 0
                      title: Retries
                      type: integer
                    routes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: routes
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
                      TYPE_NAME: ""
                      default: []
                      description: |
                        List of task-specific routes. Pulse messages about the task will be CC'ed to
                        `route.<value>` for each `<value>` in this array.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: ""
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
                        TYPE_NAME: ""
                        description: |
                          A task specific route.
                        maxLength: 249
                        minLength: 1
                        title: Task Specific Route
                        type: string
                      maxItems: 64
                      title: Task Specific Routes
                      type: array
                      uniqueItems: true
                    schedulerId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: schedulerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                      TYPE_NAME: ""
                      default: '-'
                      description: |
                        All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                        * it can represent the entity that created the task;
                        * it can limit addition of new tasks to a task group: the caller of
                            `createTask` must have a scope related to the `schedulerId` of the task
                            group;
                        * it controls who can manipulate tasks, again by requiring
                            `schedulerId`-related scopes; and
                        * it appears in the routing key for Pulse messages about the task.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Scheduler Identifier
                      type: string
                    scopes:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scopes
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
                      TYPE_NAME: ""
                      description: |
                        List of scopes that the task is authorized to use during its execution.
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: ""
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
                        TYPE_NAME: ""
                        description: |
                          A single scope. A scope must be composed of
                          printable ASCII characters and spaces.  Scopes ending in more than
                          one `*` character are forbidden.
                        pattern: ^[ -~]*$
                        type: string
                      title: Scopes
                      type: array
                      uniqueItems: false
                    tags:
                      IS_REQUIRED: true
                      PROPERTY_NAME: tags
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
                      TYPE_NAME: ""
                      additionalProperties:
                        Boolean: null
                        Properties:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
                          TYPE_NAME: ""
                          maxLength: 4096
                          type: string
                      default: {}
                      description: |
                        Arbitrary key-value tags (only strings limited to 4k). These can be used
                        to attach informal metadata to a task. Use this for informal tags that
                        tasks can be classified by. You can also think of strings here as
                        candidates for formal metadata. Something like
                        `purpose: 'build' || 'test'` is a good example.
                      title: Tags
                      type: object
                    taskGroupId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskGroupId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                      TYPE_NAME: ""
                      description: |
                        Identifier for a group of tasks scheduled together with this task.
                        Generally, all tasks related to a single event such as a version-control
                        push or a nightly build have the same `taskGroupId`.  This property
                        defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                        the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                        decision tasks.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task-Group Identifier
                      type: string
                    workerType:
                      IS_REQUIRED: true
                      PROPERTY_NAME: workerType
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                      TYPE_NAME: ""
                      description: |
                        Unique identifier for a worker-type within a specific provisioner
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Type
                      type: string
                  SortedPropertyNames:
                  - created
                  - deadline
                  - dependencies
                  - expires
                  - extra
                  - metadata
                  - payload
                  - priority
                  - provisionerId
                  - requires
                  - retries
                  - routes
                  - schedulerId
                  - scopes
                  - tags
                  - taskGroupId
                  - workerType
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties
                required:
                - provisionerId
                - workerType
                - schedulerId
                - taskGroupId
                - dependencies
                - requires
                - routes
                - priority
                - retries
                - created
                - deadline
                - scopes
                - payload
                - metadata
                - tags
                - extra
                title: Task Definition Response
                type: object
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/task
              TYPE_NAME: ""
            workerGroup:
              IS_REQUIRED: true
              PROPERTY_NAME: workerGroup
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/workerGroup
              TYPE_NAME: ""
              description: |
                Identifier for the worker-group within which this run started.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
            workerId:
              IS_REQUIRED: true
              PROPERTY_NAME: workerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/workerId
              TYPE_NAME: ""
              description: |
                Identifier for the worker executing this run.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
          SortedPropertyNames:
          - credentials
          - runId
          - status
          - takenUntil
          - task
          - workerGroup
          - workerId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties
        required:
        - status
        - runId
        - workerGroup
        - workerId
        - takenUntil
        - task
        - credentials
        title: Task Claim
        type: object
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - tasks
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties
required:
- tasks
title: Claim Work Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items
=================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items
TYPE_NAME: TaskClaim
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    credentials: Credentials
    runId: RunID
    status: Status
    takenUntil: TakenUntil
    task: Task
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    credentials:
      $ref: task-credentials.json#
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
        TYPE_NAME: TaskCredentials
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Temporary credentials granting `task.scopes` and the scope:
          `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
          the task, upload artifacts and report task resolution.

          The temporary credentials are set to expire after `takenUntil`. They
          won't expire exactly at `takenUntil` but shortly after, hence, requests
          coming close `takenUntil` won't have problems even if there is a little
          clock drift.

          Workers should use these credentials when making requests on behalf of
          a task. This includes requests to create artifacts, reclaiming the task
          reporting the task `completed`, `failed` or `exception`.

          Note, a new set of temporary credentials is issued when the worker
          reclaims the task.
        properties:
          MemberNames:
            accessToken: AccessToken
            certificate: Certificate
            clientId: ClientID
          Properties:
            accessToken:
              IS_REQUIRED: true
              PROPERTY_NAME: accessToken
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/accessToken
              TYPE_NAME: ""
              description: |
                The `accessToken` for the temporary credentials.
              minLength: 1
              type: string
            certificate:
              IS_REQUIRED: true
              PROPERTY_NAME: certificate
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/certificate
              TYPE_NAME: ""
              description: |
                The `certificate` for the temporary credentials, these are required
                for the temporary credentials to work.
              minLength: 1
              type: string
            clientId:
              IS_REQUIRED: true
              PROPERTY_NAME: clientId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/clientId
              TYPE_NAME: ""
              description: |
                The `clientId` for the temporary credentials.
              minLength: 1
              type: string
          SortedPropertyNames:
          - accessToken
          - certificate
          - clientId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties
        required:
        - clientId
        - accessToken
        - certificate
        title: Task Credentials
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/credentials
      TYPE_NAME: ""
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/runId
      TYPE_NAME: ""
      description: |
        `run-id` assigned to this run of the task
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/status
      TYPE_NAME: ""
    takenUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: takenUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/takenUntil
      TYPE_NAME: ""
      description: |
        Time at which the run expires and is resolved as `exception`,
        with reason `claim-expired` if the run haven't been reclaimed.
      format: date-time
      type: string
    task:
      $ref: task.json#
      IS_REQUIRED: true
      PROPERTY_NAME: task
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
        TYPE_NAME: TaskDefinitionResponse
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Definition of a task that can be scheduled
        properties:
          MemberNames:
            created: Created
            deadline: Deadline
            dependencies: Dependencies
            expires: Expires
            extra: Extra
            metadata: Metadata
            payload: Payload
            priority: Priority
            provisionerId: ProvisionerID
            requires: Requires
            retries: Retries
            routes: Routes
            schedulerId: SchedulerID
            scopes: Scopes
            tags: Tags
            taskGroupId: TaskGroupID
            workerType: WorkerType
          Properties:
            created:
              IS_REQUIRED: true
              PROPERTY_NAME: created
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/created
              TYPE_NAME: ""
              description: Creation time of task
              format: date-time
              title: Created
              type: string
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            dependencies:
              IS_REQUIRED: true
              PROPERTY_NAME: dependencies
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
              TYPE_NAME: ""
              default: []
              description: |
                List of dependent tasks. These must either be _completed_ or _resolved_
                before this task is scheduled. See `requires` for semantics.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
                TYPE_NAME: ""
                description: |
                  The `taskId` of a task that must be resolved before this task is
                  scheduled.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task Dependency
                type: string
              maxItems: 100
              title: Task Dependencies
              type: array
              uniqueItems: true
            expires:
              IS_REQUIRED: false
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and status is deleted.
                Notice that all artifacts for the task must have an expiration that is no
                later than this. If this property isn't it will be set to `deadline`
                plus one year (this default may change).
              format: date-time
              title: Expiration
              type: string
            extra:
              IS_REQUIRED: true
              PROPERTY_NAME: extra
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
              TYPE_NAME: ""
              default: {}
              description: |
                Object with properties that can hold any kind of extra data that should be
                associated with the task. This can be data for the task which doesn't
                fit into `payload`, or it can supplementary data for use in services
                listening for events from this task. For example this could be details to
                display on _treeherder_, or information for indexing the task. Please, try
                to put all related information under one property, so `extra` data keys
                for treeherder reporting and task indexing don't conflict, hence, we have
                reusable services. **Warning**, do not stuff large data-sets in here --
                task definitions should not take-up multiple MiBs.
              title: Extra Data
              type: object
            metadata:
              $ref: task-metadata.json#
              IS_REQUIRED: true
              PROPERTY_NAME: metadata
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                TYPE_NAME: TaskMetadata
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Required task metadata
                properties:
                  MemberNames:
                    description: Description
                    name: Name
                    owner: Owner
                    source: Source
                  Properties:
                    description:
                      IS_REQUIRED: true
                      PROPERTY_NAME: description
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
                      TYPE_NAME: ""
                      description: |
                        Human readable description of the task, please **explain** what the
                        task does. A few lines of documentation is not going to hurt you.
                      maxLength: 32768
                      title: Description
                      type: string
                    name:
                      IS_REQUIRED: true
                      PROPERTY_NAME: name
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
                      TYPE_NAME: ""
                      description: |
                        Human readable name of task, used to very briefly given an idea about
                        what the task does.
                      maxLength: 255
                      title: Name
                      type: string
                    owner:
                      IS_REQUIRED: true
                      PROPERTY_NAME: owner
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
                      TYPE_NAME: ""
                      description: |
                        E-mail of person who caused this task, e.g. the person who did
                        `hg push`. The person we should contact to ask why this task is here.
                      format: email
                      maxLength: 255
                      title: Owner
                      type: string
                    source:
                      IS_REQUIRED: true
                      PROPERTY_NAME: source
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
                      TYPE_NAME: ""
                      description: |
                        Link to source of this task, should specify a file, revision and
                        repository. This should be place someone can go an do a git/hg blame
                        to who came up with recipe for this task.
                      format: uri
                      maxLength: 4096
                      pattern: ^https?://
                      title: Source
                      type: string
                  SortedPropertyNames:
                  - description
                  - name
                  - owner
                  - source
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
                required:
                - name
                - description
                - owner
                - source
                title: Task Metadata
                type: object
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/metadata
              TYPE_NAME: ""
            payload:
              IS_REQUIRED: true
              PROPERTY_NAME: payload
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
              TYPE_NAME: ""
              description: |
                Task-specific payload following worker-specific format.
                Refer to the documentation for the worker implementing
                `<provisionerId>/<workerType>` for details.
              title: Task Payload
              type: object
            priority:
              IS_REQUIRED: true
              PROPERTY_NAME: priority
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
              TYPE_NAME: ""
              default: lowest
              description: |
                Priority of task. This defaults to `lowest` and the scope
                `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                to define a task with `<priority>`. The `normal` priority is treated as
                `lowest`.
              enum:
              - highest
              - very-high
              - high
              - medium
              - low
              - very-low
              - lowest
              - normal
              title: Task Priority
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              TYPE_NAME: ""
              description: |
                Unique identifier for a provisioner, that can supply specified
                `workerType`
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            requires:
              IS_REQUIRED: true
              PROPERTY_NAME: requires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
              TYPE_NAME: ""
              default: all-completed
              description: |
                The tasks relation to its dependencies. This property specifies the
                semantics of the `task.dependencies` property.
                If `all-completed` is given the task will be scheduled when all
                dependencies are resolved _completed_ (successful resolution).
                If `all-resolved` is given the task will be scheduled when all dependencies
                have been resolved, regardless of what their resolution is.
              enum:
              - all-completed
              - all-resolved
              title: Dependency Requirement Semantics
              type: string
            retries:
              IS_REQUIRED: true
              PROPERTY_NAME: retries
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
              TYPE_NAME: ""
              default: 5
              description: |
                Number of times to retry the task in case of infrastructure issues.
                An _infrastructure issue_ is a worker node that crashes or is shutdown,
                these events are to be expected.
              maximum: 49
              minimum: 0
              title: Retries
              type: integer
            routes:
              IS_REQUIRED: true
              PROPERTY_NAME: routes
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
              TYPE_NAME: ""
              default: []
              description: |
                List of task-specific routes. Pulse messages about the task will be CC'ed to
                `route.<value>` for each `<value>` in this array.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
                TYPE_NAME: ""
                description: |
                  A task specific route.
                maxLength: 249
                minLength: 1
                title: Task Specific Route
                type: string
              maxItems: 64
              title: Task Specific Routes
              type: array
              uniqueItems: true
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
              description: |
                All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                * it can represent the entity that created the task;
                * it can limit addition of new tasks to a task group: the caller of
                    `createTask` must have a scope related to the `schedulerId` of the task
                    group;
                * it controls who can manipulate tasks, again by requiring
                    `schedulerId`-related scopes; and
                * it appears in the routing key for Pulse messages about the task.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
              TYPE_NAME: ""
              description: |
                List of scopes that the task is authorized to use during its execution.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
                TYPE_NAME: ""
                description: |
                  A single scope. A scope must be composed of
                  printable ASCII characters and spaces.  Scopes ending in more than
                  one `*` character are forbidden.
                pattern: ^[ -~]*$
                type: string
              title: Scopes
              type: array
              uniqueItems: false
            tags:
              IS_REQUIRED: true
              PROPERTY_NAME: tags
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
              TYPE_NAME: ""
              additionalProperties:
                Boolean: null
                Properties:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
                  TYPE_NAME: ""
                  maxLength: 4096
                  type: string
              default: {}
              description: |
                Arbitrary key-value tags (only strings limited to 4k). These can be used
                to attach informal metadata to a task. Use this for informal tags that
                tasks can be classified by. You can also think of strings here as
                candidates for formal metadata. Something like
                `purpose: 'build' || 'test'` is a good example.
              title: Tags
              type: object
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              TYPE_NAME: ""
              description: |
                Identifier for a group of tasks scheduled together with this task.
                Generally, all tasks related to a single event such as a version-control
                push or a nightly build have the same `taskGroupId`.  This property
                defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                decision tasks.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              TYPE_NAME: ""
              description: |
                Unique identifier for a worker-type within a specific provisioner
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - created
          - deadline
          - dependencies
          - expires
          - extra
          - metadata
          - payload
          - priority
          - provisionerId
          - requires
          - retries
          - routes
          - schedulerId
          - scopes
          - tags
          - taskGroupId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties
        required:
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - dependencies
        - requires
        - routes
        - priority
        - retries
        - created
        - deadline
        - scopes
        - payload
        - metadata
        - tags
        - extra
        title: Task Definition Response
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/task
      TYPE_NAME: ""
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which this run started.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the worker executing this run.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - credentials
  - runId
  - status
  - takenUntil
  - task
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/claim-work-response.json#/properties/tasks/items/properties
required:
- status
- runId
- workerGroup
- workerId
- takenUntil
- task
- credentials
title: Task Claim
type: object


https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#
TYPE_NAME: TaskDefinitionRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a task that can be scheduled
properties:
  MemberNames:
    created: Created
    deadline: Deadline
    dependencies: Dependencies
    expires: Expires
    extra: Extra
    metadata: Metadata
    payload: Payload
    priority: Priority
    provisionerId: ProvisionerID
    requires: Requires
    retries: Retries
    routes: Routes
    schedulerId: SchedulerID
    scopes: Scopes
    tags: Tags
    taskGroupId: TaskGroupID
    workerType: WorkerType
  Properties:
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/created
      TYPE_NAME: ""
      description: Creation time of task
      format: date-time
      title: Created
      type: string
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/deadline
      TYPE_NAME: ""
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    dependencies:
      $ref: task.json#/properties/dependencies
      IS_REQUIRED: false
      PROPERTY_NAME: dependencies
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: dependencies
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
        TYPE_NAME: ""
        default: []
        description: |
          List of dependent tasks. These must either be _completed_ or _resolved_
          before this task is scheduled. See `requires` for semantics.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
          TYPE_NAME: ""
          description: |
            The `taskId` of a task that must be resolved before this task is
            scheduled.
          pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
          title: Task Dependency
          type: string
        maxItems: 100
        title: Task Dependencies
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/dependencies
      TYPE_NAME: ""
      default: []
    expires:
      $ref: task.json#/properties/expires
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: expires
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
        TYPE_NAME: ""
        description: |
          Task expiration, time at which task definition and status is deleted.
          Notice that all artifacts for the task must have an expiration that is no
          later than this. If this property isn't it will be set to `deadline`
          plus one year (this default may change).
        format: date-time
        title: Expiration
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/expires
      TYPE_NAME: ""
    extra:
      $ref: task.json#/properties/extra
      IS_REQUIRED: false
      PROPERTY_NAME: extra
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: extra
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
        TYPE_NAME: ""
        default: {}
        description: |
          Object with properties that can hold any kind of extra data that should be
          associated with the task. This can be data for the task which doesn't
          fit into `payload`, or it can supplementary data for use in services
          listening for events from this task. For example this could be details to
          display on _treeherder_, or information for indexing the task. Please, try
          to put all related information under one property, so `extra` data keys
          for treeherder reporting and task indexing don't conflict, hence, we have
          reusable services. **Warning**, do not stuff large data-sets in here --
          task definitions should not take-up multiple MiBs.
        title: Extra Data
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/extra
      TYPE_NAME: ""
      default: {}
    metadata:
      $ref: task-metadata.json#
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
        TYPE_NAME: TaskMetadata
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Required task metadata
        properties:
          MemberNames:
            description: Description
            name: Name
            owner: Owner
            source: Source
          Properties:
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
              TYPE_NAME: ""
              description: |
                Human readable description of the task, please **explain** what the
                task does. A few lines of documentation is not going to hurt you.
              maxLength: 32768
              title: Description
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
              TYPE_NAME: ""
              description: |
                Human readable name of task, used to very briefly given an idea about
                what the task does.
              maxLength: 255
              title: Name
              type: string
            owner:
              IS_REQUIRED: true
              PROPERTY_NAME: owner
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
              TYPE_NAME: ""
              description: |
                E-mail of person who caused this task, e.g. the person who did
                `hg push`. The person we should contact to ask why this task is here.
              format: email
              maxLength: 255
              title: Owner
              type: string
            source:
              IS_REQUIRED: true
              PROPERTY_NAME: source
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
              TYPE_NAME: ""
              description: |
                Link to source of this task, should specify a file, revision and
                repository. This should be place someone can go an do a git/hg blame
                to who came up with recipe for this task.
              format: uri
              maxLength: 4096
              pattern: ^https?://
              title: Source
              type: string
          SortedPropertyNames:
          - description
          - name
          - owner
          - source
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
        required:
        - name
        - description
        - owner
        - source
        title: Task Metadata
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/metadata
      TYPE_NAME: ""
    payload:
      $ref: task.json#/properties/payload
      IS_REQUIRED: true
      PROPERTY_NAME: payload
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: payload
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
        TYPE_NAME: ""
        description: |
          Task-specific payload following worker-specific format.
          Refer to the documentation for the worker implementing
          `<provisionerId>/<workerType>` for details.
        title: Task Payload
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/payload
      TYPE_NAME: ""
      default: []
    priority:
      $ref: task.json#/properties/priority
      IS_REQUIRED: false
      PROPERTY_NAME: priority
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: priority
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
        TYPE_NAME: ""
        default: lowest
        description: |
          Priority of task. This defaults to `lowest` and the scope
          `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
          to define a task with `<priority>`. The `normal` priority is treated as
          `lowest`.
        enum:
        - highest
        - very-high
        - high
        - medium
        - low
        - very-low
        - lowest
        - normal
        title: Task Priority
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/priority
      TYPE_NAME: ""
      default: lowest
    provisionerId:
      $ref: task.json#/properties/provisionerId
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: provisionerId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
        TYPE_NAME: ""
        description: |
          Unique identifier for a provisioner, that can supply specified
          `workerType`
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Provisioner Id
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/provisionerId
      TYPE_NAME: ""
    requires:
      $ref: task.json#/properties/requires
      IS_REQUIRED: false
      PROPERTY_NAME: requires
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: requires
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
        TYPE_NAME: ""
        default: all-completed
        description: |
          The tasks relation to its dependencies. This property specifies the
          semantics of the `task.dependencies` property.
          If `all-completed` is given the task will be scheduled when all
          dependencies are resolved _completed_ (successful resolution).
          If `all-resolved` is given the task will be scheduled when all dependencies
          have been resolved, regardless of what their resolution is.
        enum:
        - all-completed
        - all-resolved
        title: Dependency Requirement Semantics
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/requires
      TYPE_NAME: ""
      default: all-completed
    retries:
      $ref: task.json#/properties/retries
      IS_REQUIRED: false
      PROPERTY_NAME: retries
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: retries
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
        TYPE_NAME: ""
        default: 5
        description: |
          Number of times to retry the task in case of infrastructure issues.
          An _infrastructure issue_ is a worker node that crashes or is shutdown,
          these events are to be expected.
        maximum: 49
        minimum: 0
        title: Retries
        type: integer
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/retries
      TYPE_NAME: ""
      default: 5
    routes:
      $ref: task.json#/properties/routes
      IS_REQUIRED: false
      PROPERTY_NAME: routes
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: routes
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
        TYPE_NAME: ""
        default: []
        description: |
          List of task-specific routes. Pulse messages about the task will be CC'ed to
          `route.<value>` for each `<value>` in this array.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
          TYPE_NAME: ""
          description: |
            A task specific route.
          maxLength: 249
          minLength: 1
          title: Task Specific Route
          type: string
        maxItems: 64
        title: Task Specific Routes
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/routes
      TYPE_NAME: ""
      default: []
    schedulerId:
      $ref: task.json#/properties/schedulerId
      IS_REQUIRED: false
      PROPERTY_NAME: schedulerId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: schedulerId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
        TYPE_NAME: ""
        default: '-'
        description: |
          All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

          * it can represent the entity that created the task;
          * it can limit addition of new tasks to a task group: the caller of
              `createTask` must have a scope related to the `schedulerId` of the task
              group;
          * it controls who can manipulate tasks, again by requiring
              `schedulerId`-related scopes; and
          * it appears in the routing key for Pulse messages about the task.
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Scheduler Identifier
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/schedulerId
      TYPE_NAME: ""
      default: '-'
    scopes:
      $ref: task.json#/properties/scopes
      IS_REQUIRED: false
      PROPERTY_NAME: scopes
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: scopes
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
        TYPE_NAME: ""
        description: |
          List of scopes that the task is authorized to use during its execution.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
          TYPE_NAME: ""
          description: |
            A single scope. A scope must be composed of
            printable ASCII characters and spaces.  Scopes ending in more than
            one `*` character are forbidden.
          pattern: ^[ -~]*$
          type: string
        title: Scopes
        type: array
        uniqueItems: false
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/scopes
      TYPE_NAME: ""
      default: []
    tags:
      $ref: task.json#/properties/tags
      IS_REQUIRED: false
      PROPERTY_NAME: tags
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: tags
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
        TYPE_NAME: ""
        additionalProperties:
          Boolean: null
          Properties:
            IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
            TYPE_NAME: ""
            maxLength: 4096
            type: string
        default: {}
        description: |
          Arbitrary key-value tags (only strings limited to 4k). These can be used
          to attach informal metadata to a task. Use this for informal tags that
          tasks can be classified by. You can also think of strings here as
          candidates for formal metadata. Something like
          `purpose: 'build' || 'test'` is a good example.
        title: Tags
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/tags
      TYPE_NAME: ""
      default: {}
    taskGroupId:
      $ref: task.json#/properties/taskGroupId
      IS_REQUIRED: false
      PROPERTY_NAME: taskGroupId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: taskGroupId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
        TYPE_NAME: ""
        description: |
          Identifier for a group of tasks scheduled together with this task.
          Generally, all tasks related to a single event such as a version-control
          push or a nightly build have the same `taskGroupId`.  This property
          defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
          the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
          decision tasks.
        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
        title: Task-Group Identifier
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/taskGroupId
      TYPE_NAME: ""
    workerType:
      $ref: task.json#/properties/workerType
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: workerType
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
        TYPE_NAME: ""
        description: |
          Unique identifier for a worker-type within a specific provisioner
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Worker Type
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties/workerType
      TYPE_NAME: ""
  SortedPropertyNames:
  - created
  - deadline
  - dependencies
  - expires
  - extra
  - metadata
  - payload
  - priority
  - provisionerId
  - requires
  - retries
  - routes
  - schedulerId
  - scopes
  - tags
  - taskGroupId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/create-task-request.json#/properties
required:
- provisionerId
- workerType
- created
- deadline
- payload
- metadata
title: Task Definition Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#
==============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#
TYPE_NAME: ListArtifactsResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of artifacts for a given `taskId` and `runId`.
properties:
  MemberNames:
    artifacts: Artifacts
    continuationToken: ContinuationToken
  Properties:
    artifacts:
      IS_REQUIRED: true
      PROPERTY_NAME: artifacts
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts
      TYPE_NAME: ""
      description: |
        List of artifacts for given `taskId` and `runId`.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items
        TYPE_NAME: Artifact
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Information about an artifact for the given `taskId` and `runId`.
        properties:
          MemberNames:
            contentType: ContentType
            expires: Expires
            name: Name
            storageType: StorageType
          Properties:
            contentType:
              IS_REQUIRED: true
              PROPERTY_NAME: contentType
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/contentType
              TYPE_NAME: ""
              description: |
                Mimetype for the artifact that was created.
              maxLength: 255
              title: Content-Type
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/expires
              TYPE_NAME: ""
              description: |
                Date and time after which the artifact created will be automatically
                deleted by the queue.
              format: date-time
              title: Artifact Expiration
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/name
              TYPE_NAME: ""
              description: |
                Name of the artifact that was created, this is useful if you want to
                attempt to fetch the artifact.
              maxLength: 1024
              title: Artifact Name
              type: string
            storageType:
              IS_REQUIRED: true
              PROPERTY_NAME: storageType
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/storageType
              TYPE_NAME: ""
              description: |
                This is the `storageType` for the request that was used to create
                the artifact.
              enum:
              - blob
              - s3
              - azure
              - reference
              - error
              title: Artifact Storage-Type
              type: string
          SortedPropertyNames:
          - contentType
          - expires
          - name
          - storageType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties
        required:
        - storageType
        - name
        - expires
        - contentType
        title: Artifact
        type: object
      title: Artifact List
      type: array
      uniqueItems: true
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of artifacts.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called with `continuationToken` until you get a
        result without a `continuationToken`.
      title: Continuation Token
      type: string
  SortedPropertyNames:
  - artifacts
  - continuationToken
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties
required:
- artifacts
title: List Artifacts Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items
=========================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items
TYPE_NAME: Artifact
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Information about an artifact for the given `taskId` and `runId`.
properties:
  MemberNames:
    contentType: ContentType
    expires: Expires
    name: Name
    storageType: StorageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/contentType
      TYPE_NAME: ""
      description: |
        Mimetype for the artifact that was created.
      maxLength: 255
      title: Content-Type
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the artifact created will be automatically
        deleted by the queue.
      format: date-time
      title: Artifact Expiration
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/name
      TYPE_NAME: ""
      description: |
        Name of the artifact that was created, this is useful if you want to
        attempt to fetch the artifact.
      maxLength: 1024
      title: Artifact Name
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties/storageType
      TYPE_NAME: ""
      description: |
        This is the `storageType` for the request that was used to create
        the artifact.
      enum:
      - blob
      - s3
      - azure
      - reference
      - error
      title: Artifact Storage-Type
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - name
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-artifacts-response.json#/properties/artifacts/items/properties
required:
- storageType
- name
- expires
- contentType
title: Artifact
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#
====================================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#
TYPE_NAME: ListDependentTasksResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listDependentTasks` request.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    taskId: TaskID
    tasks: Tasks
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of dependent tasks.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listDependentTasks` with
        `continuationToken` until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#/properties/taskId
      TYPE_NAME: ""
      description: |
        Identifier for the task whose dependents are being listed.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#/properties/tasks
      TYPE_NAME: ""
      description: |
        List of tasks that have `taskId` in the `task.dependencies` property.
      items:
        $ref: task-definition-and-status.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
        REF_SUBSCHEMA:
          $id: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
          TYPE_NAME: TaskDefinitionAndStatus
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Task Definition and task status structure.
          properties:
            MemberNames:
              status: Status
              task: Task
            Properties:
              status:
                $ref: task-status.json#
                IS_REQUIRED: true
                PROPERTY_NAME: status
                REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                REF_SUBSCHEMA:
                  $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                  $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                  TYPE_NAME: TaskStatusStructure
                  additionalProperties:
                    Boolean: false
                    Properties: null
                  description: |
                    A representation of **task status** as known by the queue
                  properties:
                    MemberNames:
                      deadline: Deadline
                      expires: Expires
                      provisionerId: ProvisionerID
                      retriesLeft: RetriesLeft
                      runs: Runs
                      schedulerId: SchedulerID
                      state: State
                      taskGroupId: TaskGroupID
                      taskId: TaskID
                      workerType: WorkerType
                    Properties:
                      deadline:
                        IS_REQUIRED: true
                        PROPERTY_NAME: deadline
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
                        TYPE_NAME: ""
                        description: |
                          Deadline of the task, `pending` and `running` runs are
                          resolved as **exception** if not resolved by other means
                          before the deadline. Note, deadline cannot be more than
                          5 days into the future
                        format: date-time
                        title: Deadline
                        type: string
                      expires:
                        IS_REQUIRED: true
                        PROPERTY_NAME: expires
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
                        TYPE_NAME: ""
                        description: |
                          Task expiration, time at which task definition and
                          status is deleted. Notice that all artifacts for the task
                          must have an expiration that is no later than this.
                        format: date-time
                        title: Expiration
                        type: string
                      provisionerId:
                        $ref: task.json#/properties/provisionerId
                        IS_REQUIRED: true
                        PROPERTY_NAME: provisionerId
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: provisionerId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                          TYPE_NAME: ""
                          description: |
                            Unique identifier for a provisioner, that can supply specified
                            `workerType`
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Provisioner Id
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
                        TYPE_NAME: ""
                      retriesLeft:
                        IS_REQUIRED: true
                        PROPERTY_NAME: retriesLeft
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
                        TYPE_NAME: ""
                        description: |
                          Number of retries left for the task in case of infrastructure issues
                        maximum: 999
                        minimum: 0
                        title: Retries Left
                        type: integer
                      runs:
                        IS_REQUIRED: true
                        PROPERTY_NAME: runs
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
                        TYPE_NAME: ""
                        description: |
                          List of runs, ordered so that index `i` has `runId == i`
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                          TYPE_NAME: RunInformation
                          additionalProperties:
                            Boolean: false
                            Properties: null
                          description: |
                            JSON object with information about a run
                          properties:
                            MemberNames:
                              reasonCreated: ReasonCreated
                              reasonResolved: ReasonResolved
                              resolved: Resolved
                              runId: RunID
                              scheduled: Scheduled
                              started: Started
                              state: State
                              takenUntil: TakenUntil
                              workerGroup: WorkerGroup
                              workerId: WorkerID
                            Properties:
                              reasonCreated:
                                IS_REQUIRED: true
                                PROPERTY_NAME: reasonCreated
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                                TYPE_NAME: ""
                                description: |
                                  Reason for the creation of this run,
                                  **more reasons may be added in the future**.
                                enum:
                                - scheduled
                                - retry
                                - task-retry
                                - rerun
                                - exception
                                title: Reason Created
                                type: string
                              reasonResolved:
                                IS_REQUIRED: false
                                PROPERTY_NAME: reasonResolved
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                                TYPE_NAME: ""
                                description: |
                                  Reason that run was resolved, this is mainly
                                  useful for runs resolved as `exception`.
                                  Note, **more reasons may be added in the future**, also this
                                  property is only available after the run is resolved. Some of these
                                  reasons, notably `intermittent-task`, `worker-shutdown`, and
                                  `claim-expired`, will trigger an automatic retry of the task.
                                enum:
                                - completed
                                - failed
                                - deadline-exceeded
                                - canceled
                                - superseded
                                - claim-expired
                                - worker-shutdown
                                - malformed-payload
                                - resource-unavailable
                                - internal-error
                                - intermittent-task
                                title: Reason Resolved
                                type: string
                              resolved:
                                IS_REQUIRED: false
                                PROPERTY_NAME: resolved
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                                TYPE_NAME: ""
                                description: |
                                  Date-time at which this run was resolved, ie. when the run changed
                                  state from `running` to either `completed`, `failed` or `exception`.
                                  This property is only present after the run as been resolved.
                                format: date-time
                                title: Resolved
                                type: string
                              runId:
                                IS_REQUIRED: true
                                PROPERTY_NAME: runId
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                                TYPE_NAME: ""
                                description: |
                                  Id of this task run, `run-id`s always starts from `0`
                                maximum: 1000
                                minimum: 0
                                title: Run Identifier
                                type: integer
                              scheduled:
                                IS_REQUIRED: true
                                PROPERTY_NAME: scheduled
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                                TYPE_NAME: ""
                                description: |
                                  Date-time at which this run was scheduled, ie. when the run was
                                  created in state `pending`.
                                format: date-time
                                title: Scheduled
                                type: string
                              started:
                                IS_REQUIRED: false
                                PROPERTY_NAME: started
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                                TYPE_NAME: ""
                                description: |
                                  Date-time at which this run was claimed, ie. when the run changed
                                  state from `pending` to `running`. This property is only present
                                  after the run has been claimed.
                                format: date-time
                                title: Started
                                type: string
                              state:
                                IS_REQUIRED: true
                                PROPERTY_NAME: state
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                                TYPE_NAME: ""
                                description: |
                                  State of this run
                                enum:
                                - pending
                                - running
                                - completed
                                - failed
                                - exception
                                title: Run State
                                type: string
                              takenUntil:
                                IS_REQUIRED: false
                                PROPERTY_NAME: takenUntil
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                                TYPE_NAME: ""
                                description: |
                                  Time at which the run expires and is resolved as `failed`, if the
                                  run isn't reclaimed. Note, only present after the run has been
                                  claimed.
                                format: date-time
                                title: Taken Until
                                type: string
                              workerGroup:
                                IS_REQUIRED: false
                                PROPERTY_NAME: workerGroup
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                                TYPE_NAME: ""
                                description: |
                                  Identifier for group that worker who executes this run is a part of,
                                  this identifier is mainly used for efficient routing.
                                  Note, this property is only present after the run is claimed.
                                maxLength: 38
                                minLength: 1
                                pattern: ^([a-zA-Z0-9-_]*)$
                                title: Worker Group
                                type: string
                              workerId:
                                IS_REQUIRED: false
                                PROPERTY_NAME: workerId
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                                TYPE_NAME: ""
                                description: |
                                  Identifier for worker evaluating this run within given
                                  `workerGroup`. Note, this property is only available after the run
                                  has been claimed.
                                maxLength: 38
                                minLength: 1
                                pattern: ^([a-zA-Z0-9-_]*)$
                                title: Worker Identifier
                                type: string
                            SortedPropertyNames:
                            - reasonCreated
                            - reasonResolved
                            - resolved
                            - runId
                            - scheduled
                            - started
                            - state
                            - takenUntil
                            - workerGroup
                            - workerId
                            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                          required:
                          - runId
                          - state
                          - reasonCreated
                          - scheduled
                          title: Run Information
                          type: object
                        title: List of Runs
                        type: array
                        uniqueItems: true
                      schedulerId:
                        $ref: task.json#/properties/schedulerId
                        IS_REQUIRED: true
                        PROPERTY_NAME: schedulerId
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: schedulerId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                          TYPE_NAME: ""
                          default: '-'
                          description: |
                            All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                            * it can represent the entity that created the task;
                            * it can limit addition of new tasks to a task group: the caller of
                                `createTask` must have a scope related to the `schedulerId` of the task
                                group;
                            * it controls who can manipulate tasks, again by requiring
                                `schedulerId`-related scopes; and
                            * it appears in the routing key for Pulse messages about the task.
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Scheduler Identifier
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
                        TYPE_NAME: ""
                        default: '-'
                      state:
                        IS_REQUIRED: true
                        PROPERTY_NAME: state
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
                        TYPE_NAME: ""
                        description: |
                          State of this task. This is just an auxiliary property derived from state
                          of latests run, or `unscheduled` if none.
                        enum:
                        - unscheduled
                        - pending
                        - running
                        - completed
                        - failed
                        - exception
                        title: State
                        type: string
                      taskGroupId:
                        $ref: task.json#/properties/taskGroupId
                        IS_REQUIRED: true
                        PROPERTY_NAME: taskGroupId
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: taskGroupId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                          TYPE_NAME: ""
                          description: |
                            Identifier for a group of tasks scheduled together with this task.
                            Generally, all tasks related to a single event such as a version-control
                            push or a nightly build have the same `taskGroupId`.  This property
                            defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                            the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                            decision tasks.
                          pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                          title: Task-Group Identifier
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
                        TYPE_NAME: ""
                      taskId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: taskId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
                        TYPE_NAME: ""
                        description: |
                          Unique task identifier, this is UUID encoded as
                          [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                          stripped of `=` padding.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task Identifier
                        type: string
                      workerType:
                        $ref: task.json#/properties/workerType
                        IS_REQUIRED: true
                        PROPERTY_NAME: workerType
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: workerType
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                          TYPE_NAME: ""
                          description: |
                            Unique identifier for a worker-type within a specific provisioner
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Worker Type
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
                        TYPE_NAME: ""
                    SortedPropertyNames:
                    - deadline
                    - expires
                    - provisionerId
                    - retriesLeft
                    - runs
                    - schedulerId
                    - state
                    - taskGroupId
                    - taskId
                    - workerType
                    SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
                  required:
                  - taskId
                  - provisionerId
                  - workerType
                  - schedulerId
                  - taskGroupId
                  - deadline
                  - expires
                  - retriesLeft
                  - state
                  - runs
                  title: Task Status Structure
                  type: object
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties/status
                TYPE_NAME: ""
              task:
                $ref: task.json#
                IS_REQUIRED: true
                PROPERTY_NAME: task
                REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                REF_SUBSCHEMA:
                  $id: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                  $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                  TYPE_NAME: TaskDefinitionResponse
                  additionalProperties:
                    Boolean: false
                    Properties: null
                  description: |
                    Definition of a task that can be scheduled
                  properties:
                    MemberNames:
                      created: Created
                      deadline: Deadline
                      dependencies: Dependencies
                      expires: Expires
                      extra: Extra
                      metadata: Metadata
                      payload: Payload
                      priority: Priority
                      provisionerId: ProvisionerID
                      requires: Requires
                      retries: Retries
                      routes: Routes
                      schedulerId: SchedulerID
                      scopes: Scopes
                      tags: Tags
                      taskGroupId: TaskGroupID
                      workerType: WorkerType
                    Properties:
                      created:
                        IS_REQUIRED: true
                        PROPERTY_NAME: created
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/created
                        TYPE_NAME: ""
                        description: Creation time of task
                        format: date-time
                        title: Created
                        type: string
                      deadline:
                        IS_REQUIRED: true
                        PROPERTY_NAME: deadline
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/deadline
                        TYPE_NAME: ""
                        description: |
                          Deadline of the task, `pending` and `running` runs are
                          resolved as **exception** if not resolved by other means
                          before the deadline. Note, deadline cannot be more than
                          5 days into the future
                        format: date-time
                        title: Deadline
                        type: string
                      dependencies:
                        IS_REQUIRED: true
                        PROPERTY_NAME: dependencies
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
                        TYPE_NAME: ""
                        default: []
                        description: |
                          List of dependent tasks. These must either be _completed_ or _resolved_
                          before this task is scheduled. See `requires` for semantics.
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
                          TYPE_NAME: ""
                          description: |
                            The `taskId` of a task that must be resolved before this task is
                            scheduled.
                          pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                          title: Task Dependency
                          type: string
                        maxItems: 100
                        title: Task Dependencies
                        type: array
                        uniqueItems: true
                      expires:
                        IS_REQUIRED: false
                        PROPERTY_NAME: expires
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
                        TYPE_NAME: ""
                        description: |
                          Task expiration, time at which task definition and status is deleted.
                          Notice that all artifacts for the task must have an expiration that is no
                          later than this. If this property isn't it will be set to `deadline`
                          plus one year (this default may change).
                        format: date-time
                        title: Expiration
                        type: string
                      extra:
                        IS_REQUIRED: true
                        PROPERTY_NAME: extra
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
                        TYPE_NAME: ""
                        default: {}
                        description: |
                          Object with properties that can hold any kind of extra data that should be
                          associated with the task. This can be data for the task which doesn't
                          fit into `payload`, or it can supplementary data for use in services
                          listening for events from this task. For example this could be details to
                          display on _treeherder_, or information for indexing the task. Please, try
                          to put all related information under one property, so `extra` data keys
                          for treeherder reporting and task indexing don't conflict, hence, we have
                          reusable services. **Warning**, do not stuff large data-sets in here --
                          task definitions should not take-up multiple MiBs.
                        title: Extra Data
                        type: object
                      metadata:
                        $ref: task-metadata.json#
                        IS_REQUIRED: true
                        PROPERTY_NAME: metadata
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                        REF_SUBSCHEMA:
                          $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                          TYPE_NAME: TaskMetadata
                          additionalProperties:
                            Boolean: false
                            Properties: null
                          description: |
                            Required task metadata
                          properties:
                            MemberNames:
                              description: Description
                              name: Name
                              owner: Owner
                              source: Source
                            Properties:
                              description:
                                IS_REQUIRED: true
                                PROPERTY_NAME: description
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
                                TYPE_NAME: ""
                                description: |
                                  Human readable description of the task, please **explain** what the
                                  task does. A few lines of documentation is not going to hurt you.
                                maxLength: 32768
                                title: Description
                                type: string
                              name:
                                IS_REQUIRED: true
                                PROPERTY_NAME: name
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
                                TYPE_NAME: ""
                                description: |
                                  Human readable name of task, used to very briefly given an idea about
                                  what the task does.
                                maxLength: 255
                                title: Name
                                type: string
                              owner:
                                IS_REQUIRED: true
                                PROPERTY_NAME: owner
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
                                TYPE_NAME: ""
                                description: |
                                  E-mail of person who caused this task, e.g. the person who did
                                  `hg push`. The person we should contact to ask why this task is here.
                                format: email
                                maxLength: 255
                                title: Owner
                                type: string
                              source:
                                IS_REQUIRED: true
                                PROPERTY_NAME: source
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
                                TYPE_NAME: ""
                                description: |
                                  Link to source of this task, should specify a file, revision and
                                  repository. This should be place someone can go an do a git/hg blame
                                  to who came up with recipe for this task.
                                format: uri
                                maxLength: 4096
                                pattern: ^https?://
                                title: Source
                                type: string
                            SortedPropertyNames:
                            - description
                            - name
                            - owner
                            - source
                            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
                          required:
                          - name
                          - description
                          - owner
                          - source
                          title: Task Metadata
                          type: object
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/metadata
                        TYPE_NAME: ""
                      payload:
                        IS_REQUIRED: true
                        PROPERTY_NAME: payload
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
                        TYPE_NAME: ""
                        description: |
                          Task-specific payload following worker-specific format.
                          Refer to the documentation for the worker implementing
                          `<provisionerId>/<workerType>` for details.
                        title: Task Payload
                        type: object
                      priority:
                        IS_REQUIRED: true
                        PROPERTY_NAME: priority
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
                        TYPE_NAME: ""
                        default: lowest
                        description: |
                          Priority of task. This defaults to `lowest` and the scope
                          `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                          to define a task with `<priority>`. The `normal` priority is treated as
                          `lowest`.
                        enum:
                        - highest
                        - very-high
                        - high
                        - medium
                        - low
                        - very-low
                        - lowest
                        - normal
                        title: Task Priority
                        type: string
                      provisionerId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: provisionerId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                        TYPE_NAME: ""
                        description: |
                          Unique identifier for a provisioner, that can supply specified
                          `workerType`
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Provisioner Id
                        type: string
                      requires:
                        IS_REQUIRED: true
                        PROPERTY_NAME: requires
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
                        TYPE_NAME: ""
                        default: all-completed
                        description: |
                          The tasks relation to its dependencies. This property specifies the
                          semantics of the `task.dependencies` property.
                          If `all-completed` is given the task will be scheduled when all
                          dependencies are resolved _completed_ (successful resolution).
                          If `all-resolved` is given the task will be scheduled when all dependencies
                          have been resolved, regardless of what their resolution is.
                        enum:
                        - all-completed
                        - all-resolved
                        title: Dependency Requirement Semantics
                        type: string
                      retries:
                        IS_REQUIRED: true
                        PROPERTY_NAME: retries
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
                        TYPE_NAME: ""
                        default: 5
                        description: |
                          Number of times to retry the task in case of infrastructure issues.
                          An _infrastructure issue_ is a worker node that crashes or is shutdown,
                          these events are to be expected.
                        maximum: 49
                        minimum: 0
                        title: Retries
                        type: integer
                      routes:
                        IS_REQUIRED: true
                        PROPERTY_NAME: routes
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
                        TYPE_NAME: ""
                        default: []
                        description: |
                          List of task-specific routes. Pulse messages about the task will be CC'ed to
                          `route.<value>` for each `<value>` in this array.
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
                          TYPE_NAME: ""
                          description: |
                            A task specific route.
                          maxLength: 249
                          minLength: 1
                          title: Task Specific Route
                          type: string
                        maxItems: 64
                        title: Task Specific Routes
                        type: array
                        uniqueItems: true
                      schedulerId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: schedulerId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                        TYPE_NAME: ""
                        default: '-'
                        description: |
                          All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                          * it can represent the entity that created the task;
                          * it can limit addition of new tasks to a task group: the caller of
                              `createTask` must have a scope related to the `schedulerId` of the task
                              group;
                          * it controls who can manipulate tasks, again by requiring
                              `schedulerId`-related scopes; and
                          * it appears in the routing key for Pulse messages about the task.
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Scheduler Identifier
                        type: string
                      scopes:
                        IS_REQUIRED: true
                        PROPERTY_NAME: scopes
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
                        TYPE_NAME: ""
                        description: |
                          List of scopes that the task is authorized to use during its execution.
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
                          TYPE_NAME: ""
                          description: |
                            A single scope. A scope must be composed of
                            printable ASCII characters and spaces.  Scopes ending in more than
                            one `*` character are forbidden.
                          pattern: ^[ -~]*$
                          type: string
                        title: Scopes
                        type: array
                        uniqueItems: false
                      tags:
                        IS_REQUIRED: true
                        PROPERTY_NAME: tags
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
                        TYPE_NAME: ""
                        additionalProperties:
                          Boolean: null
                          Properties:
                            IS_REQUIRED: false
                            PROPERTY_NAME: ""
                            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
                            TYPE_NAME: ""
                            maxLength: 4096
                            type: string
                        default: {}
                        description: |
                          Arbitrary key-value tags (only strings limited to 4k). These can be used
                          to attach informal metadata to a task. Use this for informal tags that
                          tasks can be classified by. You can also think of strings here as
                          candidates for formal metadata. Something like
                          `purpose: 'build' || 'test'` is a good example.
                        title: Tags
                        type: object
                      taskGroupId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: taskGroupId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                        TYPE_NAME: ""
                        description: |
                          Identifier for a group of tasks scheduled together with this task.
                          Generally, all tasks related to a single event such as a version-control
                          push or a nightly build have the same `taskGroupId`.  This property
                          defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                          the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                          decision tasks.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task-Group Identifier
                        type: string
                      workerType:
                        IS_REQUIRED: true
                        PROPERTY_NAME: workerType
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                        TYPE_NAME: ""
                        description: |
                          Unique identifier for a worker-type within a specific provisioner
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Worker Type
                        type: string
                    SortedPropertyNames:
                    - created
                    - deadline
                    - dependencies
                    - expires
                    - extra
                    - metadata
                    - payload
                    - priority
                    - provisionerId
                    - requires
                    - retries
                    - routes
                    - schedulerId
                    - scopes
                    - tags
                    - taskGroupId
                    - workerType
                    SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties
                  required:
                  - provisionerId
                  - workerType
                  - schedulerId
                  - taskGroupId
                  - dependencies
                  - requires
                  - routes
                  - priority
                  - retries
                  - created
                  - deadline
                  - scopes
                  - payload
                  - metadata
                  - tags
                  - extra
                  title: Task Definition Response
                  type: object
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties/task
                TYPE_NAME: ""
            SortedPropertyNames:
            - status
            - task
            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties
          required:
          - task
          - status
          title: Task definition and status
          type: object
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#/properties/tasks/items
        TYPE_NAME: ""
      title: Tasks that depend on `taskId`
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - taskId
  - tasks
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-dependent-tasks-response.json#/properties
required:
- taskId
- tasks
title: List Dependent Tasks Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#
TYPE_NAME: ListProvisionersResponse
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    continuationToken: ContinuationToken
    provisioners: Provisioners
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of provisioners.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called with `continuationToken` until you get a
        result without a `continuationToken`.
      title: Continuation Token
      type: string
    provisioners:
      IS_REQUIRED: true
      PROPERTY_NAME: provisioners
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items
        TYPE_NAME: ProvisionerInformation
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            actions: Actions
            description: Description
            expires: Expires
            lastDateActive: LastDateActive
            provisionerId: ProvisionerID
            stability: Stability
          Properties:
            actions:
              $ref: actions.json#
              IS_REQUIRED: true
              PROPERTY_NAME: actions
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
                TYPE_NAME: ""
                description: |
                  See taskcluster [actions](/docs/reference/platform/taskcluster-queue/docs/actions) documentation.
                items:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items
                  TYPE_NAME: Action
                  additionalProperties:
                    Boolean: false
                    Properties: null
                  description: |
                    Actions provide a generic mechanism to expose additional features of a
                    provisioner, worker type, or worker to Taskcluster clients.

                    An action is comprised of metadata describing the feature it exposes,
                    together with a webhook for triggering it.

                    The Taskcluster tools site, for example, retrieves actions when displaying
                    provisioners, worker types and workers. It presents the provisioner/worker
                    type/worker specific actions to the user. When the user triggers an action,
                    the web client takes the registered webhook, substitutes parameters into the
                    URL (see `url`), signs the requests with the Taskcluster credentials of the
                    user operating the web interface, and issues the HTTP request.

                    The level to which the action relates (provisioner, worker type, worker) is
                    called the action context. All actions, regardless of the action contexts,
                    are registered against the provisioner when calling
                    `queue.declareProvisioner`.

                    The action context is used by the web client to determine where in the web
                    interface to present the action to the user as follows:

                    | `context`   | Tool where action is displayed |
                    |-------------|--------------------------------|
                    | provisioner | Provisioner Explorer           |
                    | worker-type | Workers Explorer               |
                    | worker      | Worker Explorer                |

                    See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
                    for more information.
                  properties:
                    MemberNames:
                      context: Context
                      description: Description
                      method: Method
                      name: Name
                      title: Title
                      url: URL
                    Properties:
                      context:
                        IS_REQUIRED: true
                        PROPERTY_NAME: context
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/context
                        TYPE_NAME: ""
                        description: |
                          Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
                          which it applies to. `context` is used by the front-end to know where to display the action.

                          | `context`   | Page displayed        |
                          |-------------|-----------------------|
                          | provisioner | Provisioner Explorer  |
                          | worker-type | Workers Explorer      |
                          | worker      | Worker Explorer       |
                        enum:
                        - provisioner
                        - worker-type
                        - worker
                        title: Context
                        type: string
                      description:
                        IS_REQUIRED: true
                        PROPERTY_NAME: description
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/description
                        TYPE_NAME: ""
                        description: |
                          Description of the provisioner.
                        title: Description
                        type: string
                      method:
                        IS_REQUIRED: true
                        PROPERTY_NAME: method
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/method
                        TYPE_NAME: ""
                        description: |
                          Method to indicate the desired action to be performed for a given resource.
                        enum:
                        - POST
                        - PUT
                        - DELETE
                        - PATCH
                        title: Method
                        type: string
                      name:
                        IS_REQUIRED: true
                        PROPERTY_NAME: name
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/name
                        TYPE_NAME: ""
                        description: |
                          Short names for things like logging/error messages.
                        title: Name
                        type: string
                      title:
                        IS_REQUIRED: true
                        PROPERTY_NAME: title
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/title
                        TYPE_NAME: ""
                        description: |
                          Appropriate title for any sort of Modal prompt.
                        title: Title
                      url:
                        IS_REQUIRED: true
                        PROPERTY_NAME: url
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/url
                        TYPE_NAME: ""
                        description: |
                          When an action is triggered, a request is made using the `url` and `method`.
                          Depending on the `context`, the following parameters will be substituted in the url:

                          | `context`   | Path parameters                                          |
                          |-------------|----------------------------------------------------------|
                          | provisioner | <provisionerId>                                          |
                          | worker-type | <provisionerId>, <workerType>                            |
                          | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                          _Note: The request needs to be signed with the user's Taskcluster credentials._
                        title: URL
                        type: string
                    SortedPropertyNames:
                    - context
                    - description
                    - method
                    - name
                    - title
                    - url
                    SourceURL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties
                  required:
                  - name
                  - title
                  - context
                  - url
                  - method
                  - description
                  title: Action
                  type: object
                title: Actions
                type: array
                uniqueItems: true
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/actions
              TYPE_NAME: ""
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/description
              TYPE_NAME: ""
              description: |
                Description of the provisioner.
              title: Description
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/expires
              TYPE_NAME: ""
              description: |
                Date and time after which the provisioner created will be automatically
                deleted by the queue.
              format: date-time
              title: Provisioner Expiration
              type: string
            lastDateActive:
              IS_REQUIRED: true
              PROPERTY_NAME: lastDateActive
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/lastDateActive
              TYPE_NAME: ""
              description: |
                Date and time where the provisioner was last seen active
              format: date-time
              title: Provisioner Last Date Active
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/provisionerId
              TYPE_NAME: ""
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner ID
              type: string
            stability:
              IS_REQUIRED: true
              PROPERTY_NAME: stability
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/stability
              TYPE_NAME: ""
              description: |
                This is the stability of the provisioner. Accepted values:
                 * `experimental`
                 * `stable`
                 * `deprecated`
              enum:
              - experimental
              - stable
              - deprecated
              title: Stability
              type: string
          SortedPropertyNames:
          - actions
          - description
          - expires
          - lastDateActive
          - provisionerId
          - stability
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties
        required:
        - provisionerId
        - description
        - stability
        - expires
        - lastDateActive
        - actions
        title: Provisioner Information
        type: object
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - provisioners
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties
required:
- provisioners
title: List Provisioners Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items
===============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items
TYPE_NAME: ProvisionerInformation
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    actions: Actions
    description: Description
    expires: Expires
    lastDateActive: LastDateActive
    provisionerId: ProvisionerID
    stability: Stability
  Properties:
    actions:
      $ref: actions.json#
      IS_REQUIRED: true
      PROPERTY_NAME: actions
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
        TYPE_NAME: ""
        description: |
          See taskcluster [actions](/docs/reference/platform/taskcluster-queue/docs/actions) documentation.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items
          TYPE_NAME: Action
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Actions provide a generic mechanism to expose additional features of a
            provisioner, worker type, or worker to Taskcluster clients.

            An action is comprised of metadata describing the feature it exposes,
            together with a webhook for triggering it.

            The Taskcluster tools site, for example, retrieves actions when displaying
            provisioners, worker types and workers. It presents the provisioner/worker
            type/worker specific actions to the user. When the user triggers an action,
            the web client takes the registered webhook, substitutes parameters into the
            URL (see `url`), signs the requests with the Taskcluster credentials of the
            user operating the web interface, and issues the HTTP request.

            The level to which the action relates (provisioner, worker type, worker) is
            called the action context. All actions, regardless of the action contexts,
            are registered against the provisioner when calling
            `queue.declareProvisioner`.

            The action context is used by the web client to determine where in the web
            interface to present the action to the user as follows:

            | `context`   | Tool where action is displayed |
            |-------------|--------------------------------|
            | provisioner | Provisioner Explorer           |
            | worker-type | Workers Explorer               |
            | worker      | Worker Explorer                |

            See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
            for more information.
          properties:
            MemberNames:
              context: Context
              description: Description
              method: Method
              name: Name
              title: Title
              url: URL
            Properties:
              context:
                IS_REQUIRED: true
                PROPERTY_NAME: context
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/context
                TYPE_NAME: ""
                description: |
                  Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
                  which it applies to. `context` is used by the front-end to know where to display the action.

                  | `context`   | Page displayed        |
                  |-------------|-----------------------|
                  | provisioner | Provisioner Explorer  |
                  | worker-type | Workers Explorer      |
                  | worker      | Worker Explorer       |
                enum:
                - provisioner
                - worker-type
                - worker
                title: Context
                type: string
              description:
                IS_REQUIRED: true
                PROPERTY_NAME: description
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/description
                TYPE_NAME: ""
                description: |
                  Description of the provisioner.
                title: Description
                type: string
              method:
                IS_REQUIRED: true
                PROPERTY_NAME: method
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/method
                TYPE_NAME: ""
                description: |
                  Method to indicate the desired action to be performed for a given resource.
                enum:
                - POST
                - PUT
                - DELETE
                - PATCH
                title: Method
                type: string
              name:
                IS_REQUIRED: true
                PROPERTY_NAME: name
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/name
                TYPE_NAME: ""
                description: |
                  Short names for things like logging/error messages.
                title: Name
                type: string
              title:
                IS_REQUIRED: true
                PROPERTY_NAME: title
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/title
                TYPE_NAME: ""
                description: |
                  Appropriate title for any sort of Modal prompt.
                title: Title
              url:
                IS_REQUIRED: true
                PROPERTY_NAME: url
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/url
                TYPE_NAME: ""
                description: |
                  When an action is triggered, a request is made using the `url` and `method`.
                  Depending on the `context`, the following parameters will be substituted in the url:

                  | `context`   | Path parameters                                          |
                  |-------------|----------------------------------------------------------|
                  | provisioner | <provisionerId>                                          |
                  | worker-type | <provisionerId>, <workerType>                            |
                  | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                  _Note: The request needs to be signed with the user's Taskcluster credentials._
                title: URL
                type: string
            SortedPropertyNames:
            - context
            - description
            - method
            - name
            - title
            - url
            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties
          required:
          - name
          - title
          - context
          - url
          - method
          - description
          title: Action
          type: object
        title: Actions
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/actions
      TYPE_NAME: ""
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/description
      TYPE_NAME: ""
      description: |
        Description of the provisioner.
      title: Description
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the provisioner created will be automatically
        deleted by the queue.
      format: date-time
      title: Provisioner Expiration
      type: string
    lastDateActive:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateActive
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/lastDateActive
      TYPE_NAME: ""
      description: |
        Date and time where the provisioner was last seen active
      format: date-time
      title: Provisioner Last Date Active
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/provisionerId
      TYPE_NAME: ""
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    stability:
      IS_REQUIRED: true
      PROPERTY_NAME: stability
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties/stability
      TYPE_NAME: ""
      description: |
        This is the stability of the provisioner. Accepted values:
         * `experimental`
         * `stable`
         * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
  SortedPropertyNames:
  - actions
  - description
  - expires
  - lastDateActive
  - provisionerId
  - stability
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-provisioners-response.json#/properties/provisioners/items/properties
required:
- provisionerId
- description
- stability
- expires
- lastDateActive
- actions
title: Provisioner Information
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#
===============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#
TYPE_NAME: ListTaskGroupResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listTaskGroup` request.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    taskGroupId: TaskGroupID
    tasks: Tasks
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of tasks in the task-group.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listTaskGroup` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#/properties/taskGroupId
      TYPE_NAME: ""
      description: |
        Identifier for the task-group being listed.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    tasks:
      IS_REQUIRED: true
      PROPERTY_NAME: tasks
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#/properties/tasks
      TYPE_NAME: ""
      description: |
        List of tasks in this task-group.
      items:
        $ref: task-definition-and-status.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
        REF_SUBSCHEMA:
          $id: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
          TYPE_NAME: TaskDefinitionAndStatus
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Task Definition and task status structure.
          properties:
            MemberNames:
              status: Status
              task: Task
            Properties:
              status:
                $ref: task-status.json#
                IS_REQUIRED: true
                PROPERTY_NAME: status
                REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                REF_SUBSCHEMA:
                  $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                  $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
                  TYPE_NAME: TaskStatusStructure
                  additionalProperties:
                    Boolean: false
                    Properties: null
                  description: |
                    A representation of **task status** as known by the queue
                  properties:
                    MemberNames:
                      deadline: Deadline
                      expires: Expires
                      provisionerId: ProvisionerID
                      retriesLeft: RetriesLeft
                      runs: Runs
                      schedulerId: SchedulerID
                      state: State
                      taskGroupId: TaskGroupID
                      taskId: TaskID
                      workerType: WorkerType
                    Properties:
                      deadline:
                        IS_REQUIRED: true
                        PROPERTY_NAME: deadline
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
                        TYPE_NAME: ""
                        description: |
                          Deadline of the task, `pending` and `running` runs are
                          resolved as **exception** if not resolved by other means
                          before the deadline. Note, deadline cannot be more than
                          5 days into the future
                        format: date-time
                        title: Deadline
                        type: string
                      expires:
                        IS_REQUIRED: true
                        PROPERTY_NAME: expires
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
                        TYPE_NAME: ""
                        description: |
                          Task expiration, time at which task definition and
                          status is deleted. Notice that all artifacts for the task
                          must have an expiration that is no later than this.
                        format: date-time
                        title: Expiration
                        type: string
                      provisionerId:
                        $ref: task.json#/properties/provisionerId
                        IS_REQUIRED: true
                        PROPERTY_NAME: provisionerId
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: provisionerId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                          TYPE_NAME: ""
                          description: |
                            Unique identifier for a provisioner, that can supply specified
                            `workerType`
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Provisioner Id
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
                        TYPE_NAME: ""
                      retriesLeft:
                        IS_REQUIRED: true
                        PROPERTY_NAME: retriesLeft
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
                        TYPE_NAME: ""
                        description: |
                          Number of retries left for the task in case of infrastructure issues
                        maximum: 999
                        minimum: 0
                        title: Retries Left
                        type: integer
                      runs:
                        IS_REQUIRED: true
                        PROPERTY_NAME: runs
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
                        TYPE_NAME: ""
                        description: |
                          List of runs, ordered so that index `i` has `runId == i`
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                          TYPE_NAME: RunInformation
                          additionalProperties:
                            Boolean: false
                            Properties: null
                          description: |
                            JSON object with information about a run
                          properties:
                            MemberNames:
                              reasonCreated: ReasonCreated
                              reasonResolved: ReasonResolved
                              resolved: Resolved
                              runId: RunID
                              scheduled: Scheduled
                              started: Started
                              state: State
                              takenUntil: TakenUntil
                              workerGroup: WorkerGroup
                              workerId: WorkerID
                            Properties:
                              reasonCreated:
                                IS_REQUIRED: true
                                PROPERTY_NAME: reasonCreated
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                                TYPE_NAME: ""
                                description: |
                                  Reason for the creation of this run,
                                  **more reasons may be added in the future**.
                                enum:
                                - scheduled
                                - retry
                                - task-retry
                                - rerun
                                - exception
                                title: Reason Created
                                type: string
                              reasonResolved:
                                IS_REQUIRED: false
                                PROPERTY_NAME: reasonResolved
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                                TYPE_NAME: ""
                                description: |
                                  Reason that run was resolved, this is mainly
                                  useful for runs resolved as `exception`.
                                  Note, **more reasons may be added in the future**, also this
                                  property is only available after the run is resolved. Some of these
                                  reasons, notably `intermittent-task`, `worker-shutdown`, and
                                  `claim-expired`, will trigger an automatic retry of the task.
                                enum:
                                - completed
                                - failed
                                - deadline-exceeded
                                - canceled
                                - superseded
                                - claim-expired
                                - worker-shutdown
                                - malformed-payload
                                - resource-unavailable
                                - internal-error
                                - intermittent-task
                                title: Reason Resolved
                                type: string
                              resolved:
                                IS_REQUIRED: false
                                PROPERTY_NAME: resolved
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                                TYPE_NAME: ""
                                description: |
                                  Date-time at which this run was resolved, ie. when the run changed
                                  state from `running` to either `completed`, `failed` or `exception`.
                                  This property is only present after the run as been resolved.
                                format: date-time
                                title: Resolved
                                type: string
                              runId:
                                IS_REQUIRED: true
                                PROPERTY_NAME: runId
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                                TYPE_NAME: ""
                                description: |
                                  Id of this task run, `run-id`s always starts from `0`
                                maximum: 1000
                                minimum: 0
                                title: Run Identifier
                                type: integer
                              scheduled:
                                IS_REQUIRED: true
                                PROPERTY_NAME: scheduled
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                                TYPE_NAME: ""
                                description: |
                                  Date-time at which this run was scheduled, ie. when the run was
                                  created in state `pending`.
                                format: date-time
                                title: Scheduled
                                type: string
                              started:
                                IS_REQUIRED: false
                                PROPERTY_NAME: started
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                                TYPE_NAME: ""
                                description: |
                                  Date-time at which this run was claimed, ie. when the run changed
                                  state from `pending` to `running`. This property is only present
                                  after the run has been claimed.
                                format: date-time
                                title: Started
                                type: string
                              state:
                                IS_REQUIRED: true
                                PROPERTY_NAME: state
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                                TYPE_NAME: ""
                                description: |
                                  State of this run
                                enum:
                                - pending
                                - running
                                - completed
                                - failed
                                - exception
                                title: Run State
                                type: string
                              takenUntil:
                                IS_REQUIRED: false
                                PROPERTY_NAME: takenUntil
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                                TYPE_NAME: ""
                                description: |
                                  Time at which the run expires and is resolved as `failed`, if the
                                  run isn't reclaimed. Note, only present after the run has been
                                  claimed.
                                format: date-time
                                title: Taken Until
                                type: string
                              workerGroup:
                                IS_REQUIRED: false
                                PROPERTY_NAME: workerGroup
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                                TYPE_NAME: ""
                                description: |
                                  Identifier for group that worker who executes this run is a part of,
                                  this identifier is mainly used for efficient routing.
                                  Note, this property is only present after the run is claimed.
                                maxLength: 38
                                minLength: 1
                                pattern: ^([a-zA-Z0-9-_]*)$
                                title: Worker Group
                                type: string
                              workerId:
                                IS_REQUIRED: false
                                PROPERTY_NAME: workerId
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                                TYPE_NAME: ""
                                description: |
                                  Identifier for worker evaluating this run within given
                                  `workerGroup`. Note, this property is only available after the run
                                  has been claimed.
                                maxLength: 38
                                minLength: 1
                                pattern: ^([a-zA-Z0-9-_]*)$
                                title: Worker Identifier
                                type: string
                            SortedPropertyNames:
                            - reasonCreated
                            - reasonResolved
                            - resolved
                            - runId
                            - scheduled
                            - started
                            - state
                            - takenUntil
                            - workerGroup
                            - workerId
                            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                          required:
                          - runId
                          - state
                          - reasonCreated
                          - scheduled
                          title: Run Information
                          type: object
                        title: List of Runs
                        type: array
                        uniqueItems: true
                      schedulerId:
                        $ref: task.json#/properties/schedulerId
                        IS_REQUIRED: true
                        PROPERTY_NAME: schedulerId
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: schedulerId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                          TYPE_NAME: ""
                          default: '-'
                          description: |
                            All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                            * it can represent the entity that created the task;
                            * it can limit addition of new tasks to a task group: the caller of
                                `createTask` must have a scope related to the `schedulerId` of the task
                                group;
                            * it controls who can manipulate tasks, again by requiring
                                `schedulerId`-related scopes; and
                            * it appears in the routing key for Pulse messages about the task.
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Scheduler Identifier
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
                        TYPE_NAME: ""
                        default: '-'
                      state:
                        IS_REQUIRED: true
                        PROPERTY_NAME: state
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
                        TYPE_NAME: ""
                        description: |
                          State of this task. This is just an auxiliary property derived from state
                          of latests run, or `unscheduled` if none.
                        enum:
                        - unscheduled
                        - pending
                        - running
                        - completed
                        - failed
                        - exception
                        title: State
                        type: string
                      taskGroupId:
                        $ref: task.json#/properties/taskGroupId
                        IS_REQUIRED: true
                        PROPERTY_NAME: taskGroupId
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: taskGroupId
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                          TYPE_NAME: ""
                          description: |
                            Identifier for a group of tasks scheduled together with this task.
                            Generally, all tasks related to a single event such as a version-control
                            push or a nightly build have the same `taskGroupId`.  This property
                            defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                            the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                            decision tasks.
                          pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                          title: Task-Group Identifier
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
                        TYPE_NAME: ""
                      taskId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: taskId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
                        TYPE_NAME: ""
                        description: |
                          Unique task identifier, this is UUID encoded as
                          [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                          stripped of `=` padding.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task Identifier
                        type: string
                      workerType:
                        $ref: task.json#/properties/workerType
                        IS_REQUIRED: true
                        PROPERTY_NAME: workerType
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                        REF_SUBSCHEMA:
                          IS_REQUIRED: true
                          PROPERTY_NAME: workerType
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                          TYPE_NAME: ""
                          description: |
                            Unique identifier for a worker-type within a specific provisioner
                          maxLength: 38
                          minLength: 1
                          pattern: ^([a-zA-Z0-9-_]*)$
                          title: Worker Type
                          type: string
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
                        TYPE_NAME: ""
                    SortedPropertyNames:
                    - deadline
                    - expires
                    - provisionerId
                    - retriesLeft
                    - runs
                    - schedulerId
                    - state
                    - taskGroupId
                    - taskId
                    - workerType
                    SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
                  required:
                  - taskId
                  - provisionerId
                  - workerType
                  - schedulerId
                  - taskGroupId
                  - deadline
                  - expires
                  - retriesLeft
                  - state
                  - runs
                  title: Task Status Structure
                  type: object
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties/status
                TYPE_NAME: ""
              task:
                $ref: task.json#
                IS_REQUIRED: true
                PROPERTY_NAME: task
                REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                REF_SUBSCHEMA:
                  $id: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                  $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
                  TYPE_NAME: TaskDefinitionResponse
                  additionalProperties:
                    Boolean: false
                    Properties: null
                  description: |
                    Definition of a task that can be scheduled
                  properties:
                    MemberNames:
                      created: Created
                      deadline: Deadline
                      dependencies: Dependencies
                      expires: Expires
                      extra: Extra
                      metadata: Metadata
                      payload: Payload
                      priority: Priority
                      provisionerId: ProvisionerID
                      requires: Requires
                      retries: Retries
                      routes: Routes
                      schedulerId: SchedulerID
                      scopes: Scopes
                      tags: Tags
                      taskGroupId: TaskGroupID
                      workerType: WorkerType
                    Properties:
                      created:
                        IS_REQUIRED: true
                        PROPERTY_NAME: created
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/created
                        TYPE_NAME: ""
                        description: Creation time of task
                        format: date-time
                        title: Created
                        type: string
                      deadline:
                        IS_REQUIRED: true
                        PROPERTY_NAME: deadline
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/deadline
                        TYPE_NAME: ""
                        description: |
                          Deadline of the task, `pending` and `running` runs are
                          resolved as **exception** if not resolved by other means
                          before the deadline. Note, deadline cannot be more than
                          5 days into the future
                        format: date-time
                        title: Deadline
                        type: string
                      dependencies:
                        IS_REQUIRED: true
                        PROPERTY_NAME: dependencies
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
                        TYPE_NAME: ""
                        default: []
                        description: |
                          List of dependent tasks. These must either be _completed_ or _resolved_
                          before this task is scheduled. See `requires` for semantics.
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
                          TYPE_NAME: ""
                          description: |
                            The `taskId` of a task that must be resolved before this task is
                            scheduled.
                          pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                          title: Task Dependency
                          type: string
                        maxItems: 100
                        title: Task Dependencies
                        type: array
                        uniqueItems: true
                      expires:
                        IS_REQUIRED: false
                        PROPERTY_NAME: expires
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
                        TYPE_NAME: ""
                        description: |
                          Task expiration, time at which task definition and status is deleted.
                          Notice that all artifacts for the task must have an expiration that is no
                          later than this. If this property isn't it will be set to `deadline`
                          plus one year (this default may change).
                        format: date-time
                        title: Expiration
                        type: string
                      extra:
                        IS_REQUIRED: true
                        PROPERTY_NAME: extra
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
                        TYPE_NAME: ""
                        default: {}
                        description: |
                          Object with properties that can hold any kind of extra data that should be
                          associated with the task. This can be data for the task which doesn't
                          fit into `payload`, or it can supplementary data for use in services
                          listening for events from this task. For example this could be details to
                          display on _treeherder_, or information for indexing the task. Please, try
                          to put all related information under one property, so `extra` data keys
                          for treeherder reporting and task indexing don't conflict, hence, we have
                          reusable services. **Warning**, do not stuff large data-sets in here --
                          task definitions should not take-up multiple MiBs.
                        title: Extra Data
                        type: object
                      metadata:
                        $ref: task-metadata.json#
                        IS_REQUIRED: true
                        PROPERTY_NAME: metadata
                        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                        REF_SUBSCHEMA:
                          $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                          TYPE_NAME: TaskMetadata
                          additionalProperties:
                            Boolean: false
                            Properties: null
                          description: |
                            Required task metadata
                          properties:
                            MemberNames:
                              description: Description
                              name: Name
                              owner: Owner
                              source: Source
                            Properties:
                              description:
                                IS_REQUIRED: true
                                PROPERTY_NAME: description
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
                                TYPE_NAME: ""
                                description: |
                                  Human readable description of the task, please **explain** what the
                                  task does. A few lines of documentation is not going to hurt you.
                                maxLength: 32768
                                title: Description
                                type: string
                              name:
                                IS_REQUIRED: true
                                PROPERTY_NAME: name
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
                                TYPE_NAME: ""
                                description: |
                                  Human readable name of task, used to very briefly given an idea about
                                  what the task does.
                                maxLength: 255
                                title: Name
                                type: string
                              owner:
                                IS_REQUIRED: true
                                PROPERTY_NAME: owner
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
                                TYPE_NAME: ""
                                description: |
                                  E-mail of person who caused this task, e.g. the person who did
                                  `hg push`. The person we should contact to ask why this task is here.
                                format: email
                                maxLength: 255
                                title: Owner
                                type: string
                              source:
                                IS_REQUIRED: true
                                PROPERTY_NAME: source
                                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
                                TYPE_NAME: ""
                                description: |
                                  Link to source of this task, should specify a file, revision and
                                  repository. This should be place someone can go an do a git/hg blame
                                  to who came up with recipe for this task.
                                format: uri
                                maxLength: 4096
                                pattern: ^https?://
                                title: Source
                                type: string
                            SortedPropertyNames:
                            - description
                            - name
                            - owner
                            - source
                            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
                          required:
                          - name
                          - description
                          - owner
                          - source
                          title: Task Metadata
                          type: object
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/metadata
                        TYPE_NAME: ""
                      payload:
                        IS_REQUIRED: true
                        PROPERTY_NAME: payload
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
                        TYPE_NAME: ""
                        description: |
                          Task-specific payload following worker-specific format.
                          Refer to the documentation for the worker implementing
                          `<provisionerId>/<workerType>` for details.
                        title: Task Payload
                        type: object
                      priority:
                        IS_REQUIRED: true
                        PROPERTY_NAME: priority
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
                        TYPE_NAME: ""
                        default: lowest
                        description: |
                          Priority of task. This defaults to `lowest` and the scope
                          `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                          to define a task with `<priority>`. The `normal` priority is treated as
                          `lowest`.
                        enum:
                        - highest
                        - very-high
                        - high
                        - medium
                        - low
                        - very-low
                        - lowest
                        - normal
                        title: Task Priority
                        type: string
                      provisionerId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: provisionerId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                        TYPE_NAME: ""
                        description: |
                          Unique identifier for a provisioner, that can supply specified
                          `workerType`
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Provisioner Id
                        type: string
                      requires:
                        IS_REQUIRED: true
                        PROPERTY_NAME: requires
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
                        TYPE_NAME: ""
                        default: all-completed
                        description: |
                          The tasks relation to its dependencies. This property specifies the
                          semantics of the `task.dependencies` property.
                          If `all-completed` is given the task will be scheduled when all
                          dependencies are resolved _completed_ (successful resolution).
                          If `all-resolved` is given the task will be scheduled when all dependencies
                          have been resolved, regardless of what their resolution is.
                        enum:
                        - all-completed
                        - all-resolved
                        title: Dependency Requirement Semantics
                        type: string
                      retries:
                        IS_REQUIRED: true
                        PROPERTY_NAME: retries
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
                        TYPE_NAME: ""
                        default: 5
                        description: |
                          Number of times to retry the task in case of infrastructure issues.
                          An _infrastructure issue_ is a worker node that crashes or is shutdown,
                          these events are to be expected.
                        maximum: 49
                        minimum: 0
                        title: Retries
                        type: integer
                      routes:
                        IS_REQUIRED: true
                        PROPERTY_NAME: routes
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
                        TYPE_NAME: ""
                        default: []
                        description: |
                          List of task-specific routes. Pulse messages about the task will be CC'ed to
                          `route.<value>` for each `<value>` in this array.
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
                          TYPE_NAME: ""
                          description: |
                            A task specific route.
                          maxLength: 249
                          minLength: 1
                          title: Task Specific Route
                          type: string
                        maxItems: 64
                        title: Task Specific Routes
                        type: array
                        uniqueItems: true
                      schedulerId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: schedulerId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                        TYPE_NAME: ""
                        default: '-'
                        description: |
                          All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                          * it can represent the entity that created the task;
                          * it can limit addition of new tasks to a task group: the caller of
                              `createTask` must have a scope related to the `schedulerId` of the task
                              group;
                          * it controls who can manipulate tasks, again by requiring
                              `schedulerId`-related scopes; and
                          * it appears in the routing key for Pulse messages about the task.
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Scheduler Identifier
                        type: string
                      scopes:
                        IS_REQUIRED: true
                        PROPERTY_NAME: scopes
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
                        TYPE_NAME: ""
                        description: |
                          List of scopes that the task is authorized to use during its execution.
                        items:
                          IS_REQUIRED: false
                          PROPERTY_NAME: ""
                          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
                          TYPE_NAME: ""
                          description: |
                            A single scope. A scope must be composed of
                            printable ASCII characters and spaces.  Scopes ending in more than
                            one `*` character are forbidden.
                          pattern: ^[ -~]*$
                          type: string
                        title: Scopes
                        type: array
                        uniqueItems: false
                      tags:
                        IS_REQUIRED: true
                        PROPERTY_NAME: tags
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
                        TYPE_NAME: ""
                        additionalProperties:
                          Boolean: null
                          Properties:
                            IS_REQUIRED: false
                            PROPERTY_NAME: ""
                            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
                            TYPE_NAME: ""
                            maxLength: 4096
                            type: string
                        default: {}
                        description: |
                          Arbitrary key-value tags (only strings limited to 4k). These can be used
                          to attach informal metadata to a task. Use this for informal tags that
                          tasks can be classified by. You can also think of strings here as
                          candidates for formal metadata. Something like
                          `purpose: 'build' || 'test'` is a good example.
                        title: Tags
                        type: object
                      taskGroupId:
                        IS_REQUIRED: true
                        PROPERTY_NAME: taskGroupId
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                        TYPE_NAME: ""
                        description: |
                          Identifier for a group of tasks scheduled together with this task.
                          Generally, all tasks related to a single event such as a version-control
                          push or a nightly build have the same `taskGroupId`.  This property
                          defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                          the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                          decision tasks.
                        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                        title: Task-Group Identifier
                        type: string
                      workerType:
                        IS_REQUIRED: true
                        PROPERTY_NAME: workerType
                        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                        TYPE_NAME: ""
                        description: |
                          Unique identifier for a worker-type within a specific provisioner
                        maxLength: 38
                        minLength: 1
                        pattern: ^([a-zA-Z0-9-_]*)$
                        title: Worker Type
                        type: string
                    SortedPropertyNames:
                    - created
                    - deadline
                    - dependencies
                    - expires
                    - extra
                    - metadata
                    - payload
                    - priority
                    - provisionerId
                    - requires
                    - retries
                    - routes
                    - schedulerId
                    - scopes
                    - tags
                    - taskGroupId
                    - workerType
                    SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties
                  required:
                  - provisionerId
                  - workerType
                  - schedulerId
                  - taskGroupId
                  - dependencies
                  - requires
                  - routes
                  - priority
                  - retries
                  - created
                  - deadline
                  - scopes
                  - payload
                  - metadata
                  - tags
                  - extra
                  title: Task Definition Response
                  type: object
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties/task
                TYPE_NAME: ""
            SortedPropertyNames:
            - status
            - task
            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties
          required:
          - task
          - status
          title: Task definition and status
          type: object
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#/properties/tasks/items
        TYPE_NAME: ""
      title: Tasks from the Task-Group
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - taskGroupId
  - tasks
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-task-group-response.json#/properties
required:
- taskGroupId
- tasks
title: List Task-Group Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#
TYPE_NAME: ListWorkersResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listWorkers` request.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    workers: Workers
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of workers in the worker-type.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listWorkerTypes` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    workers:
      IS_REQUIRED: true
      PROPERTY_NAME: workers
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers
      TYPE_NAME: ""
      description: |
        List of workers in this worker-type.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items
        TYPE_NAME: Worker
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            firstClaim: FirstClaim
            latestTask: LatestTask
            quarantineUntil: QuarantineUntil
            workerGroup: WorkerGroup
            workerId: WorkerID
          Properties:
            firstClaim:
              IS_REQUIRED: true
              PROPERTY_NAME: firstClaim
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/firstClaim
              TYPE_NAME: ""
              description: |
                Date of the first time this worker claimed a task.
              format: date-time
              title: First task claimed
              type: string
            latestTask:
              $ref: task-run.json#
              IS_REQUIRED: false
              PROPERTY_NAME: latestTask
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
                TYPE_NAME: TaskRun
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  A run of a task.
                properties:
                  MemberNames:
                    runId: RunID
                    taskId: TaskID
                  Properties:
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    taskId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: taskId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/taskId
                      TYPE_NAME: ""
                      description: |
                        Unique task identifier, this is UUID encoded as
                        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                        stripped of `=` padding.
                      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                      title: Task Identifier
                      type: string
                  SortedPropertyNames:
                  - runId
                  - taskId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties
                required:
                - taskId
                - runId
                title: Task Run
                type: object
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/latestTask
              TYPE_NAME: ""
              description: |
                The most recent claimed task
              title: Most Recent Task
            quarantineUntil:
              IS_REQUIRED: false
              PROPERTY_NAME: quarantineUntil
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/quarantineUntil
              TYPE_NAME: ""
              description: |
                Quarantining a worker allows the machine to remain alive but not accept jobs.
                Once the quarantineUntil time has elapsed, the worker resumes accepting jobs.
                Note that a quarantine can be lifted by setting `quarantineUntil` to the present time (or
                somewhere in the past).
              format: date-time
              title: Worker Quarantine
              type: string
            workerGroup:
              IS_REQUIRED: true
              PROPERTY_NAME: workerGroup
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/workerGroup
              TYPE_NAME: ""
              description: |
                Identifier for the worker group containing this worker.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
            workerId:
              IS_REQUIRED: true
              PROPERTY_NAME: workerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/workerId
              TYPE_NAME: ""
              description: |
                Identifier for this worker (unique within this worker group).
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              type: string
          SortedPropertyNames:
          - firstClaim
          - latestTask
          - quarantineUntil
          - workerGroup
          - workerId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties
        required:
        - workerGroup
        - workerId
        - firstClaim
        title: Worker
        type: object
      title: Workers from a WorkerType
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - workers
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties
required:
- workers
title: List Workers Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items
=====================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items
TYPE_NAME: Worker
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    firstClaim: FirstClaim
    latestTask: LatestTask
    quarantineUntil: QuarantineUntil
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    firstClaim:
      IS_REQUIRED: true
      PROPERTY_NAME: firstClaim
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/firstClaim
      TYPE_NAME: ""
      description: |
        Date of the first time this worker claimed a task.
      format: date-time
      title: First task claimed
      type: string
    latestTask:
      $ref: task-run.json#
      IS_REQUIRED: false
      PROPERTY_NAME: latestTask
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
        TYPE_NAME: TaskRun
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A run of a task.
        properties:
          MemberNames:
            runId: RunID
            taskId: TaskID
          Properties:
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/runId
              TYPE_NAME: ""
              description: |
                Id of this task run, `run-id`s always starts from `0`
              maximum: 1000
              minimum: 0
              title: Run Identifier
              type: integer
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
          SortedPropertyNames:
          - runId
          - taskId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties
        required:
        - taskId
        - runId
        title: Task Run
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/latestTask
      TYPE_NAME: ""
      description: |
        The most recent claimed task
      title: Most Recent Task
    quarantineUntil:
      IS_REQUIRED: false
      PROPERTY_NAME: quarantineUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/quarantineUntil
      TYPE_NAME: ""
      description: |
        Quarantining a worker allows the machine to remain alive but not accept jobs.
        Once the quarantineUntil time has elapsed, the worker resumes accepting jobs.
        Note that a quarantine can be lifted by setting `quarantineUntil` to the present time (or
        somewhere in the past).
      format: date-time
      title: Worker Quarantine
      type: string
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker group containing this worker.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for this worker (unique within this worker group).
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - firstClaim
  - latestTask
  - quarantineUntil
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-workers-response.json#/properties/workers/items/properties
required:
- workerGroup
- workerId
- firstClaim
title: Worker
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#
TYPE_NAME: ListWorkerTypesResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response from a `listWorkerTypes` request.
properties:
  MemberNames:
    continuationToken: ContinuationToken
    workerTypes: WorkerTypes
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of worker-types in the provisioner.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called `listWorkerTypes` with `continuationToken`
        until you get a result without a `continuationToken`.
      title: Continuation Token
      type: string
    workerTypes:
      IS_REQUIRED: true
      PROPERTY_NAME: workerTypes
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes
      TYPE_NAME: ""
      description: |
        List of worker-types in this provisioner.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items
        TYPE_NAME: WorkerType
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            description: Description
            expires: Expires
            lastDateActive: LastDateActive
            provisionerId: ProvisionerID
            stability: Stability
            workerType: WorkerType
          Properties:
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/description
              TYPE_NAME: ""
              description: |
                Description of the worker-type.
              title: Description
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/expires
              TYPE_NAME: ""
              description: |
                Date and time after which the worker-type will be automatically
                deleted by the queue.
              format: date-time
              title: Worker-type Expiration
              type: string
            lastDateActive:
              IS_REQUIRED: true
              PROPERTY_NAME: lastDateActive
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/lastDateActive
              TYPE_NAME: ""
              description: |
                Date and time where the worker-type was last seen active
              format: date-time
              title: Worker-type Last Date Active
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/provisionerId
              TYPE_NAME: ""
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner ID
              type: string
            stability:
              IS_REQUIRED: true
              PROPERTY_NAME: stability
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/stability
              TYPE_NAME: ""
              description: |
                This is the stability of the worker-type. Accepted values:
                 * `experimental`
                 * `stable`
                 * `deprecated`
              enum:
              - experimental
              - stable
              - deprecated
              title: Stability
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/workerType
              TYPE_NAME: ""
              description: |
                WorkerType name.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: WorkerType name
              type: string
          SortedPropertyNames:
          - description
          - expires
          - lastDateActive
          - provisionerId
          - stability
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties
        required:
        - workerType
        - provisionerId
        - stability
        - description
        - expires
        - lastDateActive
        title: Worker Type
        type: object
      title: WorkerTypes from the Provisioner
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - workerTypes
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties
required:
- workerTypes
title: List Worker-Types Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items
=============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items
TYPE_NAME: WorkerType
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    description: Description
    expires: Expires
    lastDateActive: LastDateActive
    provisionerId: ProvisionerID
    stability: Stability
    workerType: WorkerType
  Properties:
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/description
      TYPE_NAME: ""
      description: |
        Description of the worker-type.
      title: Description
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the worker-type will be automatically
        deleted by the queue.
      format: date-time
      title: Worker-type Expiration
      type: string
    lastDateActive:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateActive
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/lastDateActive
      TYPE_NAME: ""
      description: |
        Date and time where the worker-type was last seen active
      format: date-time
      title: Worker-type Last Date Active
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/provisionerId
      TYPE_NAME: ""
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    stability:
      IS_REQUIRED: true
      PROPERTY_NAME: stability
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/stability
      TYPE_NAME: ""
      description: |
        This is the stability of the worker-type. Accepted values:
         * `experimental`
         * `stable`
         * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties/workerType
      TYPE_NAME: ""
      description: |
        WorkerType name.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: WorkerType name
      type: string
  SortedPropertyNames:
  - description
  - expires
  - lastDateActive
  - provisionerId
  - stability
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/list-workertypes-response.json#/properties/workerTypes/items/properties
required:
- workerType
- provisionerId
- stability
- description
- expires
- lastDateActive
title: Worker Type
type: object


https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#
=============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#
TYPE_NAME: CountPendingTasksResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for the number of pending tasks for a given
  `provisionerId` and `workerType`.
properties:
  MemberNames:
    pendingTasks: PendingTasks
    provisionerId: ProvisionerID
    workerType: WorkerType
  Properties:
    pendingTasks:
      IS_REQUIRED: true
      PROPERTY_NAME: pendingTasks
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#/properties/pendingTasks
      TYPE_NAME: ""
      description: |
        An approximate number of pending tasks for the given `provisionerId` and
        `workerType`. This is based on Azure Queue Storage metadata API, thus,
        number of reported here may be higher than actual number of pending tasks.
        But there cannot be more pending tasks reported here. Ie. this is an
        **upper-bound** on the number of pending tasks.
      minimum: 0
      title: Number of Pending Tasks
      type: integer
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#/properties/provisionerId
      TYPE_NAME: ""
      description: |
        Unique identifier for the provisioner
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#/properties/workerType
      TYPE_NAME: ""
      description: |
        Identifier for worker type within the specified provisioner
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - pendingTasks
  - provisionerId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/pending-tasks-response.json#/properties
required:
- provisionerId
- workerType
- pendingTasks
title: Count Pending Tasks Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#
TYPE_NAME: PostArtifactRequest
description: Request a authorization to put and artifact or posting of a URL as an
  artifact. Note that the `storageType` property is referenced in the response as
  well.
oneOf:
  Items:
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]
    TYPE_NAME: BlobArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request a list of requests in a generalized format which can be run to
      upload an artifact to storage managed by the queue.
    properties:
      MemberNames:
        contentEncoding: ContentEncoding
        contentLength: ContentLength
        contentSha256: ContentSha256
        contentType: ContentType
        expires: Expires
        parts: Parts
        storageType: StorageType
        transferLength: TransferLength
        transferSha256: TransferSha256
      Properties:
        contentEncoding:
          IS_REQUIRED: false
          PROPERTY_NAME: contentEncoding
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentEncoding
          TYPE_NAME: ""
          description: |
            Optionally provide an encoding type which should be set as the HTTP
            Content-Encoding header for this artifact.
          maxLength: 255
          type: string
        contentLength:
          IS_REQUIRED: true
          PROPERTY_NAME: contentLength
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentLength
          TYPE_NAME: ""
          description: |
            The number of bytes of the entire artifact.  This must be the number
            of bytes in the file to be uploaded.  For single part uploads, the
            upload will fail if the number of bytes uploaded does not match this
            value.  A single part upload (e.g. no parts list) may be at most 5GB.
            This limit is enforced in the code because it is not possible to
            represent all of the restrictions in a json-schema.  A multipart
            upload may be at most 5TB, with each part other than the last being
            between 5MB and 5GB in size.
          minimum: 0
          type: integer
        contentSha256:
          IS_REQUIRED: true
          PROPERTY_NAME: contentSha256
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentSha256
          TYPE_NAME: ""
          description: |
            The complete SHA256 value of the entire artifact.  This must be the
            SHA256 of the file which is to be uploaded.  For single part uploads,
            the upload will fail if the SHA256 value of what is uploaded does not
            match this value
          pattern: ^[a-fA-F0-9]{64}$
          type: string
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentType
          TYPE_NAME: ""
          description: |
            Artifact mime-type, when uploading artifact to the signed
            `PUT` URL returned from this request this must given with the
             `ContentType` header. Please, provide correct mime-type,
             this make tooling a lot easier, specifically,
             always using `application/json` for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which the artifact should be deleted. Note, that
            these will be collected over time, and artifacts may remain
            available after expiration. S3 based artifacts are identified in
            azure table storage and explicitly deleted on S3 after expiration.
          format: date-time
          type: string
        parts:
          IS_REQUIRED: false
          PROPERTY_NAME: parts
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts
          TYPE_NAME: ""
          description: |
            A list of parts for a multipart upload.  The presence of this list is
            how a multipart upload is differentiated from a single part upload.
            The items in this list represent individual parts for upload.  For a
            multipart upload, the sha256 values provided here must match the
            sha256 value that S3 internally computes for the upload to be
            considered a success.  The overall sha256 value is not checked
            explicitly because the S3 API does not allow for that, but the same
            code that is responsible for generating the parts hashes would also
            be generating the overall hash, which makes this less of a concern.
            The worst case is that we have artifacts which incorrectly do not
            validate, which is not as big of a security concern.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items
            TYPE_NAME: MultipartPart
            additionalProperties:
              Boolean: false
              Properties: null
            properties:
              MemberNames:
                sha256: Sha256
                size: Size
              Properties:
                sha256:
                  IS_REQUIRED: true
                  PROPERTY_NAME: sha256
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/sha256
                  TYPE_NAME: ""
                  description: |
                    The sha256 hash of the part.
                  maxLength: 64
                  minLength: 64
                  pattern: ^[a-fA-F0-9]{64}$
                  type: string
                size:
                  IS_REQUIRED: true
                  PROPERTY_NAME: size
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/size
                  TYPE_NAME: ""
                  description: |
                    The number of bytes in this part.  Keep in mind for S3 that
                    all but the last part must be minimum 5MB and the maximum for
                    a single part is 5GB.  The overall size may not exceed 5TB
                  minimum: 0
                  type: integer
              SortedPropertyNames:
              - sha256
              - size
              SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties
            required:
            - sha256
            - size
            title: Multipart Part
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/storageType
          TYPE_NAME: ""
          description: Artifact storage type, in this case `'blob'`
          enum:
          - blob
          type: string
        transferLength:
          IS_REQUIRED: false
          PROPERTY_NAME: transferLength
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferLength
          TYPE_NAME: ""
          description: |
            The number of bytes transfered across the wire to the backing
            datastore.  If specified, it represents the post-content-encoding
            byte count
          minimum: 0
          type: integer
        transferSha256:
          IS_REQUIRED: false
          PROPERTY_NAME: transferSha256
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferSha256
          TYPE_NAME: ""
          description: |
            This is the sha256 of the bytes transfered across the wire to the
            backing datastore.  If specified, it represents the
            post-content-encoding sha256 value
          pattern: ^[a-fA-F0-9]{64}$
          type: string
      SortedPropertyNames:
      - contentEncoding
      - contentLength
      - contentSha256
      - contentType
      - expires
      - parts
      - storageType
      - transferLength
      - transferSha256
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties
    required:
    - storageType
    - expires
    - contentType
    - contentSha256
    - contentLength
    title: Blob Artifact Request
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]
    TYPE_NAME: S3ArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request for a signed PUT URL that will allow you to upload an artifact
      to an S3 bucket managed by the queue.
    properties:
      MemberNames:
        contentType: ContentType
        expires: Expires
        storageType: StorageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties/contentType
          TYPE_NAME: ""
          description: |
            Artifact mime-type, when uploading artifact to the signed
            `PUT` URL returned from this request this must given with the
             `ContentType` header. Please, provide correct mime-type,
             this make tooling a lot easier, specifically,
             always using `application/json` for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which the artifact should be deleted. Note, that
            these will be collected over time, and artifacts may remain
            available after expiration. S3 based artifacts are identified in
            azure table storage and explicitly deleted on S3 after expiration.
          format: date-time
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `'s3'`
          enum:
          - s3
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties
    required:
    - storageType
    - expires
    - contentType
    title: S3 Artifact Request
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]
    TYPE_NAME: AzureArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request for an Azure Shared Access Signature (SAS) that will allow
      you to upload an artifact to an Azure blob storage container managed
      by the queue.
    properties:
      MemberNames:
        contentType: ContentType
        expires: Expires
        storageType: StorageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties/contentType
          TYPE_NAME: ""
          description: |
            Artifact mime-type, when uploading artifact please use the same
            `Content-Type`, consistently using the correct mime-type make
            tooling a lot easier, specifically, always using `application/json`
            for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which the artifact should be deleted.
            Note, that these will be collected over time, and artifacts may
            remain available after expiration. Azure based artifacts are
            identified in azure table storage and explicitly deleted in the
            azure storage container after expiration.
          format: date-time
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `azure`
          enum:
          - azure
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties
    required:
    - storageType
    - expires
    - contentType
    title: Azure Artifact Request
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]
    TYPE_NAME: RedirectArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Request the queue to redirect to a URL for a given artifact.
      This allows you to reference artifacts that aren't managed by the queue.
      The queue will still authenticate the request, so depending on the level
      of secrecy required, secret URLs **might** work. Note, this is mainly
      useful for public artifacts, for example temporary files directly
      stored on the worker host and only available there for a specific
      amount of time.
    properties:
      MemberNames:
        contentType: ContentType
        expires: Expires
        storageType: StorageType
        url: URL
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/contentType
          TYPE_NAME: ""
          description: |
            Artifact mime-type for the resource to which the queue should
            redirect. Please use the same `Content-Type`, consistently using
            the correct mime-type make tooling a lot easier, specifically,
            always using `application/json` for JSON artifacts.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which the queue should no longer redirect to this URL.
            Note, that the queue will and cannot delete the resource your URL
            references, you are responsible for doing that yourself.
          format: date-time
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `reference`
          enum:
          - reference
          type: string
        url:
          IS_REQUIRED: true
          PROPERTY_NAME: url
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/url
          TYPE_NAME: ""
          description: |
            URL to which the queue should redirect using a `303` (See other)
            redirect.
          format: uri
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - storageType
      - url
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties
    required:
    - storageType
    - expires
    - url
    - contentType
    title: Redirect Artifact Request
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]
    TYPE_NAME: ErrorArtifactRequest
    additionalProperties:
      Boolean: false
      Properties: null
    description: "Request the queue to reply `424` (Failed Dependency) with `reason`
      and \n`message` to any `GET` request for this artifact. This is mainly useful\nas
      a way for a task to declare that it failed to provide an artifact it\nwanted
      to upload.\n"
    properties:
      MemberNames:
        expires: Expires
        message: Message
        reason: Reason
        storageType: StorageType
      Properties:
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which the queue should stop replying with the error
            and forget about the artifact.
          format: date-time
          type: string
        message:
          IS_REQUIRED: true
          PROPERTY_NAME: message
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/message
          TYPE_NAME: ""
          description: |
            Human readable explanation of why the artifact is missing
          maxLength: 4096
          type: string
        reason:
          IS_REQUIRED: true
          PROPERTY_NAME: reason
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/reason
          TYPE_NAME: ""
          description: |
            Reason why the artifact doesn't exist.
          enum:
          - file-missing-on-worker
          - invalid-resource-on-worker
          - too-large-file-on-worker
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `error`
          enum:
          - error
          type: string
      SortedPropertyNames:
      - expires
      - message
      - reason
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties
    required:
    - storageType
    - expires
    - reason
    - message
    title: Error Artifact Request
    type: object
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf
title: Post Artifact Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]
=====================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]
TYPE_NAME: BlobArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request a list of requests in a generalized format which can be run to
  upload an artifact to storage managed by the queue.
properties:
  MemberNames:
    contentEncoding: ContentEncoding
    contentLength: ContentLength
    contentSha256: ContentSha256
    contentType: ContentType
    expires: Expires
    parts: Parts
    storageType: StorageType
    transferLength: TransferLength
    transferSha256: TransferSha256
  Properties:
    contentEncoding:
      IS_REQUIRED: false
      PROPERTY_NAME: contentEncoding
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentEncoding
      TYPE_NAME: ""
      description: |
        Optionally provide an encoding type which should be set as the HTTP
        Content-Encoding header for this artifact.
      maxLength: 255
      type: string
    contentLength:
      IS_REQUIRED: true
      PROPERTY_NAME: contentLength
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentLength
      TYPE_NAME: ""
      description: |
        The number of bytes of the entire artifact.  This must be the number
        of bytes in the file to be uploaded.  For single part uploads, the
        upload will fail if the number of bytes uploaded does not match this
        value.  A single part upload (e.g. no parts list) may be at most 5GB.
        This limit is enforced in the code because it is not possible to
        represent all of the restrictions in a json-schema.  A multipart
        upload may be at most 5TB, with each part other than the last being
        between 5MB and 5GB in size.
      minimum: 0
      type: integer
    contentSha256:
      IS_REQUIRED: true
      PROPERTY_NAME: contentSha256
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentSha256
      TYPE_NAME: ""
      description: |
        The complete SHA256 value of the entire artifact.  This must be the
        SHA256 of the file which is to be uploaded.  For single part uploads,
        the upload will fail if the SHA256 value of what is uploaded does not
        match this value
      pattern: ^[a-fA-F0-9]{64}$
      type: string
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/contentType
      TYPE_NAME: ""
      description: |
        Artifact mime-type, when uploading artifact to the signed
        `PUT` URL returned from this request this must given with the
         `ContentType` header. Please, provide correct mime-type,
         this make tooling a lot easier, specifically,
         always using `application/json` for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which the artifact should be deleted. Note, that
        these will be collected over time, and artifacts may remain
        available after expiration. S3 based artifacts are identified in
        azure table storage and explicitly deleted on S3 after expiration.
      format: date-time
      type: string
    parts:
      IS_REQUIRED: false
      PROPERTY_NAME: parts
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts
      TYPE_NAME: ""
      description: |
        A list of parts for a multipart upload.  The presence of this list is
        how a multipart upload is differentiated from a single part upload.
        The items in this list represent individual parts for upload.  For a
        multipart upload, the sha256 values provided here must match the
        sha256 value that S3 internally computes for the upload to be
        considered a success.  The overall sha256 value is not checked
        explicitly because the S3 API does not allow for that, but the same
        code that is responsible for generating the parts hashes would also
        be generating the overall hash, which makes this less of a concern.
        The worst case is that we have artifacts which incorrectly do not
        validate, which is not as big of a security concern.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items
        TYPE_NAME: MultipartPart
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            sha256: Sha256
            size: Size
          Properties:
            sha256:
              IS_REQUIRED: true
              PROPERTY_NAME: sha256
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/sha256
              TYPE_NAME: ""
              description: |
                The sha256 hash of the part.
              maxLength: 64
              minLength: 64
              pattern: ^[a-fA-F0-9]{64}$
              type: string
            size:
              IS_REQUIRED: true
              PROPERTY_NAME: size
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/size
              TYPE_NAME: ""
              description: |
                The number of bytes in this part.  Keep in mind for S3 that
                all but the last part must be minimum 5MB and the maximum for
                a single part is 5GB.  The overall size may not exceed 5TB
              minimum: 0
              type: integer
          SortedPropertyNames:
          - sha256
          - size
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties
        required:
        - sha256
        - size
        title: Multipart Part
        type: object
      minItems: 1
      type: array
      uniqueItems: true
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/storageType
      TYPE_NAME: ""
      description: Artifact storage type, in this case `'blob'`
      enum:
      - blob
      type: string
    transferLength:
      IS_REQUIRED: false
      PROPERTY_NAME: transferLength
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferLength
      TYPE_NAME: ""
      description: |
        The number of bytes transfered across the wire to the backing
        datastore.  If specified, it represents the post-content-encoding
        byte count
      minimum: 0
      type: integer
    transferSha256:
      IS_REQUIRED: false
      PROPERTY_NAME: transferSha256
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/transferSha256
      TYPE_NAME: ""
      description: |
        This is the sha256 of the bytes transfered across the wire to the
        backing datastore.  If specified, it represents the
        post-content-encoding sha256 value
      pattern: ^[a-fA-F0-9]{64}$
      type: string
  SortedPropertyNames:
  - contentEncoding
  - contentLength
  - contentSha256
  - contentType
  - expires
  - parts
  - storageType
  - transferLength
  - transferSha256
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties
required:
- storageType
- expires
- contentType
- contentSha256
- contentLength
title: Blob Artifact Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items
============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items
TYPE_NAME: MultipartPart
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    sha256: Sha256
    size: Size
  Properties:
    sha256:
      IS_REQUIRED: true
      PROPERTY_NAME: sha256
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/sha256
      TYPE_NAME: ""
      description: |
        The sha256 hash of the part.
      maxLength: 64
      minLength: 64
      pattern: ^[a-fA-F0-9]{64}$
      type: string
    size:
      IS_REQUIRED: true
      PROPERTY_NAME: size
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties/size
      TYPE_NAME: ""
      description: |
        The number of bytes in this part.  Keep in mind for S3 that
        all but the last part must be minimum 5MB and the maximum for
        a single part is 5GB.  The overall size may not exceed 5TB
      minimum: 0
      type: integer
  SortedPropertyNames:
  - sha256
  - size
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[0]/properties/parts/items/properties
required:
- sha256
- size
title: Multipart Part
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]
=====================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]
TYPE_NAME: S3ArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request for a signed PUT URL that will allow you to upload an artifact
  to an S3 bucket managed by the queue.
properties:
  MemberNames:
    contentType: ContentType
    expires: Expires
    storageType: StorageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties/contentType
      TYPE_NAME: ""
      description: |
        Artifact mime-type, when uploading artifact to the signed
        `PUT` URL returned from this request this must given with the
         `ContentType` header. Please, provide correct mime-type,
         this make tooling a lot easier, specifically,
         always using `application/json` for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which the artifact should be deleted. Note, that
        these will be collected over time, and artifacts may remain
        available after expiration. S3 based artifacts are identified in
        azure table storage and explicitly deleted on S3 after expiration.
      format: date-time
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `'s3'`
      enum:
      - s3
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[1]/properties
required:
- storageType
- expires
- contentType
title: S3 Artifact Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]
=====================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]
TYPE_NAME: AzureArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request for an Azure Shared Access Signature (SAS) that will allow
  you to upload an artifact to an Azure blob storage container managed
  by the queue.
properties:
  MemberNames:
    contentType: ContentType
    expires: Expires
    storageType: StorageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties/contentType
      TYPE_NAME: ""
      description: |
        Artifact mime-type, when uploading artifact please use the same
        `Content-Type`, consistently using the correct mime-type make
        tooling a lot easier, specifically, always using `application/json`
        for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which the artifact should be deleted.
        Note, that these will be collected over time, and artifacts may
        remain available after expiration. Azure based artifacts are
        identified in azure table storage and explicitly deleted in the
        azure storage container after expiration.
      format: date-time
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `azure`
      enum:
      - azure
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[2]/properties
required:
- storageType
- expires
- contentType
title: Azure Artifact Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]
=====================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]
TYPE_NAME: RedirectArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request the queue to redirect to a URL for a given artifact.
  This allows you to reference artifacts that aren't managed by the queue.
  The queue will still authenticate the request, so depending on the level
  of secrecy required, secret URLs **might** work. Note, this is mainly
  useful for public artifacts, for example temporary files directly
  stored on the worker host and only available there for a specific
  amount of time.
properties:
  MemberNames:
    contentType: ContentType
    expires: Expires
    storageType: StorageType
    url: URL
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/contentType
      TYPE_NAME: ""
      description: |
        Artifact mime-type for the resource to which the queue should
        redirect. Please use the same `Content-Type`, consistently using
        the correct mime-type make tooling a lot easier, specifically,
        always using `application/json` for JSON artifacts.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which the queue should no longer redirect to this URL.
        Note, that the queue will and cannot delete the resource your URL
        references, you are responsible for doing that yourself.
      format: date-time
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `reference`
      enum:
      - reference
      type: string
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties/url
      TYPE_NAME: ""
      description: |
        URL to which the queue should redirect using a `303` (See other)
        redirect.
      format: uri
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - storageType
  - url
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[3]/properties
required:
- storageType
- expires
- url
- contentType
title: Redirect Artifact Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]
=====================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]
TYPE_NAME: ErrorArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: "Request the queue to reply `424` (Failed Dependency) with `reason` and
  \n`message` to any `GET` request for this artifact. This is mainly useful\nas a
  way for a task to declare that it failed to provide an artifact it\nwanted to upload.\n"
properties:
  MemberNames:
    expires: Expires
    message: Message
    reason: Reason
    storageType: StorageType
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which the queue should stop replying with the error
        and forget about the artifact.
      format: date-time
      type: string
    message:
      IS_REQUIRED: true
      PROPERTY_NAME: message
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/message
      TYPE_NAME: ""
      description: |
        Human readable explanation of why the artifact is missing
      maxLength: 4096
      type: string
    reason:
      IS_REQUIRED: true
      PROPERTY_NAME: reason
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/reason
      TYPE_NAME: ""
      description: |
        Reason why the artifact doesn't exist.
      enum:
      - file-missing-on-worker
      - invalid-resource-on-worker
      - too-large-file-on-worker
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `error`
      enum:
      - error
      type: string
  SortedPropertyNames:
  - expires
  - message
  - reason
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-request.json#/oneOf[4]/properties
required:
- storageType
- expires
- reason
- message
title: Error Artifact Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#
=============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#
TYPE_NAME: PostArtifactResponse
description: |
  Response to a request for posting an artifact.
  Note that the `storageType` property is referenced in the request as well.
oneOf:
  Items:
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]
    TYPE_NAME: BlobArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for creating a new blob artifact
    properties:
      MemberNames:
        expires: Expires
        requests: Requests
        storageType: StorageType
      Properties:
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which the signed `requests` no longer work
          format: date-time
          type: string
        requests:
          IS_REQUIRED: true
          PROPERTY_NAME: requests
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests
          TYPE_NAME: ""
          description: |
            A list of generalized HTTP requests which must be run to upload the
            artifact.
          items:
            IS_REQUIRED: false
            PROPERTY_NAME: ""
            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items
            TYPE_NAME: HTTPRequest
            additionalProperties:
              Boolean: false
              Properties: null
            properties:
              MemberNames:
                headers: Headers
                method: Method
                url: URL
              Properties:
                headers:
                  IS_REQUIRED: true
                  PROPERTY_NAME: headers
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers
                  TYPE_NAME: ""
                  additionalProperties:
                    Boolean: null
                    Properties:
                      IS_REQUIRED: false
                      PROPERTY_NAME: ""
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers/additionalProperties
                      TYPE_NAME: ""
                      type: string
                  description: Headers of request
                  type: object
                method:
                  IS_REQUIRED: true
                  PROPERTY_NAME: method
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/method
                  TYPE_NAME: ""
                  description: HTTP 1.1 method of request
                  enum:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - OPTIONS
                  - HEAD
                  - PATCH
                  type: string
                url:
                  IS_REQUIRED: true
                  PROPERTY_NAME: url
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/url
                  TYPE_NAME: ""
                  description: URL of request
                  type: string
              SortedPropertyNames:
              - headers
              - method
              - url
              SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties
            required:
            - url
            - method
            - headers
            title: HTTP Request
            type: object
          type: array
          uniqueItems: true
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `'blob'`
          enum:
          - blob
          type: string
      SortedPropertyNames:
      - expires
      - requests
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties
    required:
    - requests
    - storageType
    - expires
    title: Blob Artifact Response
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]
    TYPE_NAME: S3ArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for a signed PUT URL that will allow you to
      upload an artifact to an S3 bucket managed by the queue.
    properties:
      MemberNames:
        contentType: ContentType
        expires: Expires
        putUrl: PutURL
        storageType: StorageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/contentType
          TYPE_NAME: ""
          description: |
            Artifact mime-type, must be specified as header when uploading with
            the signed `putUrl`.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which the signed `putUrl` no longer works
          format: date-time
          type: string
        putUrl:
          IS_REQUIRED: true
          PROPERTY_NAME: putUrl
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/putUrl
          TYPE_NAME: ""
          description: |
            URL to which a `PUT` request can be made to upload the artifact
            requested. Note, the `Content-Length` must be specified correctly,
            and the `ContentType` header must be set the value specified below.
          format: uri
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `'s3'`
          enum:
          - s3
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - putUrl
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties
    required:
    - storageType
    - putUrl
    - expires
    - contentType
    title: S3 Artifact Response
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]
    TYPE_NAME: AzureArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for an Azure Shared Access Signature (SAS)
      that will allow you to upload an artifact to an Azure blob storage
      container managed by the queue.
    properties:
      MemberNames:
        contentType: ContentType
        expires: Expires
        putUrl: PutURL
        storageType: StorageType
      Properties:
        contentType:
          IS_REQUIRED: true
          PROPERTY_NAME: contentType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/contentType
          TYPE_NAME: ""
          description: |
            Artifact mime-type, should be specified with the
            `x-ms-blob-content-type` when committing the block.
          maxLength: 255
          type: string
        expires:
          IS_REQUIRED: true
          PROPERTY_NAME: expires
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/expires
          TYPE_NAME: ""
          description: |
            Date-time after which Shared Access Signature (SAS) will
            seize to work.
          format: date-time
          type: string
        putUrl:
          IS_REQUIRED: true
          PROPERTY_NAME: putUrl
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/putUrl
          TYPE_NAME: ""
          description: |
            Shared Access Signature (SAS) with write permissions, see
            [Azure REST API]
            (http://msdn.microsoft.com/en-US/library/azure/dn140256.aspx)
            reference for details on how to use this.
          format: uri
          type: string
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `azure`
          enum:
          - azure
          type: string
      SortedPropertyNames:
      - contentType
      - expires
      - putUrl
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties
    required:
    - storageType
    - expires
    - contentType
    - putUrl
    title: Azure Artifact Response
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[3]
    TYPE_NAME: RedirectArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for the queue to redirect to a URL for a given
      artifact.
    properties:
      MemberNames:
        storageType: StorageType
      Properties:
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[3]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `reference`
          enum:
          - reference
          type: string
      SortedPropertyNames:
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[3]/properties
    required:
    - storageType
    title: Redirect Artifact Response
    type: object
  - $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
    IS_REQUIRED: false
    PROPERTY_NAME: ""
    SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[4]
    TYPE_NAME: ErrorArtifactResponse
    additionalProperties:
      Boolean: false
      Properties: null
    description: |
      Response to a request for the queue to reply `424` (Failed Dependency)
      with `reason` and `message` to any `GET` request for this artifact.
    properties:
      MemberNames:
        storageType: StorageType
      Properties:
        storageType:
          IS_REQUIRED: true
          PROPERTY_NAME: storageType
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[4]/properties/storageType
          TYPE_NAME: ""
          description: |
            Artifact storage type, in this case `error`
          enum:
          - error
          type: string
      SortedPropertyNames:
      - storageType
      SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[4]/properties
    required:
    - storageType
    title: Error Artifact Response
    type: object
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf
title: Post Artifact Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]
======================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]
TYPE_NAME: BlobArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for creating a new blob artifact
properties:
  MemberNames:
    expires: Expires
    requests: Requests
    storageType: StorageType
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which the signed `requests` no longer work
      format: date-time
      type: string
    requests:
      IS_REQUIRED: true
      PROPERTY_NAME: requests
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests
      TYPE_NAME: ""
      description: |
        A list of generalized HTTP requests which must be run to upload the
        artifact.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items
        TYPE_NAME: HTTPRequest
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            headers: Headers
            method: Method
            url: URL
          Properties:
            headers:
              IS_REQUIRED: true
              PROPERTY_NAME: headers
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers
              TYPE_NAME: ""
              additionalProperties:
                Boolean: null
                Properties:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers/additionalProperties
                  TYPE_NAME: ""
                  type: string
              description: Headers of request
              type: object
            method:
              IS_REQUIRED: true
              PROPERTY_NAME: method
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/method
              TYPE_NAME: ""
              description: HTTP 1.1 method of request
              enum:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - HEAD
              - PATCH
              type: string
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/url
              TYPE_NAME: ""
              description: URL of request
              type: string
          SortedPropertyNames:
          - headers
          - method
          - url
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties
        required:
        - url
        - method
        - headers
        title: HTTP Request
        type: object
      type: array
      uniqueItems: true
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `'blob'`
      enum:
      - blob
      type: string
  SortedPropertyNames:
  - expires
  - requests
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties
required:
- requests
- storageType
- expires
title: Blob Artifact Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items
================================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items
TYPE_NAME: HTTPRequest
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    headers: Headers
    method: Method
    url: URL
  Properties:
    headers:
      IS_REQUIRED: true
      PROPERTY_NAME: headers
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers
      TYPE_NAME: ""
      additionalProperties:
        Boolean: null
        Properties:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/headers/additionalProperties
          TYPE_NAME: ""
          type: string
      description: Headers of request
      type: object
    method:
      IS_REQUIRED: true
      PROPERTY_NAME: method
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/method
      TYPE_NAME: ""
      description: HTTP 1.1 method of request
      enum:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - HEAD
      - PATCH
      type: string
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties/url
      TYPE_NAME: ""
      description: URL of request
      type: string
  SortedPropertyNames:
  - headers
  - method
  - url
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[0]/properties/requests/items/properties
required:
- url
- method
- headers
title: HTTP Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]
======================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]
TYPE_NAME: S3ArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for a signed PUT URL that will allow you to
  upload an artifact to an S3 bucket managed by the queue.
properties:
  MemberNames:
    contentType: ContentType
    expires: Expires
    putUrl: PutURL
    storageType: StorageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/contentType
      TYPE_NAME: ""
      description: |
        Artifact mime-type, must be specified as header when uploading with
        the signed `putUrl`.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which the signed `putUrl` no longer works
      format: date-time
      type: string
    putUrl:
      IS_REQUIRED: true
      PROPERTY_NAME: putUrl
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/putUrl
      TYPE_NAME: ""
      description: |
        URL to which a `PUT` request can be made to upload the artifact
        requested. Note, the `Content-Length` must be specified correctly,
        and the `ContentType` header must be set the value specified below.
      format: uri
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `'s3'`
      enum:
      - s3
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - putUrl
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[1]/properties
required:
- storageType
- putUrl
- expires
- contentType
title: S3 Artifact Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]
======================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]
TYPE_NAME: AzureArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for an Azure Shared Access Signature (SAS)
  that will allow you to upload an artifact to an Azure blob storage
  container managed by the queue.
properties:
  MemberNames:
    contentType: ContentType
    expires: Expires
    putUrl: PutURL
    storageType: StorageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/contentType
      TYPE_NAME: ""
      description: |
        Artifact mime-type, should be specified with the
        `x-ms-blob-content-type` when committing the block.
      maxLength: 255
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/expires
      TYPE_NAME: ""
      description: |
        Date-time after which Shared Access Signature (SAS) will
        seize to work.
      format: date-time
      type: string
    putUrl:
      IS_REQUIRED: true
      PROPERTY_NAME: putUrl
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/putUrl
      TYPE_NAME: ""
      description: |
        Shared Access Signature (SAS) with write permissions, see
        [Azure REST API]
        (http://msdn.microsoft.com/en-US/library/azure/dn140256.aspx)
        reference for details on how to use this.
      format: uri
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `azure`
      enum:
      - azure
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - putUrl
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[2]/properties
required:
- storageType
- expires
- contentType
- putUrl
title: Azure Artifact Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[3]
======================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[3]
TYPE_NAME: RedirectArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for the queue to redirect to a URL for a given
  artifact.
properties:
  MemberNames:
    storageType: StorageType
  Properties:
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[3]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `reference`
      enum:
      - reference
      type: string
  SortedPropertyNames:
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[3]/properties
required:
- storageType
title: Redirect Artifact Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[4]
======================================================================================
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[4]
TYPE_NAME: ErrorArtifactResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a request for the queue to reply `424` (Failed Dependency)
  with `reason` and `message` to any `GET` request for this artifact.
properties:
  MemberNames:
    storageType: StorageType
  Properties:
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[4]/properties/storageType
      TYPE_NAME: ""
      description: |
        Artifact storage type, in this case `error`
      enum:
      - error
      type: string
  SortedPropertyNames:
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/post-artifact-response.json#/oneOf[4]/properties
required:
- storageType
title: Error Artifact Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#
TYPE_NAME: ProvisionerResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response containing information about a provisioner.
properties:
  MemberNames:
    actions: Actions
    description: Description
    expires: Expires
    lastDateActive: LastDateActive
    provisionerId: ProvisionerID
    stability: Stability
  Properties:
    actions:
      $ref: actions.json#
      IS_REQUIRED: true
      PROPERTY_NAME: actions
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
        TYPE_NAME: ""
        description: |
          See taskcluster [actions](/docs/reference/platform/taskcluster-queue/docs/actions) documentation.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items
          TYPE_NAME: Action
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Actions provide a generic mechanism to expose additional features of a
            provisioner, worker type, or worker to Taskcluster clients.

            An action is comprised of metadata describing the feature it exposes,
            together with a webhook for triggering it.

            The Taskcluster tools site, for example, retrieves actions when displaying
            provisioners, worker types and workers. It presents the provisioner/worker
            type/worker specific actions to the user. When the user triggers an action,
            the web client takes the registered webhook, substitutes parameters into the
            URL (see `url`), signs the requests with the Taskcluster credentials of the
            user operating the web interface, and issues the HTTP request.

            The level to which the action relates (provisioner, worker type, worker) is
            called the action context. All actions, regardless of the action contexts,
            are registered against the provisioner when calling
            `queue.declareProvisioner`.

            The action context is used by the web client to determine where in the web
            interface to present the action to the user as follows:

            | `context`   | Tool where action is displayed |
            |-------------|--------------------------------|
            | provisioner | Provisioner Explorer           |
            | worker-type | Workers Explorer               |
            | worker      | Worker Explorer                |

            See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
            for more information.
          properties:
            MemberNames:
              context: Context
              description: Description
              method: Method
              name: Name
              title: Title
              url: URL
            Properties:
              context:
                IS_REQUIRED: true
                PROPERTY_NAME: context
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/context
                TYPE_NAME: ""
                description: |
                  Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
                  which it applies to. `context` is used by the front-end to know where to display the action.

                  | `context`   | Page displayed        |
                  |-------------|-----------------------|
                  | provisioner | Provisioner Explorer  |
                  | worker-type | Workers Explorer      |
                  | worker      | Worker Explorer       |
                enum:
                - provisioner
                - worker-type
                - worker
                title: Context
                type: string
              description:
                IS_REQUIRED: true
                PROPERTY_NAME: description
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/description
                TYPE_NAME: ""
                description: |
                  Description of the provisioner.
                title: Description
                type: string
              method:
                IS_REQUIRED: true
                PROPERTY_NAME: method
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/method
                TYPE_NAME: ""
                description: |
                  Method to indicate the desired action to be performed for a given resource.
                enum:
                - POST
                - PUT
                - DELETE
                - PATCH
                title: Method
                type: string
              name:
                IS_REQUIRED: true
                PROPERTY_NAME: name
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/name
                TYPE_NAME: ""
                description: |
                  Short names for things like logging/error messages.
                title: Name
                type: string
              title:
                IS_REQUIRED: true
                PROPERTY_NAME: title
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/title
                TYPE_NAME: ""
                description: |
                  Appropriate title for any sort of Modal prompt.
                title: Title
              url:
                IS_REQUIRED: true
                PROPERTY_NAME: url
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/url
                TYPE_NAME: ""
                description: |
                  When an action is triggered, a request is made using the `url` and `method`.
                  Depending on the `context`, the following parameters will be substituted in the url:

                  | `context`   | Path parameters                                          |
                  |-------------|----------------------------------------------------------|
                  | provisioner | <provisionerId>                                          |
                  | worker-type | <provisionerId>, <workerType>                            |
                  | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                  _Note: The request needs to be signed with the user's Taskcluster credentials._
                title: URL
                type: string
            SortedPropertyNames:
            - context
            - description
            - method
            - name
            - title
            - url
            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties
          required:
          - name
          - title
          - context
          - url
          - method
          - description
          title: Action
          type: object
        title: Actions
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#/properties/actions
      TYPE_NAME: ""
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of the provisioner.
      title: Description
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the provisioner will be automatically
        deleted by the queue.
      format: date-time
      title: Provisioner Expiration
      type: string
    lastDateActive:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateActive
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#/properties/lastDateActive
      TYPE_NAME: ""
      description: |
        Date of the last time this provisioner was seen active. `lastDateActive` is updated every 6 hours
        but may be off by up-to 6 hours. Nonetheless, `lastDateActive` is a good indicator
        of when the provisioner was last seen active.
      format: date-time
      title: Provisioner Last Date Active
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#/properties/provisionerId
      TYPE_NAME: ""
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    stability:
      IS_REQUIRED: true
      PROPERTY_NAME: stability
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#/properties/stability
      TYPE_NAME: ""
      description: |
        This is the stability of the provisioner. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
  SortedPropertyNames:
  - actions
  - description
  - expires
  - lastDateActive
  - provisionerId
  - stability
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/provisioner-response.json#/properties
required:
- provisionerId
- description
- actions
- stability
- expires
- lastDateActive
title: Provisioner Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/put-artifact-request.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/put-artifact-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/put-artifact-request.json#
TYPE_NAME: CompleteArtifactRequest
additionalProperties:
  Boolean: false
  Properties: null
description: Complete an aritifact
properties:
  MemberNames:
    etags: Etags
  Properties:
    etags:
      IS_REQUIRED: true
      PROPERTY_NAME: etags
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/put-artifact-request.json#/properties/etags
      TYPE_NAME: ""
      description: |
        A list of the etags given by the API of the blob storage provider.  This is an opaque
        string value provided by the API.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/put-artifact-request.json#/properties/etags/items
        TYPE_NAME: ""
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - etags
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/put-artifact-request.json#/properties
required:
- etags
title: Complete Artifact Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/quarantine-worker-request.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/quarantine-worker-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/quarantine-worker-request.json#
TYPE_NAME: QuarantineWorkerRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a worker's quarantineUntil property.
properties:
  MemberNames:
    quarantineUntil: QuarantineUntil
  Properties:
    quarantineUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: quarantineUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/quarantine-worker-request.json#/properties/quarantineUntil
      TYPE_NAME: ""
      description: |
        Quarantining a worker allows the machine to remain alive but not accept jobs.
        Once the quarantineUntil time has elapsed, the worker resumes accepting jobs.
        Note that a quarantine can be lifted by setting `quarantineUntil` to the present time (or
        somewhere in the past).
      format: date-time
      title: Worker Quarantine
      type: string
  SortedPropertyNames:
  - quarantineUntil
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/quarantine-worker-request.json#/properties
required:
- quarantineUntil
title: Quarantine Worker Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-claim-request.json#
=========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-claim-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-request.json#
TYPE_NAME: TaskClaimRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to claim (or reclaim) a task
properties:
  MemberNames:
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-request.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for group that worker claiming the task is a part of.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-request.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for worker within the given workerGroup
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-request.json#/properties
required:
- workerGroup
- workerId
title: Task Claim Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#
TYPE_NAME: TaskClaimResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a successful task claim
properties:
  MemberNames:
    credentials: Credentials
    runId: RunID
    status: Status
    takenUntil: TakenUntil
    task: Task
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    credentials:
      $ref: task-credentials.json#
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
        TYPE_NAME: TaskCredentials
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Temporary credentials granting `task.scopes` and the scope:
          `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
          the task, upload artifacts and report task resolution.

          The temporary credentials are set to expire after `takenUntil`. They
          won't expire exactly at `takenUntil` but shortly after, hence, requests
          coming close `takenUntil` won't have problems even if there is a little
          clock drift.

          Workers should use these credentials when making requests on behalf of
          a task. This includes requests to create artifacts, reclaiming the task
          reporting the task `completed`, `failed` or `exception`.

          Note, a new set of temporary credentials is issued when the worker
          reclaims the task.
        properties:
          MemberNames:
            accessToken: AccessToken
            certificate: Certificate
            clientId: ClientID
          Properties:
            accessToken:
              IS_REQUIRED: true
              PROPERTY_NAME: accessToken
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/accessToken
              TYPE_NAME: ""
              description: |
                The `accessToken` for the temporary credentials.
              minLength: 1
              type: string
            certificate:
              IS_REQUIRED: true
              PROPERTY_NAME: certificate
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/certificate
              TYPE_NAME: ""
              description: |
                The `certificate` for the temporary credentials, these are required
                for the temporary credentials to work.
              minLength: 1
              type: string
            clientId:
              IS_REQUIRED: true
              PROPERTY_NAME: clientId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/clientId
              TYPE_NAME: ""
              description: |
                The `clientId` for the temporary credentials.
              minLength: 1
              type: string
          SortedPropertyNames:
          - accessToken
          - certificate
          - clientId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties
        required:
        - clientId
        - accessToken
        - certificate
        title: Task Credentials
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties/credentials
      TYPE_NAME: ""
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties/runId
      TYPE_NAME: ""
      description: |
        `run-id` assigned to this run of the task
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties/status
      TYPE_NAME: ""
    takenUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: takenUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties/takenUntil
      TYPE_NAME: ""
      description: |
        Time at which the run expires and is resolved as `exception`,
        with reason `claim-expired` if the run haven't been reclaimed.
      format: date-time
      type: string
    task:
      $ref: task.json#
      IS_REQUIRED: true
      PROPERTY_NAME: task
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
        TYPE_NAME: TaskDefinitionResponse
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Definition of a task that can be scheduled
        properties:
          MemberNames:
            created: Created
            deadline: Deadline
            dependencies: Dependencies
            expires: Expires
            extra: Extra
            metadata: Metadata
            payload: Payload
            priority: Priority
            provisionerId: ProvisionerID
            requires: Requires
            retries: Retries
            routes: Routes
            schedulerId: SchedulerID
            scopes: Scopes
            tags: Tags
            taskGroupId: TaskGroupID
            workerType: WorkerType
          Properties:
            created:
              IS_REQUIRED: true
              PROPERTY_NAME: created
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/created
              TYPE_NAME: ""
              description: Creation time of task
              format: date-time
              title: Created
              type: string
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            dependencies:
              IS_REQUIRED: true
              PROPERTY_NAME: dependencies
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
              TYPE_NAME: ""
              default: []
              description: |
                List of dependent tasks. These must either be _completed_ or _resolved_
                before this task is scheduled. See `requires` for semantics.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
                TYPE_NAME: ""
                description: |
                  The `taskId` of a task that must be resolved before this task is
                  scheduled.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task Dependency
                type: string
              maxItems: 100
              title: Task Dependencies
              type: array
              uniqueItems: true
            expires:
              IS_REQUIRED: false
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and status is deleted.
                Notice that all artifacts for the task must have an expiration that is no
                later than this. If this property isn't it will be set to `deadline`
                plus one year (this default may change).
              format: date-time
              title: Expiration
              type: string
            extra:
              IS_REQUIRED: true
              PROPERTY_NAME: extra
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
              TYPE_NAME: ""
              default: {}
              description: |
                Object with properties that can hold any kind of extra data that should be
                associated with the task. This can be data for the task which doesn't
                fit into `payload`, or it can supplementary data for use in services
                listening for events from this task. For example this could be details to
                display on _treeherder_, or information for indexing the task. Please, try
                to put all related information under one property, so `extra` data keys
                for treeherder reporting and task indexing don't conflict, hence, we have
                reusable services. **Warning**, do not stuff large data-sets in here --
                task definitions should not take-up multiple MiBs.
              title: Extra Data
              type: object
            metadata:
              $ref: task-metadata.json#
              IS_REQUIRED: true
              PROPERTY_NAME: metadata
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                TYPE_NAME: TaskMetadata
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Required task metadata
                properties:
                  MemberNames:
                    description: Description
                    name: Name
                    owner: Owner
                    source: Source
                  Properties:
                    description:
                      IS_REQUIRED: true
                      PROPERTY_NAME: description
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
                      TYPE_NAME: ""
                      description: |
                        Human readable description of the task, please **explain** what the
                        task does. A few lines of documentation is not going to hurt you.
                      maxLength: 32768
                      title: Description
                      type: string
                    name:
                      IS_REQUIRED: true
                      PROPERTY_NAME: name
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
                      TYPE_NAME: ""
                      description: |
                        Human readable name of task, used to very briefly given an idea about
                        what the task does.
                      maxLength: 255
                      title: Name
                      type: string
                    owner:
                      IS_REQUIRED: true
                      PROPERTY_NAME: owner
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
                      TYPE_NAME: ""
                      description: |
                        E-mail of person who caused this task, e.g. the person who did
                        `hg push`. The person we should contact to ask why this task is here.
                      format: email
                      maxLength: 255
                      title: Owner
                      type: string
                    source:
                      IS_REQUIRED: true
                      PROPERTY_NAME: source
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
                      TYPE_NAME: ""
                      description: |
                        Link to source of this task, should specify a file, revision and
                        repository. This should be place someone can go an do a git/hg blame
                        to who came up with recipe for this task.
                      format: uri
                      maxLength: 4096
                      pattern: ^https?://
                      title: Source
                      type: string
                  SortedPropertyNames:
                  - description
                  - name
                  - owner
                  - source
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
                required:
                - name
                - description
                - owner
                - source
                title: Task Metadata
                type: object
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/metadata
              TYPE_NAME: ""
            payload:
              IS_REQUIRED: true
              PROPERTY_NAME: payload
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
              TYPE_NAME: ""
              description: |
                Task-specific payload following worker-specific format.
                Refer to the documentation for the worker implementing
                `<provisionerId>/<workerType>` for details.
              title: Task Payload
              type: object
            priority:
              IS_REQUIRED: true
              PROPERTY_NAME: priority
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
              TYPE_NAME: ""
              default: lowest
              description: |
                Priority of task. This defaults to `lowest` and the scope
                `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                to define a task with `<priority>`. The `normal` priority is treated as
                `lowest`.
              enum:
              - highest
              - very-high
              - high
              - medium
              - low
              - very-low
              - lowest
              - normal
              title: Task Priority
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              TYPE_NAME: ""
              description: |
                Unique identifier for a provisioner, that can supply specified
                `workerType`
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            requires:
              IS_REQUIRED: true
              PROPERTY_NAME: requires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
              TYPE_NAME: ""
              default: all-completed
              description: |
                The tasks relation to its dependencies. This property specifies the
                semantics of the `task.dependencies` property.
                If `all-completed` is given the task will be scheduled when all
                dependencies are resolved _completed_ (successful resolution).
                If `all-resolved` is given the task will be scheduled when all dependencies
                have been resolved, regardless of what their resolution is.
              enum:
              - all-completed
              - all-resolved
              title: Dependency Requirement Semantics
              type: string
            retries:
              IS_REQUIRED: true
              PROPERTY_NAME: retries
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
              TYPE_NAME: ""
              default: 5
              description: |
                Number of times to retry the task in case of infrastructure issues.
                An _infrastructure issue_ is a worker node that crashes or is shutdown,
                these events are to be expected.
              maximum: 49
              minimum: 0
              title: Retries
              type: integer
            routes:
              IS_REQUIRED: true
              PROPERTY_NAME: routes
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
              TYPE_NAME: ""
              default: []
              description: |
                List of task-specific routes. Pulse messages about the task will be CC'ed to
                `route.<value>` for each `<value>` in this array.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
                TYPE_NAME: ""
                description: |
                  A task specific route.
                maxLength: 249
                minLength: 1
                title: Task Specific Route
                type: string
              maxItems: 64
              title: Task Specific Routes
              type: array
              uniqueItems: true
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
              description: |
                All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                * it can represent the entity that created the task;
                * it can limit addition of new tasks to a task group: the caller of
                    `createTask` must have a scope related to the `schedulerId` of the task
                    group;
                * it controls who can manipulate tasks, again by requiring
                    `schedulerId`-related scopes; and
                * it appears in the routing key for Pulse messages about the task.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
              TYPE_NAME: ""
              description: |
                List of scopes that the task is authorized to use during its execution.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
                TYPE_NAME: ""
                description: |
                  A single scope. A scope must be composed of
                  printable ASCII characters and spaces.  Scopes ending in more than
                  one `*` character are forbidden.
                pattern: ^[ -~]*$
                type: string
              title: Scopes
              type: array
              uniqueItems: false
            tags:
              IS_REQUIRED: true
              PROPERTY_NAME: tags
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
              TYPE_NAME: ""
              additionalProperties:
                Boolean: null
                Properties:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
                  TYPE_NAME: ""
                  maxLength: 4096
                  type: string
              default: {}
              description: |
                Arbitrary key-value tags (only strings limited to 4k). These can be used
                to attach informal metadata to a task. Use this for informal tags that
                tasks can be classified by. You can also think of strings here as
                candidates for formal metadata. Something like
                `purpose: 'build' || 'test'` is a good example.
              title: Tags
              type: object
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              TYPE_NAME: ""
              description: |
                Identifier for a group of tasks scheduled together with this task.
                Generally, all tasks related to a single event such as a version-control
                push or a nightly build have the same `taskGroupId`.  This property
                defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                decision tasks.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              TYPE_NAME: ""
              description: |
                Unique identifier for a worker-type within a specific provisioner
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - created
          - deadline
          - dependencies
          - expires
          - extra
          - metadata
          - payload
          - priority
          - provisionerId
          - requires
          - retries
          - routes
          - schedulerId
          - scopes
          - tags
          - taskGroupId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties
        required:
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - dependencies
        - requires
        - routes
        - priority
        - retries
        - created
        - deadline
        - scopes
        - payload
        - metadata
        - tags
        - extra
        title: Task Definition Response
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties/task
      TYPE_NAME: ""
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which this run started.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the worker executing this run.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - credentials
  - runId
  - status
  - takenUntil
  - task
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-claim-response.json#/properties
required:
- status
- runId
- workerGroup
- workerId
- takenUntil
- task
- credentials
title: Task Claim Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
=======================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
TYPE_NAME: TaskCredentials
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Temporary credentials granting `task.scopes` and the scope:
  `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
  the task, upload artifacts and report task resolution.

  The temporary credentials are set to expire after `takenUntil`. They
  won't expire exactly at `takenUntil` but shortly after, hence, requests
  coming close `takenUntil` won't have problems even if there is a little
  clock drift.

  Workers should use these credentials when making requests on behalf of
  a task. This includes requests to create artifacts, reclaiming the task
  reporting the task `completed`, `failed` or `exception`.

  Note, a new set of temporary credentials is issued when the worker
  reclaims the task.
properties:
  MemberNames:
    accessToken: AccessToken
    certificate: Certificate
    clientId: ClientID
  Properties:
    accessToken:
      IS_REQUIRED: true
      PROPERTY_NAME: accessToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/accessToken
      TYPE_NAME: ""
      description: |
        The `accessToken` for the temporary credentials.
      minLength: 1
      type: string
    certificate:
      IS_REQUIRED: true
      PROPERTY_NAME: certificate
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/certificate
      TYPE_NAME: ""
      description: |
        The `certificate` for the temporary credentials, these are required
        for the temporary credentials to work.
      minLength: 1
      type: string
    clientId:
      IS_REQUIRED: true
      PROPERTY_NAME: clientId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/clientId
      TYPE_NAME: ""
      description: |
        The `clientId` for the temporary credentials.
      minLength: 1
      type: string
  SortedPropertyNames:
  - accessToken
  - certificate
  - clientId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties
required:
- clientId
- accessToken
- certificate
title: Task Credentials
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#
TYPE_NAME: TaskDefinitionAndStatus
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Task Definition and task status structure.
properties:
  MemberNames:
    status: Status
    task: Task
  Properties:
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties/status
      TYPE_NAME: ""
    task:
      $ref: task.json#
      IS_REQUIRED: true
      PROPERTY_NAME: task
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
        TYPE_NAME: TaskDefinitionResponse
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Definition of a task that can be scheduled
        properties:
          MemberNames:
            created: Created
            deadline: Deadline
            dependencies: Dependencies
            expires: Expires
            extra: Extra
            metadata: Metadata
            payload: Payload
            priority: Priority
            provisionerId: ProvisionerID
            requires: Requires
            retries: Retries
            routes: Routes
            schedulerId: SchedulerID
            scopes: Scopes
            tags: Tags
            taskGroupId: TaskGroupID
            workerType: WorkerType
          Properties:
            created:
              IS_REQUIRED: true
              PROPERTY_NAME: created
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/created
              TYPE_NAME: ""
              description: Creation time of task
              format: date-time
              title: Created
              type: string
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            dependencies:
              IS_REQUIRED: true
              PROPERTY_NAME: dependencies
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
              TYPE_NAME: ""
              default: []
              description: |
                List of dependent tasks. These must either be _completed_ or _resolved_
                before this task is scheduled. See `requires` for semantics.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
                TYPE_NAME: ""
                description: |
                  The `taskId` of a task that must be resolved before this task is
                  scheduled.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task Dependency
                type: string
              maxItems: 100
              title: Task Dependencies
              type: array
              uniqueItems: true
            expires:
              IS_REQUIRED: false
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and status is deleted.
                Notice that all artifacts for the task must have an expiration that is no
                later than this. If this property isn't it will be set to `deadline`
                plus one year (this default may change).
              format: date-time
              title: Expiration
              type: string
            extra:
              IS_REQUIRED: true
              PROPERTY_NAME: extra
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
              TYPE_NAME: ""
              default: {}
              description: |
                Object with properties that can hold any kind of extra data that should be
                associated with the task. This can be data for the task which doesn't
                fit into `payload`, or it can supplementary data for use in services
                listening for events from this task. For example this could be details to
                display on _treeherder_, or information for indexing the task. Please, try
                to put all related information under one property, so `extra` data keys
                for treeherder reporting and task indexing don't conflict, hence, we have
                reusable services. **Warning**, do not stuff large data-sets in here --
                task definitions should not take-up multiple MiBs.
              title: Extra Data
              type: object
            metadata:
              $ref: task-metadata.json#
              IS_REQUIRED: true
              PROPERTY_NAME: metadata
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
              REF_SUBSCHEMA:
                $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
                TYPE_NAME: TaskMetadata
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  Required task metadata
                properties:
                  MemberNames:
                    description: Description
                    name: Name
                    owner: Owner
                    source: Source
                  Properties:
                    description:
                      IS_REQUIRED: true
                      PROPERTY_NAME: description
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
                      TYPE_NAME: ""
                      description: |
                        Human readable description of the task, please **explain** what the
                        task does. A few lines of documentation is not going to hurt you.
                      maxLength: 32768
                      title: Description
                      type: string
                    name:
                      IS_REQUIRED: true
                      PROPERTY_NAME: name
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
                      TYPE_NAME: ""
                      description: |
                        Human readable name of task, used to very briefly given an idea about
                        what the task does.
                      maxLength: 255
                      title: Name
                      type: string
                    owner:
                      IS_REQUIRED: true
                      PROPERTY_NAME: owner
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
                      TYPE_NAME: ""
                      description: |
                        E-mail of person who caused this task, e.g. the person who did
                        `hg push`. The person we should contact to ask why this task is here.
                      format: email
                      maxLength: 255
                      title: Owner
                      type: string
                    source:
                      IS_REQUIRED: true
                      PROPERTY_NAME: source
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
                      TYPE_NAME: ""
                      description: |
                        Link to source of this task, should specify a file, revision and
                        repository. This should be place someone can go an do a git/hg blame
                        to who came up with recipe for this task.
                      format: uri
                      maxLength: 4096
                      pattern: ^https?://
                      title: Source
                      type: string
                  SortedPropertyNames:
                  - description
                  - name
                  - owner
                  - source
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
                required:
                - name
                - description
                - owner
                - source
                title: Task Metadata
                type: object
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/metadata
              TYPE_NAME: ""
            payload:
              IS_REQUIRED: true
              PROPERTY_NAME: payload
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
              TYPE_NAME: ""
              description: |
                Task-specific payload following worker-specific format.
                Refer to the documentation for the worker implementing
                `<provisionerId>/<workerType>` for details.
              title: Task Payload
              type: object
            priority:
              IS_REQUIRED: true
              PROPERTY_NAME: priority
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
              TYPE_NAME: ""
              default: lowest
              description: |
                Priority of task. This defaults to `lowest` and the scope
                `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
                to define a task with `<priority>`. The `normal` priority is treated as
                `lowest`.
              enum:
              - highest
              - very-high
              - high
              - medium
              - low
              - very-low
              - lowest
              - normal
              title: Task Priority
              type: string
            provisionerId:
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              TYPE_NAME: ""
              description: |
                Unique identifier for a provisioner, that can supply specified
                `workerType`
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Provisioner Id
              type: string
            requires:
              IS_REQUIRED: true
              PROPERTY_NAME: requires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
              TYPE_NAME: ""
              default: all-completed
              description: |
                The tasks relation to its dependencies. This property specifies the
                semantics of the `task.dependencies` property.
                If `all-completed` is given the task will be scheduled when all
                dependencies are resolved _completed_ (successful resolution).
                If `all-resolved` is given the task will be scheduled when all dependencies
                have been resolved, regardless of what their resolution is.
              enum:
              - all-completed
              - all-resolved
              title: Dependency Requirement Semantics
              type: string
            retries:
              IS_REQUIRED: true
              PROPERTY_NAME: retries
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
              TYPE_NAME: ""
              default: 5
              description: |
                Number of times to retry the task in case of infrastructure issues.
                An _infrastructure issue_ is a worker node that crashes or is shutdown,
                these events are to be expected.
              maximum: 49
              minimum: 0
              title: Retries
              type: integer
            routes:
              IS_REQUIRED: true
              PROPERTY_NAME: routes
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
              TYPE_NAME: ""
              default: []
              description: |
                List of task-specific routes. Pulse messages about the task will be CC'ed to
                `route.<value>` for each `<value>` in this array.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
                TYPE_NAME: ""
                description: |
                  A task specific route.
                maxLength: 249
                minLength: 1
                title: Task Specific Route
                type: string
              maxItems: 64
              title: Task Specific Routes
              type: array
              uniqueItems: true
            schedulerId:
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
              description: |
                All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                * it can represent the entity that created the task;
                * it can limit addition of new tasks to a task group: the caller of
                    `createTask` must have a scope related to the `schedulerId` of the task
                    group;
                * it controls who can manipulate tasks, again by requiring
                    `schedulerId`-related scopes; and
                * it appears in the routing key for Pulse messages about the task.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Scheduler Identifier
              type: string
            scopes:
              IS_REQUIRED: true
              PROPERTY_NAME: scopes
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
              TYPE_NAME: ""
              description: |
                List of scopes that the task is authorized to use during its execution.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
                TYPE_NAME: ""
                description: |
                  A single scope. A scope must be composed of
                  printable ASCII characters and spaces.  Scopes ending in more than
                  one `*` character are forbidden.
                pattern: ^[ -~]*$
                type: string
              title: Scopes
              type: array
              uniqueItems: false
            tags:
              IS_REQUIRED: true
              PROPERTY_NAME: tags
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
              TYPE_NAME: ""
              additionalProperties:
                Boolean: null
                Properties:
                  IS_REQUIRED: false
                  PROPERTY_NAME: ""
                  SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
                  TYPE_NAME: ""
                  maxLength: 4096
                  type: string
              default: {}
              description: |
                Arbitrary key-value tags (only strings limited to 4k). These can be used
                to attach informal metadata to a task. Use this for informal tags that
                tasks can be classified by. You can also think of strings here as
                candidates for formal metadata. Something like
                `purpose: 'build' || 'test'` is a good example.
              title: Tags
              type: object
            taskGroupId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              TYPE_NAME: ""
              description: |
                Identifier for a group of tasks scheduled together with this task.
                Generally, all tasks related to a single event such as a version-control
                push or a nightly build have the same `taskGroupId`.  This property
                defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                decision tasks.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task-Group Identifier
              type: string
            workerType:
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              TYPE_NAME: ""
              description: |
                Unique identifier for a worker-type within a specific provisioner
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Type
              type: string
          SortedPropertyNames:
          - created
          - deadline
          - dependencies
          - expires
          - extra
          - metadata
          - payload
          - priority
          - provisionerId
          - requires
          - retries
          - routes
          - schedulerId
          - scopes
          - tags
          - taskGroupId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties
        required:
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - dependencies
        - requires
        - routes
        - priority
        - retries
        - created
        - deadline
        - scopes
        - payload
        - metadata
        - tags
        - extra
        title: Task Definition Response
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties/task
      TYPE_NAME: ""
  SortedPropertyNames:
  - status
  - task
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-definition-and-status.json#/properties
required:
- task
- status
title: Task definition and status
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-exception-request.json#
=============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-exception-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-request.json#
TYPE_NAME: TaskExceptionRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request for a run of a task to be resolved with an exception
properties:
  MemberNames:
    reason: Reason
  Properties:
    reason:
      IS_REQUIRED: true
      PROPERTY_NAME: reason
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-request.json#/properties/reason
      TYPE_NAME: ""
      description: |
        Reason that the task is resolved with an exception. This is a subset
        of the values for `resolvedReason` given in the task status structure.
        **Report `worker-shutdown`** if the run failed because the worker
        had to shutdown (spot node disappearing). In case of `worker-shutdown`
        the queue will immediately **retry** the task, by making a new run.
        This is much faster than ignoreing the issue and letting the task _retry_
        by claim expiration. For any other _reason_ reported the queue will not
        retry the task.
        **Report `malformed-payload`** if the `task.payload` doesn't match the
        schema for the worker payload, or referenced resource doesn't exists.
        In either case, you should still log the error to a log file for the
        specific run.
        **Report `resource-unavailable`** if a resource/service needed or
        referenced in `task.payload` is _temporarily_ unavailable. Do not use this
        unless you know the resource exists, if the resource doesn't exist you
        should report `malformed-payload`. Example use-case if you contact the
        index (a service) on behalf of the task, because of a declaration in
        `task.payload`, and the service (index) is temporarily down. Don't use
        this if a URL returns 404, but if it returns 503 or hits a timeout when
        you retry the request, then this _may_ be a valid exception. The queue
        assumes that workers have applied retries as needed, and will not retry
         the task.
        **Report `internal-error`** if the worker experienced an unhandled internal
        error from which it couldn't recover. The queue will not retry runs
        resolved with this reason, but you are clearly signaling that this is a
        bug in the worker code.
        **Report `superseded`** if the task was determined to have been
        superseded by another task, and its results are no longer needed.  It is
        convention in this case to create an artifact entitled
        `public/superseded-by` containing the taskId of the task that superseded
        this one.
        **Report `intermittent-task`** if the task explicitly requested a retry
        because task is intermittent. Workers can choose whether or not to
        support this, but workers shouldn't blindly report this for every task
        that fails.
      enum:
      - worker-shutdown
      - malformed-payload
      - resource-unavailable
      - internal-error
      - superseded
      - intermittent-task
      type: string
  SortedPropertyNames:
  - reason
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-request.json#/properties
required:
- reason
title: Task Exception Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
====================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
TYPE_NAME: TaskMetadata
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Required task metadata
properties:
  MemberNames:
    description: Description
    name: Name
    owner: Owner
    source: Source
  Properties:
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
      TYPE_NAME: ""
      description: |
        Human readable description of the task, please **explain** what the
        task does. A few lines of documentation is not going to hurt you.
      maxLength: 32768
      title: Description
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
      TYPE_NAME: ""
      description: |
        Human readable name of task, used to very briefly given an idea about
        what the task does.
      maxLength: 255
      title: Name
      type: string
    owner:
      IS_REQUIRED: true
      PROPERTY_NAME: owner
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
      TYPE_NAME: ""
      description: |
        E-mail of person who caused this task, e.g. the person who did
        `hg push`. The person we should contact to ask why this task is here.
      format: email
      maxLength: 255
      title: Owner
      type: string
    source:
      IS_REQUIRED: true
      PROPERTY_NAME: source
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
      TYPE_NAME: ""
      description: |
        Link to source of this task, should specify a file, revision and
        repository. This should be place someone can go an do a git/hg blame
        to who came up with recipe for this task.
      format: uri
      maxLength: 4096
      pattern: ^https?://
      title: Source
      type: string
  SortedPropertyNames:
  - description
  - name
  - owner
  - source
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
required:
- name
- description
- owner
- source
title: Task Metadata
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#
TYPE_NAME: TaskReclaimResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a successful task claim
properties:
  MemberNames:
    credentials: Credentials
    runId: RunID
    status: Status
    takenUntil: TakenUntil
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    credentials:
      $ref: task-credentials.json#
      IS_REQUIRED: true
      PROPERTY_NAME: credentials
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#
        TYPE_NAME: TaskCredentials
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Temporary credentials granting `task.scopes` and the scope:
          `queue:claim-task:<taskId>/<runId>` which allows the worker to reclaim
          the task, upload artifacts and report task resolution.

          The temporary credentials are set to expire after `takenUntil`. They
          won't expire exactly at `takenUntil` but shortly after, hence, requests
          coming close `takenUntil` won't have problems even if there is a little
          clock drift.

          Workers should use these credentials when making requests on behalf of
          a task. This includes requests to create artifacts, reclaiming the task
          reporting the task `completed`, `failed` or `exception`.

          Note, a new set of temporary credentials is issued when the worker
          reclaims the task.
        properties:
          MemberNames:
            accessToken: AccessToken
            certificate: Certificate
            clientId: ClientID
          Properties:
            accessToken:
              IS_REQUIRED: true
              PROPERTY_NAME: accessToken
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/accessToken
              TYPE_NAME: ""
              description: |
                The `accessToken` for the temporary credentials.
              minLength: 1
              type: string
            certificate:
              IS_REQUIRED: true
              PROPERTY_NAME: certificate
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/certificate
              TYPE_NAME: ""
              description: |
                The `certificate` for the temporary credentials, these are required
                for the temporary credentials to work.
              minLength: 1
              type: string
            clientId:
              IS_REQUIRED: true
              PROPERTY_NAME: clientId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties/clientId
              TYPE_NAME: ""
              description: |
                The `clientId` for the temporary credentials.
              minLength: 1
              type: string
          SortedPropertyNames:
          - accessToken
          - certificate
          - clientId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-credentials.json#/properties
        required:
        - clientId
        - accessToken
        - certificate
        title: Task Credentials
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#/properties/credentials
      TYPE_NAME: ""
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#/properties/runId
      TYPE_NAME: ""
      description: |
        `run-id` assigned to this run of the task
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#/properties/status
      TYPE_NAME: ""
    takenUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: takenUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#/properties/takenUntil
      TYPE_NAME: ""
      description: |
        Time at which the run expires and is resolved as `exception`,
        with reason `claim-expired` if the run haven't been reclaimed.
      format: date-time
      type: string
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which this run started.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the worker executing this run.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - credentials
  - runId
  - status
  - takenUntil
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-reclaim-response.json#/properties
required:
- status
- runId
- workerGroup
- workerId
- takenUntil
- credentials
title: Task Reclaim Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
===============================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
TYPE_NAME: TaskRun
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A run of a task.
properties:
  MemberNames:
    runId: RunID
    taskId: TaskID
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/runId
      TYPE_NAME: ""
      description: |
        Id of this task run, `run-id`s always starts from `0`
      maximum: 1000
      minimum: 0
      title: Run Identifier
      type: integer
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
  SortedPropertyNames:
  - runId
  - taskId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties
required:
- taskId
- runId
title: Task Run
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#
TYPE_NAME: TaskStatusResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a task status request
properties:
  MemberNames:
    status: Status
  Properties:
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#/properties/status
      TYPE_NAME: ""
  SortedPropertyNames:
  - status
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status-response.json#/properties
required:
- status
title: Task Status Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
==================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
TYPE_NAME: TaskStatusStructure
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A representation of **task status** as known by the queue
properties:
  MemberNames:
    deadline: Deadline
    expires: Expires
    provisionerId: ProvisionerID
    retriesLeft: RetriesLeft
    runs: Runs
    schedulerId: SchedulerID
    state: State
    taskGroupId: TaskGroupID
    taskId: TaskID
    workerType: WorkerType
  Properties:
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
      TYPE_NAME: ""
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Task expiration, time at which task definition and
        status is deleted. Notice that all artifacts for the task
        must have an expiration that is no later than this.
      format: date-time
      title: Expiration
      type: string
    provisionerId:
      $ref: task.json#/properties/provisionerId
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: provisionerId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
        TYPE_NAME: ""
        description: |
          Unique identifier for a provisioner, that can supply specified
          `workerType`
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Provisioner Id
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
      TYPE_NAME: ""
    retriesLeft:
      IS_REQUIRED: true
      PROPERTY_NAME: retriesLeft
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
      TYPE_NAME: ""
      description: |
        Number of retries left for the task in case of infrastructure issues
      maximum: 999
      minimum: 0
      title: Retries Left
      type: integer
    runs:
      IS_REQUIRED: true
      PROPERTY_NAME: runs
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
      TYPE_NAME: ""
      description: |
        List of runs, ordered so that index `i` has `runId == i`
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
        TYPE_NAME: RunInformation
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          JSON object with information about a run
        properties:
          MemberNames:
            reasonCreated: ReasonCreated
            reasonResolved: ReasonResolved
            resolved: Resolved
            runId: RunID
            scheduled: Scheduled
            started: Started
            state: State
            takenUntil: TakenUntil
            workerGroup: WorkerGroup
            workerId: WorkerID
          Properties:
            reasonCreated:
              IS_REQUIRED: true
              PROPERTY_NAME: reasonCreated
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
              TYPE_NAME: ""
              description: |
                Reason for the creation of this run,
                **more reasons may be added in the future**.
              enum:
              - scheduled
              - retry
              - task-retry
              - rerun
              - exception
              title: Reason Created
              type: string
            reasonResolved:
              IS_REQUIRED: false
              PROPERTY_NAME: reasonResolved
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
              TYPE_NAME: ""
              description: |
                Reason that run was resolved, this is mainly
                useful for runs resolved as `exception`.
                Note, **more reasons may be added in the future**, also this
                property is only available after the run is resolved. Some of these
                reasons, notably `intermittent-task`, `worker-shutdown`, and
                `claim-expired`, will trigger an automatic retry of the task.
              enum:
              - completed
              - failed
              - deadline-exceeded
              - canceled
              - superseded
              - claim-expired
              - worker-shutdown
              - malformed-payload
              - resource-unavailable
              - internal-error
              - intermittent-task
              title: Reason Resolved
              type: string
            resolved:
              IS_REQUIRED: false
              PROPERTY_NAME: resolved
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
              TYPE_NAME: ""
              description: |
                Date-time at which this run was resolved, ie. when the run changed
                state from `running` to either `completed`, `failed` or `exception`.
                This property is only present after the run as been resolved.
              format: date-time
              title: Resolved
              type: string
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
              TYPE_NAME: ""
              description: |
                Id of this task run, `run-id`s always starts from `0`
              maximum: 1000
              minimum: 0
              title: Run Identifier
              type: integer
            scheduled:
              IS_REQUIRED: true
              PROPERTY_NAME: scheduled
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
              TYPE_NAME: ""
              description: |
                Date-time at which this run was scheduled, ie. when the run was
                created in state `pending`.
              format: date-time
              title: Scheduled
              type: string
            started:
              IS_REQUIRED: false
              PROPERTY_NAME: started
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
              TYPE_NAME: ""
              description: |
                Date-time at which this run was claimed, ie. when the run changed
                state from `pending` to `running`. This property is only present
                after the run has been claimed.
              format: date-time
              title: Started
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
              TYPE_NAME: ""
              description: |
                State of this run
              enum:
              - pending
              - running
              - completed
              - failed
              - exception
              title: Run State
              type: string
            takenUntil:
              IS_REQUIRED: false
              PROPERTY_NAME: takenUntil
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
              TYPE_NAME: ""
              description: |
                Time at which the run expires and is resolved as `failed`, if the
                run isn't reclaimed. Note, only present after the run has been
                claimed.
              format: date-time
              title: Taken Until
              type: string
            workerGroup:
              IS_REQUIRED: false
              PROPERTY_NAME: workerGroup
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
              TYPE_NAME: ""
              description: |
                Identifier for group that worker who executes this run is a part of,
                this identifier is mainly used for efficient routing.
                Note, this property is only present after the run is claimed.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Group
              type: string
            workerId:
              IS_REQUIRED: false
              PROPERTY_NAME: workerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
              TYPE_NAME: ""
              description: |
                Identifier for worker evaluating this run within given
                `workerGroup`. Note, this property is only available after the run
                has been claimed.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Identifier
              type: string
          SortedPropertyNames:
          - reasonCreated
          - reasonResolved
          - resolved
          - runId
          - scheduled
          - started
          - state
          - takenUntil
          - workerGroup
          - workerId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
        required:
        - runId
        - state
        - reasonCreated
        - scheduled
        title: Run Information
        type: object
      title: List of Runs
      type: array
      uniqueItems: true
    schedulerId:
      $ref: task.json#/properties/schedulerId
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: schedulerId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
        TYPE_NAME: ""
        default: '-'
        description: |
          All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

          * it can represent the entity that created the task;
          * it can limit addition of new tasks to a task group: the caller of
              `createTask` must have a scope related to the `schedulerId` of the task
              group;
          * it controls who can manipulate tasks, again by requiring
              `schedulerId`-related scopes; and
          * it appears in the routing key for Pulse messages about the task.
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Scheduler Identifier
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
      TYPE_NAME: ""
      default: '-'
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
      TYPE_NAME: ""
      description: |
        State of this task. This is just an auxiliary property derived from state
        of latests run, or `unscheduled` if none.
      enum:
      - unscheduled
      - pending
      - running
      - completed
      - failed
      - exception
      title: State
      type: string
    taskGroupId:
      $ref: task.json#/properties/taskGroupId
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: taskGroupId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
        TYPE_NAME: ""
        description: |
          Identifier for a group of tasks scheduled together with this task.
          Generally, all tasks related to a single event such as a version-control
          push or a nightly build have the same `taskGroupId`.  This property
          defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
          the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
          decision tasks.
        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
        title: Task-Group Identifier
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
      TYPE_NAME: ""
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
    workerType:
      $ref: task.json#/properties/workerType
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: workerType
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
        TYPE_NAME: ""
        description: |
          Unique identifier for a worker-type within a specific provisioner
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Worker Type
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
      TYPE_NAME: ""
  SortedPropertyNames:
  - deadline
  - expires
  - provisionerId
  - retriesLeft
  - runs
  - schedulerId
  - state
  - taskGroupId
  - taskId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
required:
- taskId
- provisionerId
- workerType
- schedulerId
- taskGroupId
- deadline
- expires
- retriesLeft
- state
- runs
title: Task Status Structure
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
========================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
TYPE_NAME: RunInformation
additionalProperties:
  Boolean: false
  Properties: null
description: |
  JSON object with information about a run
properties:
  MemberNames:
    reasonCreated: ReasonCreated
    reasonResolved: ReasonResolved
    resolved: Resolved
    runId: RunID
    scheduled: Scheduled
    started: Started
    state: State
    takenUntil: TakenUntil
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    reasonCreated:
      IS_REQUIRED: true
      PROPERTY_NAME: reasonCreated
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
      TYPE_NAME: ""
      description: |
        Reason for the creation of this run,
        **more reasons may be added in the future**.
      enum:
      - scheduled
      - retry
      - task-retry
      - rerun
      - exception
      title: Reason Created
      type: string
    reasonResolved:
      IS_REQUIRED: false
      PROPERTY_NAME: reasonResolved
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
      TYPE_NAME: ""
      description: |
        Reason that run was resolved, this is mainly
        useful for runs resolved as `exception`.
        Note, **more reasons may be added in the future**, also this
        property is only available after the run is resolved. Some of these
        reasons, notably `intermittent-task`, `worker-shutdown`, and
        `claim-expired`, will trigger an automatic retry of the task.
      enum:
      - completed
      - failed
      - deadline-exceeded
      - canceled
      - superseded
      - claim-expired
      - worker-shutdown
      - malformed-payload
      - resource-unavailable
      - internal-error
      - intermittent-task
      title: Reason Resolved
      type: string
    resolved:
      IS_REQUIRED: false
      PROPERTY_NAME: resolved
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
      TYPE_NAME: ""
      description: |
        Date-time at which this run was resolved, ie. when the run changed
        state from `running` to either `completed`, `failed` or `exception`.
        This property is only present after the run as been resolved.
      format: date-time
      title: Resolved
      type: string
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
      TYPE_NAME: ""
      description: |
        Id of this task run, `run-id`s always starts from `0`
      maximum: 1000
      minimum: 0
      title: Run Identifier
      type: integer
    scheduled:
      IS_REQUIRED: true
      PROPERTY_NAME: scheduled
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
      TYPE_NAME: ""
      description: |
        Date-time at which this run was scheduled, ie. when the run was
        created in state `pending`.
      format: date-time
      title: Scheduled
      type: string
    started:
      IS_REQUIRED: false
      PROPERTY_NAME: started
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
      TYPE_NAME: ""
      description: |
        Date-time at which this run was claimed, ie. when the run changed
        state from `pending` to `running`. This property is only present
        after the run has been claimed.
      format: date-time
      title: Started
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
      TYPE_NAME: ""
      description: |
        State of this run
      enum:
      - pending
      - running
      - completed
      - failed
      - exception
      title: Run State
      type: string
    takenUntil:
      IS_REQUIRED: false
      PROPERTY_NAME: takenUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
      TYPE_NAME: ""
      description: |
        Time at which the run expires and is resolved as `failed`, if the
        run isn't reclaimed. Note, only present after the run has been
        claimed.
      format: date-time
      title: Taken Until
      type: string
    workerGroup:
      IS_REQUIRED: false
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for group that worker who executes this run is a part of,
        this identifier is mainly used for efficient routing.
        Note, this property is only present after the run is claimed.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Group
      type: string
    workerId:
      IS_REQUIRED: false
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for worker evaluating this run within given
        `workerGroup`. Note, this property is only available after the run
        has been claimed.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Identifier
      type: string
  SortedPropertyNames:
  - reasonCreated
  - reasonResolved
  - resolved
  - runId
  - scheduled
  - started
  - state
  - takenUntil
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
required:
- runId
- state
- reasonCreated
- scheduled
title: Run Information
type: object


https://taskcluster-staging.net/schemas/queue/v1/task.json#
===========================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#
TYPE_NAME: TaskDefinitionResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of a task that can be scheduled
properties:
  MemberNames:
    created: Created
    deadline: Deadline
    dependencies: Dependencies
    expires: Expires
    extra: Extra
    metadata: Metadata
    payload: Payload
    priority: Priority
    provisionerId: ProvisionerID
    requires: Requires
    retries: Retries
    routes: Routes
    schedulerId: SchedulerID
    scopes: Scopes
    tags: Tags
    taskGroupId: TaskGroupID
    workerType: WorkerType
  Properties:
    created:
      IS_REQUIRED: true
      PROPERTY_NAME: created
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/created
      TYPE_NAME: ""
      description: Creation time of task
      format: date-time
      title: Created
      type: string
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/deadline
      TYPE_NAME: ""
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    dependencies:
      IS_REQUIRED: true
      PROPERTY_NAME: dependencies
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies
      TYPE_NAME: ""
      default: []
      description: |
        List of dependent tasks. These must either be _completed_ or _resolved_
        before this task is scheduled. See `requires` for semantics.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/dependencies/items
        TYPE_NAME: ""
        description: |
          The `taskId` of a task that must be resolved before this task is
          scheduled.
        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
        title: Task Dependency
        type: string
      maxItems: 100
      title: Task Dependencies
      type: array
      uniqueItems: true
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Task expiration, time at which task definition and status is deleted.
        Notice that all artifacts for the task must have an expiration that is no
        later than this. If this property isn't it will be set to `deadline`
        plus one year (this default may change).
      format: date-time
      title: Expiration
      type: string
    extra:
      IS_REQUIRED: true
      PROPERTY_NAME: extra
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/extra
      TYPE_NAME: ""
      default: {}
      description: |
        Object with properties that can hold any kind of extra data that should be
        associated with the task. This can be data for the task which doesn't
        fit into `payload`, or it can supplementary data for use in services
        listening for events from this task. For example this could be details to
        display on _treeherder_, or information for indexing the task. Please, try
        to put all related information under one property, so `extra` data keys
        for treeherder reporting and task indexing don't conflict, hence, we have
        reusable services. **Warning**, do not stuff large data-sets in here --
        task definitions should not take-up multiple MiBs.
      title: Extra Data
      type: object
    metadata:
      $ref: task-metadata.json#
      IS_REQUIRED: true
      PROPERTY_NAME: metadata
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
        TYPE_NAME: TaskMetadata
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Required task metadata
        properties:
          MemberNames:
            description: Description
            name: Name
            owner: Owner
            source: Source
          Properties:
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
              TYPE_NAME: ""
              description: |
                Human readable description of the task, please **explain** what the
                task does. A few lines of documentation is not going to hurt you.
              maxLength: 32768
              title: Description
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
              TYPE_NAME: ""
              description: |
                Human readable name of task, used to very briefly given an idea about
                what the task does.
              maxLength: 255
              title: Name
              type: string
            owner:
              IS_REQUIRED: true
              PROPERTY_NAME: owner
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
              TYPE_NAME: ""
              description: |
                E-mail of person who caused this task, e.g. the person who did
                `hg push`. The person we should contact to ask why this task is here.
              format: email
              maxLength: 255
              title: Owner
              type: string
            source:
              IS_REQUIRED: true
              PROPERTY_NAME: source
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
              TYPE_NAME: ""
              description: |
                Link to source of this task, should specify a file, revision and
                repository. This should be place someone can go an do a git/hg blame
                to who came up with recipe for this task.
              format: uri
              maxLength: 4096
              pattern: ^https?://
              title: Source
              type: string
          SortedPropertyNames:
          - description
          - name
          - owner
          - source
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
        required:
        - name
        - description
        - owner
        - source
        title: Task Metadata
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/metadata
      TYPE_NAME: ""
    payload:
      IS_REQUIRED: true
      PROPERTY_NAME: payload
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/payload
      TYPE_NAME: ""
      description: |
        Task-specific payload following worker-specific format.
        Refer to the documentation for the worker implementing
        `<provisionerId>/<workerType>` for details.
      title: Task Payload
      type: object
    priority:
      IS_REQUIRED: true
      PROPERTY_NAME: priority
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/priority
      TYPE_NAME: ""
      default: lowest
      description: |
        Priority of task. This defaults to `lowest` and the scope
        `queue:create-task:<priority>/<provisionerId>/<workerType>` is required
        to define a task with `<priority>`. The `normal` priority is treated as
        `lowest`.
      enum:
      - highest
      - very-high
      - high
      - medium
      - low
      - very-low
      - lowest
      - normal
      title: Task Priority
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
      TYPE_NAME: ""
      description: |
        Unique identifier for a provisioner, that can supply specified
        `workerType`
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner Id
      type: string
    requires:
      IS_REQUIRED: true
      PROPERTY_NAME: requires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/requires
      TYPE_NAME: ""
      default: all-completed
      description: |
        The tasks relation to its dependencies. This property specifies the
        semantics of the `task.dependencies` property.
        If `all-completed` is given the task will be scheduled when all
        dependencies are resolved _completed_ (successful resolution).
        If `all-resolved` is given the task will be scheduled when all dependencies
        have been resolved, regardless of what their resolution is.
      enum:
      - all-completed
      - all-resolved
      title: Dependency Requirement Semantics
      type: string
    retries:
      IS_REQUIRED: true
      PROPERTY_NAME: retries
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/retries
      TYPE_NAME: ""
      default: 5
      description: |
        Number of times to retry the task in case of infrastructure issues.
        An _infrastructure issue_ is a worker node that crashes or is shutdown,
        these events are to be expected.
      maximum: 49
      minimum: 0
      title: Retries
      type: integer
    routes:
      IS_REQUIRED: true
      PROPERTY_NAME: routes
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes
      TYPE_NAME: ""
      default: []
      description: |
        List of task-specific routes. Pulse messages about the task will be CC'ed to
        `route.<value>` for each `<value>` in this array.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/routes/items
        TYPE_NAME: ""
        description: |
          A task specific route.
        maxLength: 249
        minLength: 1
        title: Task Specific Route
        type: string
      maxItems: 64
      title: Task Specific Routes
      type: array
      uniqueItems: true
    schedulerId:
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
      TYPE_NAME: ""
      default: '-'
      description: |
        All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

        * it can represent the entity that created the task;
        * it can limit addition of new tasks to a task group: the caller of
            `createTask` must have a scope related to the `schedulerId` of the task
            group;
        * it controls who can manipulate tasks, again by requiring
            `schedulerId`-related scopes; and
        * it appears in the routing key for Pulse messages about the task.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    scopes:
      IS_REQUIRED: true
      PROPERTY_NAME: scopes
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes
      TYPE_NAME: ""
      description: |
        List of scopes that the task is authorized to use during its execution.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/scopes/items
        TYPE_NAME: ""
        description: |
          A single scope. A scope must be composed of
          printable ASCII characters and spaces.  Scopes ending in more than
          one `*` character are forbidden.
        pattern: ^[ -~]*$
        type: string
      title: Scopes
      type: array
      uniqueItems: false
    tags:
      IS_REQUIRED: true
      PROPERTY_NAME: tags
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags
      TYPE_NAME: ""
      additionalProperties:
        Boolean: null
        Properties:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/tags/additionalProperties
          TYPE_NAME: ""
          maxLength: 4096
          type: string
      default: {}
      description: |
        Arbitrary key-value tags (only strings limited to 4k). These can be used
        to attach informal metadata to a task. Use this for informal tags that
        tasks can be classified by. You can also think of strings here as
        candidates for formal metadata. Something like
        `purpose: 'build' || 'test'` is a good example.
      title: Tags
      type: object
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
      TYPE_NAME: ""
      description: |
        Identifier for a group of tasks scheduled together with this task.
        Generally, all tasks related to a single event such as a version-control
        push or a nightly build have the same `taskGroupId`.  This property
        defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
        the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
        decision tasks.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
      TYPE_NAME: ""
      description: |
        Unique identifier for a worker-type within a specific provisioner
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Type
      type: string
  SortedPropertyNames:
  - created
  - deadline
  - dependencies
  - expires
  - extra
  - metadata
  - payload
  - priority
  - provisionerId
  - requires
  - retries
  - routes
  - schedulerId
  - scopes
  - tags
  - taskGroupId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties
required:
- provisionerId
- workerType
- schedulerId
- taskGroupId
- dependencies
- requires
- routes
- priority
- retries
- created
- deadline
- scopes
- payload
- metadata
- tags
- extra
title: Task Definition Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#
=================================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#
TYPE_NAME: ProvisionerRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a provisioner.
properties:
  MemberNames:
    actions: Actions
    description: Description
    expires: Expires
    stability: Stability
  Properties:
    actions:
      $ref: actions.json#
      IS_REQUIRED: false
      PROPERTY_NAME: actions
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#
        TYPE_NAME: ""
        description: |
          See taskcluster [actions](/docs/reference/platform/taskcluster-queue/docs/actions) documentation.
        items:
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items
          TYPE_NAME: Action
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            Actions provide a generic mechanism to expose additional features of a
            provisioner, worker type, or worker to Taskcluster clients.

            An action is comprised of metadata describing the feature it exposes,
            together with a webhook for triggering it.

            The Taskcluster tools site, for example, retrieves actions when displaying
            provisioners, worker types and workers. It presents the provisioner/worker
            type/worker specific actions to the user. When the user triggers an action,
            the web client takes the registered webhook, substitutes parameters into the
            URL (see `url`), signs the requests with the Taskcluster credentials of the
            user operating the web interface, and issues the HTTP request.

            The level to which the action relates (provisioner, worker type, worker) is
            called the action context. All actions, regardless of the action contexts,
            are registered against the provisioner when calling
            `queue.declareProvisioner`.

            The action context is used by the web client to determine where in the web
            interface to present the action to the user as follows:

            | `context`   | Tool where action is displayed |
            |-------------|--------------------------------|
            | provisioner | Provisioner Explorer           |
            | worker-type | Workers Explorer               |
            | worker      | Worker Explorer                |

            See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
            for more information.
          properties:
            MemberNames:
              context: Context
              description: Description
              method: Method
              name: Name
              title: Title
              url: URL
            Properties:
              context:
                IS_REQUIRED: true
                PROPERTY_NAME: context
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/context
                TYPE_NAME: ""
                description: |
                  Actions have a "context" that is one of provisioner, worker-type, or worker, indicating
                  which it applies to. `context` is used by the front-end to know where to display the action.

                  | `context`   | Page displayed        |
                  |-------------|-----------------------|
                  | provisioner | Provisioner Explorer  |
                  | worker-type | Workers Explorer      |
                  | worker      | Worker Explorer       |
                enum:
                - provisioner
                - worker-type
                - worker
                title: Context
                type: string
              description:
                IS_REQUIRED: true
                PROPERTY_NAME: description
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/description
                TYPE_NAME: ""
                description: |
                  Description of the provisioner.
                title: Description
                type: string
              method:
                IS_REQUIRED: true
                PROPERTY_NAME: method
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/method
                TYPE_NAME: ""
                description: |
                  Method to indicate the desired action to be performed for a given resource.
                enum:
                - POST
                - PUT
                - DELETE
                - PATCH
                title: Method
                type: string
              name:
                IS_REQUIRED: true
                PROPERTY_NAME: name
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/name
                TYPE_NAME: ""
                description: |
                  Short names for things like logging/error messages.
                title: Name
                type: string
              title:
                IS_REQUIRED: true
                PROPERTY_NAME: title
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/title
                TYPE_NAME: ""
                description: |
                  Appropriate title for any sort of Modal prompt.
                title: Title
              url:
                IS_REQUIRED: true
                PROPERTY_NAME: url
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties/url
                TYPE_NAME: ""
                description: |
                  When an action is triggered, a request is made using the `url` and `method`.
                  Depending on the `context`, the following parameters will be substituted in the url:

                  | `context`   | Path parameters                                          |
                  |-------------|----------------------------------------------------------|
                  | provisioner | <provisionerId>                                          |
                  | worker-type | <provisionerId>, <workerType>                            |
                  | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                  _Note: The request needs to be signed with the user's Taskcluster credentials._
                title: URL
                type: string
            SortedPropertyNames:
            - context
            - description
            - method
            - name
            - title
            - url
            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/actions.json#/items/properties
          required:
          - name
          - title
          - context
          - url
          - method
          - description
          title: Action
          type: object
        title: Actions
        type: array
        uniqueItems: true
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#/properties/actions
      TYPE_NAME: ""
    description:
      IS_REQUIRED: false
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of the provisioner.
      title: Description
      type: string
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the provisioner will be automatically
        deleted by the queue.
      format: date-time
      title: Provisioner Expiration
      type: string
    stability:
      IS_REQUIRED: false
      PROPERTY_NAME: stability
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#/properties/stability
      TYPE_NAME: ""
      description: |
        This is the stability of the provisioner. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
  SortedPropertyNames:
  - actions
  - description
  - expires
  - stability
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/update-provisioner-request.json#/properties
title: Provisioner Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/update-worker-request.json#
============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/update-worker-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-worker-request.json#
TYPE_NAME: WorkerRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a worker.
properties:
  MemberNames:
    expires: Expires
  Properties:
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-worker-request.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the worker will be automatically
        deleted by the queue.
      format: date-time
      title: Worker Expiration
      type: string
  SortedPropertyNames:
  - expires
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/update-worker-request.json#/properties
title: Worker Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#
================================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#
TYPE_NAME: WorkerTypeRequest
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Request to update a worker-type.
properties:
  MemberNames:
    description: Description
    expires: Expires
    stability: Stability
  Properties:
    description:
      IS_REQUIRED: false
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of the provisioner.
      title: Description
      type: string
    expires:
      IS_REQUIRED: false
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the worker-type will be automatically
        deleted by the queue.
      format: date-time
      title: Worker-type Expiration
      type: string
    stability:
      IS_REQUIRED: false
      PROPERTY_NAME: stability
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#/properties/stability
      TYPE_NAME: ""
      description: |
        This is the stability of the provisioner. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
  SortedPropertyNames:
  - description
  - expires
  - stability
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/update-workertype-request.json#/properties
title: Worker-type Request
type: object


https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#
======================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#
TYPE_NAME: WorkerResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response containing information about a worker.
properties:
  MemberNames:
    actions: Actions
    expires: Expires
    firstClaim: FirstClaim
    provisionerId: ProvisionerID
    quarantineUntil: QuarantineUntil
    recentTasks: RecentTasks
    workerGroup: WorkerGroup
    workerId: WorkerID
    workerType: WorkerType
  Properties:
    actions:
      IS_REQUIRED: true
      PROPERTY_NAME: actions
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items
        TYPE_NAME: WorkerAction
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Actions provide a generic mechanism to expose additional features of a
          provisioner, worker type, or worker to Taskcluster clients.

          An action is comprised of metadata describing the feature it exposes,
          together with a webhook for triggering it.

          The Taskcluster tools site, for example, retrieves actions when displaying
          provisioners, worker types and workers. It presents the provisioner/worker
          type/worker specific actions to the user. When the user triggers an action,
          the web client takes the registered webhook, substitutes parameters into the
          URL (see `url`), signs the requests with the Taskcluster credentials of the
          user operating the web interface, and issues the HTTP request.

          The level to which the action relates (provisioner, worker type, worker) is
          called the action context. All actions, regardless of the action contexts,
          are registered against the provisioner when calling
          `queue.declareProvisioner`.

          The action context is used by the web client to determine where in the web
          interface to present the action to the user as follows:

          | `context`   | Tool where action is displayed |
          |-------------|--------------------------------|
          | provisioner | Provisioner Explorer           |
          | worker-type | Workers Explorer               |
          | worker      | Worker Explorer                |

          See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
          for more information.
        properties:
          MemberNames:
            context: Context
            description: Description
            method: Method
            name: Name
            title: Title
            url: URL
          Properties:
            context:
              IS_REQUIRED: true
              PROPERTY_NAME: context
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/context
              TYPE_NAME: ""
              description: |
                Only actions with the context `worker` are included.
              enum:
              - worker
              title: Context
              type: string
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/description
              TYPE_NAME: ""
              description: |
                Description of the provisioner.
              title: Description
              type: string
            method:
              IS_REQUIRED: true
              PROPERTY_NAME: method
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/method
              TYPE_NAME: ""
              description: |
                Method to indicate the desired action to be performed for a given resource.
              enum:
              - POST
              - PUT
              - DELETE
              - PATCH
              title: Method
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/name
              TYPE_NAME: ""
              description: |
                Short names for things like logging/error messages.
              title: Name
              type: string
            title:
              IS_REQUIRED: true
              PROPERTY_NAME: title
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/title
              TYPE_NAME: ""
              description: |
                Appropriate title for any sort of Modal prompt.
              title: Title
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/url
              TYPE_NAME: ""
              description: |
                When an action is triggered, a request is made using the `url` and `method`.
                Depending on the `context`, the following parameters will be substituted in the url:

                | `context`   | Path parameters                                          |
                |-------------|----------------------------------------------------------|
                | provisioner | <provisionerId>                                          |
                | worker-type | <provisionerId>, <workerType>                            |
                | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                _Note: The request needs to be signed with the user's Taskcluster credentials._
              title: URL
              type: string
          SortedPropertyNames:
          - context
          - description
          - method
          - name
          - title
          - url
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties
        required:
        - name
        - title
        - context
        - url
        - method
        - description
        title: Worker Action
        type: object
      title: Worker Actions
      type: array
      uniqueItems: false
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the worker will be automatically
        deleted by the queue.
      format: date-time
      title: Worker Expiration
      type: string
    firstClaim:
      IS_REQUIRED: true
      PROPERTY_NAME: firstClaim
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/firstClaim
      TYPE_NAME: ""
      description: |
        Date of the first time this worker claimed a task.
      format: date-time
      title: First task claimed
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/provisionerId
      TYPE_NAME: ""
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    quarantineUntil:
      IS_REQUIRED: false
      PROPERTY_NAME: quarantineUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/quarantineUntil
      TYPE_NAME: ""
      description: |
        Quarantining a worker allows the machine to remain alive but not accept jobs.
        Once the quarantineUntil time has elapsed, the worker resumes accepting jobs.
        Note that a quarantine can be lifted by setting `quarantineUntil` to the present time (or
        somewhere in the past).
      format: date-time
      title: Worker Quarantine
      type: string
    recentTasks:
      IS_REQUIRED: true
      PROPERTY_NAME: recentTasks
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/recentTasks
      TYPE_NAME: ""
      description: |
        List of 20 most recent tasks claimed by the worker.
      items:
        $ref: task-run.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
        REF_SUBSCHEMA:
          $id: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
          $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
          IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#
          TYPE_NAME: TaskRun
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            A run of a task.
          properties:
            MemberNames:
              runId: RunID
              taskId: TaskID
            Properties:
              runId:
                IS_REQUIRED: true
                PROPERTY_NAME: runId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/runId
                TYPE_NAME: ""
                description: |
                  Id of this task run, `run-id`s always starts from `0`
                maximum: 1000
                minimum: 0
                title: Run Identifier
                type: integer
              taskId:
                IS_REQUIRED: true
                PROPERTY_NAME: taskId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties/taskId
                TYPE_NAME: ""
                description: |
                  Unique task identifier, this is UUID encoded as
                  [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                  stripped of `=` padding.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task Identifier
                type: string
            SortedPropertyNames:
            - runId
            - taskId
            SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-run.json#/properties
          required:
          - taskId
          - runId
          title: Task Run
          type: object
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/recentTasks/items
        TYPE_NAME: ""
      title: Most Recent Tasks
      type: array
      uniqueItems: false
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for group that worker who executes this run is a part of,
        this identifier is mainly used for efficient routing.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Group
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for worker evaluating this run within given
        `workerGroup`.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Identifier
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/workerType
      TYPE_NAME: ""
      description: |
        WorkerType name.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: WorkerType name
      type: string
  SortedPropertyNames:
  - actions
  - expires
  - firstClaim
  - provisionerId
  - quarantineUntil
  - recentTasks
  - workerGroup
  - workerId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties
required:
- provisionerId
- workerType
- workerGroup
- workerId
- recentTasks
- expires
- firstClaim
- actions
title: Worker Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items
===============================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items
TYPE_NAME: WorkerAction
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Actions provide a generic mechanism to expose additional features of a
  provisioner, worker type, or worker to Taskcluster clients.

  An action is comprised of metadata describing the feature it exposes,
  together with a webhook for triggering it.

  The Taskcluster tools site, for example, retrieves actions when displaying
  provisioners, worker types and workers. It presents the provisioner/worker
  type/worker specific actions to the user. When the user triggers an action,
  the web client takes the registered webhook, substitutes parameters into the
  URL (see `url`), signs the requests with the Taskcluster credentials of the
  user operating the web interface, and issues the HTTP request.

  The level to which the action relates (provisioner, worker type, worker) is
  called the action context. All actions, regardless of the action contexts,
  are registered against the provisioner when calling
  `queue.declareProvisioner`.

  The action context is used by the web client to determine where in the web
  interface to present the action to the user as follows:

  | `context`   | Tool where action is displayed |
  |-------------|--------------------------------|
  | provisioner | Provisioner Explorer           |
  | worker-type | Workers Explorer               |
  | worker      | Worker Explorer                |

  See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
  for more information.
properties:
  MemberNames:
    context: Context
    description: Description
    method: Method
    name: Name
    title: Title
    url: URL
  Properties:
    context:
      IS_REQUIRED: true
      PROPERTY_NAME: context
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/context
      TYPE_NAME: ""
      description: |
        Only actions with the context `worker` are included.
      enum:
      - worker
      title: Context
      type: string
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/description
      TYPE_NAME: ""
      description: |
        Description of the provisioner.
      title: Description
      type: string
    method:
      IS_REQUIRED: true
      PROPERTY_NAME: method
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/method
      TYPE_NAME: ""
      description: |
        Method to indicate the desired action to be performed for a given resource.
      enum:
      - POST
      - PUT
      - DELETE
      - PATCH
      title: Method
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/name
      TYPE_NAME: ""
      description: |
        Short names for things like logging/error messages.
      title: Name
      type: string
    title:
      IS_REQUIRED: true
      PROPERTY_NAME: title
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/title
      TYPE_NAME: ""
      description: |
        Appropriate title for any sort of Modal prompt.
      title: Title
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties/url
      TYPE_NAME: ""
      description: |
        When an action is triggered, a request is made using the `url` and `method`.
        Depending on the `context`, the following parameters will be substituted in the url:

        | `context`   | Path parameters                                          |
        |-------------|----------------------------------------------------------|
        | provisioner | <provisionerId>                                          |
        | worker-type | <provisionerId>, <workerType>                            |
        | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

        _Note: The request needs to be signed with the user's Taskcluster credentials._
      title: URL
      type: string
  SortedPropertyNames:
  - context
  - description
  - method
  - name
  - title
  - url
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/worker-response.json#/properties/actions/items/properties
required:
- name
- title
- context
- url
- method
- description
title: Worker Action
type: object


https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#
TYPE_NAME: WorkerTypeResponse
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Response to a worker-type request from a provisioner.
properties:
  MemberNames:
    actions: Actions
    description: Description
    expires: Expires
    lastDateActive: LastDateActive
    provisionerId: ProvisionerID
    stability: Stability
    workerType: WorkerType
  Properties:
    actions:
      IS_REQUIRED: true
      PROPERTY_NAME: actions
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items
        TYPE_NAME: WorkerTypeAction
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          Actions provide a generic mechanism to expose additional features of a
          provisioner, worker type, or worker to Taskcluster clients.

          An action is comprised of metadata describing the feature it exposes,
          together with a webhook for triggering it.

          The Taskcluster tools site, for example, retrieves actions when displaying
          provisioners, worker types and workers. It presents the provisioner/worker
          type/worker specific actions to the user. When the user triggers an action,
          the web client takes the registered webhook, substitutes parameters into the
          URL (see `url`), signs the requests with the Taskcluster credentials of the
          user operating the web interface, and issues the HTTP request.

          The level to which the action relates (provisioner, worker type, worker) is
          called the action context. All actions, regardless of the action contexts,
          are registered against the provisioner when calling
          `queue.declareProvisioner`.

          The action context is used by the web client to determine where in the web
          interface to present the action to the user as follows:

          | `context`   | Tool where action is displayed |
          |-------------|--------------------------------|
          | provisioner | Provisioner Explorer           |
          | worker-type | Workers Explorer               |
          | worker      | Worker Explorer                |

          See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
          for more information.
        properties:
          MemberNames:
            context: Context
            description: Description
            method: Method
            name: Name
            title: Title
            url: URL
          Properties:
            context:
              IS_REQUIRED: true
              PROPERTY_NAME: context
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/context
              TYPE_NAME: ""
              description: |
                Only actions with the context `worker-type` are included.
              enum:
              - worker-type
              title: Context
              type: string
            description:
              IS_REQUIRED: true
              PROPERTY_NAME: description
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/description
              TYPE_NAME: ""
              description: |
                Description of the provisioner.
              title: Description
              type: string
            method:
              IS_REQUIRED: true
              PROPERTY_NAME: method
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/method
              TYPE_NAME: ""
              description: |
                Method to indicate the desired action to be performed for a given resource.
              enum:
              - POST
              - PUT
              - DELETE
              - PATCH
              title: Method
              type: string
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/name
              TYPE_NAME: ""
              description: |
                Short names for things like logging/error messages.
              title: Name
              type: string
            title:
              IS_REQUIRED: true
              PROPERTY_NAME: title
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/title
              TYPE_NAME: ""
              description: |
                Appropriate title for any sort of Modal prompt.
              title: Title
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/url
              TYPE_NAME: ""
              description: |
                When an action is triggered, a request is made using the `url` and `method`.
                Depending on the `context`, the following parameters will be substituted in the url:

                | `context`   | Path parameters                                          |
                |-------------|----------------------------------------------------------|
                | provisioner | <provisionerId>                                          |
                | worker-type | <provisionerId>, <workerType>                            |
                | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

                _Note: The request needs to be signed with the user's Taskcluster credentials._
              title: URL
              type: string
          SortedPropertyNames:
          - context
          - description
          - method
          - name
          - title
          - url
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties
        required:
        - name
        - title
        - context
        - url
        - method
        - description
        title: Worker-type Action
        type: object
      title: Worker-type Actions
      type: array
      uniqueItems: false
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/description
      TYPE_NAME: ""
      description: |
        Description of the worker-type.
      title: Description
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the worker-type will be automatically
        deleted by the queue.
      format: date-time
      title: Worker-type Expiration
      type: string
    lastDateActive:
      IS_REQUIRED: true
      PROPERTY_NAME: lastDateActive
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/lastDateActive
      TYPE_NAME: ""
      description: |
        Date of the last time this worker-type was seen active. `lastDateActive` is updated every 6 hours
        but may be off by up-to 6 hours. Nonetheless, `lastDateActive` is a good indicator
        of when the worker-type was last seen active.
      format: date-time
      title: Worker-type Last Date Active
      type: string
    provisionerId:
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/provisionerId
      TYPE_NAME: ""
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Provisioner ID
      type: string
    stability:
      IS_REQUIRED: true
      PROPERTY_NAME: stability
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/stability
      TYPE_NAME: ""
      description: |
        This is the stability of the worker-type. Accepted values:
          * `experimental`
          * `stable`
          * `deprecated`
      enum:
      - experimental
      - stable
      - deprecated
      title: Stability
      type: string
    workerType:
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/workerType
      TYPE_NAME: ""
      description: |
        WorkerType name.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker-type Name
      type: string
  SortedPropertyNames:
  - actions
  - description
  - expires
  - lastDateActive
  - provisionerId
  - stability
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties
required:
- workerType
- provisionerId
- description
- stability
- expires
- lastDateActive
- actions
title: Worker-type Response
type: object


https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items
===================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items
TYPE_NAME: WorkerTypeAction
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Actions provide a generic mechanism to expose additional features of a
  provisioner, worker type, or worker to Taskcluster clients.

  An action is comprised of metadata describing the feature it exposes,
  together with a webhook for triggering it.

  The Taskcluster tools site, for example, retrieves actions when displaying
  provisioners, worker types and workers. It presents the provisioner/worker
  type/worker specific actions to the user. When the user triggers an action,
  the web client takes the registered webhook, substitutes parameters into the
  URL (see `url`), signs the requests with the Taskcluster credentials of the
  user operating the web interface, and issues the HTTP request.

  The level to which the action relates (provisioner, worker type, worker) is
  called the action context. All actions, regardless of the action contexts,
  are registered against the provisioner when calling
  `queue.declareProvisioner`.

  The action context is used by the web client to determine where in the web
  interface to present the action to the user as follows:

  | `context`   | Tool where action is displayed |
  |-------------|--------------------------------|
  | provisioner | Provisioner Explorer           |
  | worker-type | Workers Explorer               |
  | worker      | Worker Explorer                |

  See [actions docs](/docs/reference/platform/taskcluster-queue/docs/actions)
  for more information.
properties:
  MemberNames:
    context: Context
    description: Description
    method: Method
    name: Name
    title: Title
    url: URL
  Properties:
    context:
      IS_REQUIRED: true
      PROPERTY_NAME: context
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/context
      TYPE_NAME: ""
      description: |
        Only actions with the context `worker-type` are included.
      enum:
      - worker-type
      title: Context
      type: string
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/description
      TYPE_NAME: ""
      description: |
        Description of the provisioner.
      title: Description
      type: string
    method:
      IS_REQUIRED: true
      PROPERTY_NAME: method
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/method
      TYPE_NAME: ""
      description: |
        Method to indicate the desired action to be performed for a given resource.
      enum:
      - POST
      - PUT
      - DELETE
      - PATCH
      title: Method
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/name
      TYPE_NAME: ""
      description: |
        Short names for things like logging/error messages.
      title: Name
      type: string
    title:
      IS_REQUIRED: true
      PROPERTY_NAME: title
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/title
      TYPE_NAME: ""
      description: |
        Appropriate title for any sort of Modal prompt.
      title: Title
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties/url
      TYPE_NAME: ""
      description: |
        When an action is triggered, a request is made using the `url` and `method`.
        Depending on the `context`, the following parameters will be substituted in the url:

        | `context`   | Path parameters                                          |
        |-------------|----------------------------------------------------------|
        | provisioner | <provisionerId>                                          |
        | worker-type | <provisionerId>, <workerType>                            |
        | worker      | <provisionerId>, <workerType>, <workerGroup>, <workerId> |

        _Note: The request needs to be signed with the user's Taskcluster credentials._
      title: URL
      type: string
  SortedPropertyNames:
  - context
  - description
  - method
  - name
  - title
  - url
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/workertype-response.json#/properties/actions/items/properties
required:
- name
- title
- context
- url
- method
- description
title: Worker-type Action
type: object


https://taskcluster-staging.net/references/queue/v1/exchanges.json
==================================================================
Version         = 'v1'
Schema          = 'https://taskcluster-staging.net/schemas/common/exchanges-reference-v0.json#'
Title           = 'Queue AMQP Exchanges'
Description     = 'The queue service is responsible for accepting tasks and track their state
as they are executed by workers. In order ensure they are eventually
resolved.

This document describes AMQP exchanges offered by the queue, which allows
third-party listeners to monitor tasks as they progress to resolution.
These exchanges targets the following audience:
 * Schedulers, who takes action after tasks are completed,
 * Workers, who wants to listen for new or canceled tasks (optional),
 * Tools, that wants to update their view as task progress.

You'll notice that all the exchanges in the document shares the same
routing key pattern. This makes it very easy to bind to all messages
about a certain kind tasks.

**Task specific routes**, a task can define a task specific route using
the `task.routes` property. See task creation documentation for details
on permissions required to provide task specific routes. If a task has
the entry `'notify.by-email'` in as task specific route defined in
`task.routes` all messages about this task will be CC'ed with the
routing-key `'route.notify.by-email'`.

These routes will always be prefixed `route.`, so that cannot interfere
with the _primary_ routing key as documented here. Notice that the
_primary_ routing key is always prefixed `primary.`. This is ensured
in the routing key reference, so API clients will do this automatically.

Please, note that the way RabbitMQ works, the message will only arrive
in your queue once, even though you may have bound to the exchange with
multiple routing key patterns that matches more of the CC'ed routing
routing keys.

**Delivery guarantees**, most operations on the queue are idempotent,
which means that if repeated with the same arguments then the requests
will ensure completion of the operation and return the same response.
This is useful if the server crashes or the TCP connection breaks, but
when re-executing an idempotent operation, the queue will also resend
any related AMQP messages. Hence, messages may be repeated.

This shouldn't be much of a problem, as the best you can achieve using
confirm messages with AMQP is at-least-once delivery semantics. Hence,
this only prevents you from obtaining at-most-once delivery semantics.

**Remark**, some message generated by timeouts maybe dropped if the
server crashes at wrong time. Ideally, we'll address this in the
future. For now we suggest you ignore this corner case, and notify us
if this corner case is of concern to you.'
Exchange Prefix = 'exchange/taskcluster-queue/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-defined'
    Entry Name        = 'taskDefined'
    Entry Title       = 'Task Defined Messages'
    Entry Description = 'When a task is created or just defined a message is posted to this
exchange.

This message exchange is mainly useful when tasks are scheduled by a
scheduler that uses `defineTask` as this does not make the task
`pending`. Thus, no `taskPending` message is published.
Please, note that messages are also published on this exchange if defined
using `createTask`.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/task-defined-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-defined-message.json#'
Entry 1     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-pending'
    Entry Name        = 'taskPending'
    Entry Title       = 'Task Pending Messages'
    Entry Description = 'When a task becomes `pending` a message is posted to this exchange.

This is useful for workers who doesn't want to constantly poll the queue
for new tasks. The queue will also be authority for task states and
claims. But using this exchange workers should be able to distribute work
efficiently and they would be able to reduce their polling interval
significantly without affecting general responsiveness.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/task-pending-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#'
Entry 2     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-running'
    Entry Name        = 'taskRunning'
    Entry Title       = 'Task Running Messages'
    Entry Description = 'Whenever a task is claimed by a worker, a run is started on the worker,
and a message is posted on this exchange.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/task-running-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#'
Entry 3     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'artifact-created'
    Entry Name        = 'artifactCreated'
    Entry Title       = 'Artifact Creation Messages'
    Entry Description = 'Whenever the `createArtifact` end-point is called, the queue will create
a record of the artifact and post a message on this exchange. All of this
happens before the queue returns a signed URL for the caller to upload
the actual artifact with (pending on `storageType`).

This means that the actual artifact is rarely available when this message
is posted. But it is not unreasonable to assume that the artifact will
will become available at some point later. Most signatures will expire in
30 minutes or so, forcing the uploader to call `createArtifact` with
the same payload again in-order to continue uploading the artifact.

However, in most cases (especially for small artifacts) it's very
reasonable assume the artifact will be available within a few minutes.
This property means that this exchange is mostly useful for tools
monitoring task evaluation. One could also use it count number of
artifacts per task, or _index_ artifacts though in most cases it'll be
smarter to index artifacts after the task in question have completed
successfully.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/artifact-created-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#'
Entry 4     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-completed'
    Entry Name        = 'taskCompleted'
    Entry Title       = 'Task Completed Messages'
    Entry Description = 'When a task is successfully completed by a worker a message is posted
this exchange.
This message is routed using the `runId`, `workerGroup` and `workerId`
that completed the task. But information about additional runs is also
available from the task status structure.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/task-completed-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#'
Entry 5     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-failed'
    Entry Name        = 'taskFailed'
    Entry Title       = 'Task Failed Messages'
    Entry Description = 'When a task ran, but failed to complete successfully a message is posted
to this exchange. This is same as worker ran task-specific code, but the
task specific code exited non-zero.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/task-failed-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#'
Entry 6     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-exception'
    Entry Name        = 'taskException'
    Entry Title       = 'Task Exception Messages'
    Entry Description = 'Whenever Taskcluster fails to run a message is posted to this exchange.
This happens if the task isn't completed before its `deadlìne`,
all retries failed (i.e. workers stopped responding), the task was
canceled by another entity, or the task carried a malformed payload.

The specific _reason_ is evident from that task status structure, refer
to the `reasonResolved` property for the last run.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskId'
        Element Summary   = '`taskId` for the task this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'runId'
        Element Summary   = '`runId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 3     = 
        Element Name      = 'workerGroup'
        Element Summary   = '`workerGroup` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 4     = 
        Element Name      = 'workerId'
        Element Summary   = '`workerId` of latest run for the task, `_` if no run is exists for the task.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'false'
    Routing Key Element 5     = 
        Element Name      = 'provisionerId'
        Element Summary   = '`provisionerId` this task is targeted at.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 6     = 
        Element Name      = 'workerType'
        Element Summary   = '`workerType` this task must run on.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 7     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` this task was created by.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 8     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` this task was created in.'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 9     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/task-exception-message.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#'
Entry 7     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'task-group-resolved'
    Entry Name        = 'taskGroupResolved'
    Entry Title       = 'Task Group Resolved Messages'
    Entry Description = 'A message is published on task-group-resolved whenever all submitted
tasks (whether scheduled or unscheduled) for a given task group have
been resolved, regardless of whether they resolved as successful or
not. A task group may be resolved multiple times, since new tasks may
be submitted against an already resolved task group.'
    Routing Key Element 0     = 
        Element Name      = 'routingKeyKind'
        Element Summary   = 'Identifier for the routing-key kind. This is always `'primary'` for the formalized routing key.'
        Element Constant  = 'primary'
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'taskGroupId'
        Element Summary   = '`taskGroupId` for the task-group this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'schedulerId'
        Element Summary   = '`schedulerId` for the task-group this message concerns'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 3     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/task-group-resolved.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#'


https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#
===============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#
TYPE_NAME: ArtifactCreatedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting a new artifact has been created for a given task.
properties:
  MemberNames:
    artifact: Artifact
    runId: RunID
    status: Status
    version: Version
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    artifact:
      IS_REQUIRED: true
      PROPERTY_NAME: artifact
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact
      TYPE_NAME: Artifact
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Information about the artifact that was created
      properties:
        MemberNames:
          contentType: ContentType
          expires: Expires
          name: Name
          storageType: StorageType
        Properties:
          contentType:
            IS_REQUIRED: true
            PROPERTY_NAME: contentType
            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/contentType
            TYPE_NAME: ""
            description: |
              Mimetype for the artifact that was created.
            maxLength: 255
            title: Content-Type
            type: string
          expires:
            IS_REQUIRED: true
            PROPERTY_NAME: expires
            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/expires
            TYPE_NAME: ""
            description: |
              Date and time after which the artifact created will be automatically
              deleted by the queue.
            format: date-time
            title: Artifact Expiration
            type: string
          name:
            IS_REQUIRED: true
            PROPERTY_NAME: name
            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/name
            TYPE_NAME: ""
            description: |
              Name of the artifact that was created, this is useful if you want to
              attempt to fetch the artifact. But keep in mind that just because an
              artifact is created doesn't mean that it's immediately available.
            maxLength: 1024
            title: Artifact Name
            type: string
          storageType:
            IS_REQUIRED: true
            PROPERTY_NAME: storageType
            SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/storageType
            TYPE_NAME: ""
            description: |
              This is the `storageType` for the request that was used to create the
              artifact.
            enum:
            - blob
            - reference
            - error
            title: Artifact Storage-Type
            type: string
        SortedPropertyNames:
        - contentType
        - expires
        - name
        - storageType
        SourceURL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties
      required:
      - storageType
      - name
      - expires
      - contentType
      title: Artifact
      type: object
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/runId
      TYPE_NAME: ""
      description: |
        Id of the run on which artifact was created.
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/status
      TYPE_NAME: ""
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which the run with the created
        artifacted is running.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the worker within which the run with the created artifact
        is running.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - artifact
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
- artifact
title: Artifact Created Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact
===================================================================================================
IS_REQUIRED: true
PROPERTY_NAME: artifact
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact
TYPE_NAME: Artifact
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Information about the artifact that was created
properties:
  MemberNames:
    contentType: ContentType
    expires: Expires
    name: Name
    storageType: StorageType
  Properties:
    contentType:
      IS_REQUIRED: true
      PROPERTY_NAME: contentType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/contentType
      TYPE_NAME: ""
      description: |
        Mimetype for the artifact that was created.
      maxLength: 255
      title: Content-Type
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/expires
      TYPE_NAME: ""
      description: |
        Date and time after which the artifact created will be automatically
        deleted by the queue.
      format: date-time
      title: Artifact Expiration
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/name
      TYPE_NAME: ""
      description: |
        Name of the artifact that was created, this is useful if you want to
        attempt to fetch the artifact. But keep in mind that just because an
        artifact is created doesn't mean that it's immediately available.
      maxLength: 1024
      title: Artifact Name
      type: string
    storageType:
      IS_REQUIRED: true
      PROPERTY_NAME: storageType
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties/storageType
      TYPE_NAME: ""
      description: |
        This is the `storageType` for the request that was used to create the
        artifact.
      enum:
      - blob
      - reference
      - error
      title: Artifact Storage-Type
      type: string
  SortedPropertyNames:
  - contentType
  - expires
  - name
  - storageType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/artifact-created-message.json#/properties/artifact/properties
required:
- storageType
- name
- expires
- contentType
title: Artifact
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#
=============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#
TYPE_NAME: TaskCompletedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task has complete successfully.
properties:
  MemberNames:
    runId: RunID
    status: Status
    version: Version
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#/properties/runId
      TYPE_NAME: ""
      description: |
        Id of the run that completed the task
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#/properties/status
      TYPE_NAME: ""
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which this run ran.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the worker that executed this run.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-completed-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
title: Task Completed Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-defined-message.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-defined-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-defined-message.json#
TYPE_NAME: TaskDefinedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task has been defined. The task may or may not be
  _scheduled_ too.
properties:
  MemberNames:
    status: Status
    version: Version
  Properties:
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-defined-message.json#/properties/status
      TYPE_NAME: ""
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-defined-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - status
  - version
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-defined-message.json#/properties
required:
- version
- status
title: Task Defined Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#
=============================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#
TYPE_NAME: TaskExceptionMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that Taskcluster have failed to run a task.
properties:
  MemberNames:
    runId: RunID
    status: Status
    version: Version
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    runId:
      IS_REQUIRED: false
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#/properties/runId
      TYPE_NAME: ""
      description: |
        Id of the last run for the task, not provided if `deadline`
        was exceeded before a run was started.
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#/properties/status
      TYPE_NAME: ""
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: false
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which the last attempt of the task
        ran. Not provided, if `deadline` was exceeded before a run was started.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: false
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the last worker that failed to report, causing the task
        to fail. Not provided, if `deadline` was exceeded before a run
        was started.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-exception-message.json#/properties
required:
- version
- status
title: Task Exception Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#
TYPE_NAME: TaskFailedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task failed to complete successfully.
properties:
  MemberNames:
    runId: RunID
    status: Status
    version: Version
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#/properties/runId
      TYPE_NAME: ""
      description: |
        Id of the run that failed.
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#/properties/status
      TYPE_NAME: ""
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which this run ran.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the worker that executed this run.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - version
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-failed-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
title: Task Failed Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#
==========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#
TYPE_NAME: TaskGroupResolvedMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message written once a task group has no tasks to be run. It is
  possible for a task group to later have another task added, in which
  case this message will be sent again once it finishes.
properties:
  MemberNames:
    schedulerId: SchedulerID
    taskGroupId: TaskGroupID
    version: Version
  Properties:
    schedulerId:
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#/properties/schedulerId
      TYPE_NAME: ""
      description: |
        Identifier for the scheduler that created this task-group.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Scheduler Identifier
      type: string
    taskGroupId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#/properties/taskGroupId
      TYPE_NAME: ""
      description: |
        Identifier for the task-group being listed.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task-Group Identifier
      type: string
    version:
      IS_REQUIRED: false
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - schedulerId
  - taskGroupId
  - version
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-group-resolved.json#/properties
required:
- taskGroupId
- schedulerId
title: Task Group Resolved Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
====================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#
TYPE_NAME: TaskMetadata
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Required task metadata
properties:
  MemberNames:
    description: Description
    name: Name
    owner: Owner
    source: Source
  Properties:
    description:
      IS_REQUIRED: true
      PROPERTY_NAME: description
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/description
      TYPE_NAME: ""
      description: |
        Human readable description of the task, please **explain** what the
        task does. A few lines of documentation is not going to hurt you.
      maxLength: 32768
      title: Description
      type: string
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/name
      TYPE_NAME: ""
      description: |
        Human readable name of task, used to very briefly given an idea about
        what the task does.
      maxLength: 255
      title: Name
      type: string
    owner:
      IS_REQUIRED: true
      PROPERTY_NAME: owner
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/owner
      TYPE_NAME: ""
      description: |
        E-mail of person who caused this task, e.g. the person who did
        `hg push`. The person we should contact to ask why this task is here.
      format: email
      maxLength: 255
      title: Owner
      type: string
    source:
      IS_REQUIRED: true
      PROPERTY_NAME: source
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties/source
      TYPE_NAME: ""
      description: |
        Link to source of this task, should specify a file, revision and
        repository. This should be place someone can go an do a git/hg blame
        to who came up with recipe for this task.
      format: uri
      maxLength: 4096
      pattern: ^https?://
      title: Source
      type: string
  SortedPropertyNames:
  - description
  - name
  - owner
  - source
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-metadata.json#/properties
required:
- name
- description
- owner
- source
title: Task Metadata
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#
TYPE_NAME: TaskPendingMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a task is now pending
properties:
  MemberNames:
    runId: RunID
    status: Status
    version: Version
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#/properties/runId
      TYPE_NAME: ""
      description: |
        Id of run that became pending, `run-id`s always starts from 0
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#/properties/status
      TYPE_NAME: ""
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - runId
  - status
  - version
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-pending-message.json#/properties
required:
- version
- status
- runId
title: Task Pending Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#
===========================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#
TYPE_NAME: TaskRunningMessage
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message reporting that a given run of a task have started
properties:
  MemberNames:
    runId: RunID
    status: Status
    takenUntil: TakenUntil
    version: Version
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#/properties/runId
      TYPE_NAME: ""
      description: |
        Id of the run that just started, always starts from 0
      maximum: 1000
      minimum: 0
      type: integer
    status:
      $ref: task-status.json#
      IS_REQUIRED: true
      PROPERTY_NAME: status
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
      REF_SUBSCHEMA:
        $id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        $schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
        TYPE_NAME: TaskStatusStructure
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          A representation of **task status** as known by the queue
        properties:
          MemberNames:
            deadline: Deadline
            expires: Expires
            provisionerId: ProvisionerID
            retriesLeft: RetriesLeft
            runs: Runs
            schedulerId: SchedulerID
            state: State
            taskGroupId: TaskGroupID
            taskId: TaskID
            workerType: WorkerType
          Properties:
            deadline:
              IS_REQUIRED: true
              PROPERTY_NAME: deadline
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
              TYPE_NAME: ""
              description: |
                Deadline of the task, `pending` and `running` runs are
                resolved as **exception** if not resolved by other means
                before the deadline. Note, deadline cannot be more than
                5 days into the future
              format: date-time
              title: Deadline
              type: string
            expires:
              IS_REQUIRED: true
              PROPERTY_NAME: expires
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
              TYPE_NAME: ""
              description: |
                Task expiration, time at which task definition and
                status is deleted. Notice that all artifacts for the task
                must have an expiration that is no later than this.
              format: date-time
              title: Expiration
              type: string
            provisionerId:
              $ref: task.json#/properties/provisionerId
              IS_REQUIRED: true
              PROPERTY_NAME: provisionerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: provisionerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
                TYPE_NAME: ""
                description: |
                  Unique identifier for a provisioner, that can supply specified
                  `workerType`
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Provisioner Id
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
              TYPE_NAME: ""
            retriesLeft:
              IS_REQUIRED: true
              PROPERTY_NAME: retriesLeft
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
              TYPE_NAME: ""
              description: |
                Number of retries left for the task in case of infrastructure issues
              maximum: 999
              minimum: 0
              title: Retries Left
              type: integer
            runs:
              IS_REQUIRED: true
              PROPERTY_NAME: runs
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
              TYPE_NAME: ""
              description: |
                List of runs, ordered so that index `i` has `runId == i`
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
                TYPE_NAME: RunInformation
                additionalProperties:
                  Boolean: false
                  Properties: null
                description: |
                  JSON object with information about a run
                properties:
                  MemberNames:
                    reasonCreated: ReasonCreated
                    reasonResolved: ReasonResolved
                    resolved: Resolved
                    runId: RunID
                    scheduled: Scheduled
                    started: Started
                    state: State
                    takenUntil: TakenUntil
                    workerGroup: WorkerGroup
                    workerId: WorkerID
                  Properties:
                    reasonCreated:
                      IS_REQUIRED: true
                      PROPERTY_NAME: reasonCreated
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
                      TYPE_NAME: ""
                      description: |
                        Reason for the creation of this run,
                        **more reasons may be added in the future**.
                      enum:
                      - scheduled
                      - retry
                      - task-retry
                      - rerun
                      - exception
                      title: Reason Created
                      type: string
                    reasonResolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: reasonResolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
                      TYPE_NAME: ""
                      description: |
                        Reason that run was resolved, this is mainly
                        useful for runs resolved as `exception`.
                        Note, **more reasons may be added in the future**, also this
                        property is only available after the run is resolved. Some of these
                        reasons, notably `intermittent-task`, `worker-shutdown`, and
                        `claim-expired`, will trigger an automatic retry of the task.
                      enum:
                      - completed
                      - failed
                      - deadline-exceeded
                      - canceled
                      - superseded
                      - claim-expired
                      - worker-shutdown
                      - malformed-payload
                      - resource-unavailable
                      - internal-error
                      - intermittent-task
                      title: Reason Resolved
                      type: string
                    resolved:
                      IS_REQUIRED: false
                      PROPERTY_NAME: resolved
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was resolved, ie. when the run changed
                        state from `running` to either `completed`, `failed` or `exception`.
                        This property is only present after the run as been resolved.
                      format: date-time
                      title: Resolved
                      type: string
                    runId:
                      IS_REQUIRED: true
                      PROPERTY_NAME: runId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
                      TYPE_NAME: ""
                      description: |
                        Id of this task run, `run-id`s always starts from `0`
                      maximum: 1000
                      minimum: 0
                      title: Run Identifier
                      type: integer
                    scheduled:
                      IS_REQUIRED: true
                      PROPERTY_NAME: scheduled
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was scheduled, ie. when the run was
                        created in state `pending`.
                      format: date-time
                      title: Scheduled
                      type: string
                    started:
                      IS_REQUIRED: false
                      PROPERTY_NAME: started
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
                      TYPE_NAME: ""
                      description: |
                        Date-time at which this run was claimed, ie. when the run changed
                        state from `pending` to `running`. This property is only present
                        after the run has been claimed.
                      format: date-time
                      title: Started
                      type: string
                    state:
                      IS_REQUIRED: true
                      PROPERTY_NAME: state
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
                      TYPE_NAME: ""
                      description: |
                        State of this run
                      enum:
                      - pending
                      - running
                      - completed
                      - failed
                      - exception
                      title: Run State
                      type: string
                    takenUntil:
                      IS_REQUIRED: false
                      PROPERTY_NAME: takenUntil
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
                      TYPE_NAME: ""
                      description: |
                        Time at which the run expires and is resolved as `failed`, if the
                        run isn't reclaimed. Note, only present after the run has been
                        claimed.
                      format: date-time
                      title: Taken Until
                      type: string
                    workerGroup:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerGroup
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
                      TYPE_NAME: ""
                      description: |
                        Identifier for group that worker who executes this run is a part of,
                        this identifier is mainly used for efficient routing.
                        Note, this property is only present after the run is claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Group
                      type: string
                    workerId:
                      IS_REQUIRED: false
                      PROPERTY_NAME: workerId
                      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
                      TYPE_NAME: ""
                      description: |
                        Identifier for worker evaluating this run within given
                        `workerGroup`. Note, this property is only available after the run
                        has been claimed.
                      maxLength: 38
                      minLength: 1
                      pattern: ^([a-zA-Z0-9-_]*)$
                      title: Worker Identifier
                      type: string
                  SortedPropertyNames:
                  - reasonCreated
                  - reasonResolved
                  - resolved
                  - runId
                  - scheduled
                  - started
                  - state
                  - takenUntil
                  - workerGroup
                  - workerId
                  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
                required:
                - runId
                - state
                - reasonCreated
                - scheduled
                title: Run Information
                type: object
              title: List of Runs
              type: array
              uniqueItems: true
            schedulerId:
              $ref: task.json#/properties/schedulerId
              IS_REQUIRED: true
              PROPERTY_NAME: schedulerId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: schedulerId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
                TYPE_NAME: ""
                default: '-'
                description: |
                  All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

                  * it can represent the entity that created the task;
                  * it can limit addition of new tasks to a task group: the caller of
                      `createTask` must have a scope related to the `schedulerId` of the task
                      group;
                  * it controls who can manipulate tasks, again by requiring
                      `schedulerId`-related scopes; and
                  * it appears in the routing key for Pulse messages about the task.
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Scheduler Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
              TYPE_NAME: ""
              default: '-'
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
              TYPE_NAME: ""
              description: |
                State of this task. This is just an auxiliary property derived from state
                of latests run, or `unscheduled` if none.
              enum:
              - unscheduled
              - pending
              - running
              - completed
              - failed
              - exception
              title: State
              type: string
            taskGroupId:
              $ref: task.json#/properties/taskGroupId
              IS_REQUIRED: true
              PROPERTY_NAME: taskGroupId
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: taskGroupId
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
                TYPE_NAME: ""
                description: |
                  Identifier for a group of tasks scheduled together with this task.
                  Generally, all tasks related to a single event such as a version-control
                  push or a nightly build have the same `taskGroupId`.  This property
                  defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
                  the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
                  decision tasks.
                pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
                title: Task-Group Identifier
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
              TYPE_NAME: ""
            taskId:
              IS_REQUIRED: true
              PROPERTY_NAME: taskId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
              TYPE_NAME: ""
              description: |
                Unique task identifier, this is UUID encoded as
                [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
                stripped of `=` padding.
              pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
              title: Task Identifier
              type: string
            workerType:
              $ref: task.json#/properties/workerType
              IS_REQUIRED: true
              PROPERTY_NAME: workerType
              REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
              REF_SUBSCHEMA:
                IS_REQUIRED: true
                PROPERTY_NAME: workerType
                SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
                TYPE_NAME: ""
                description: |
                  Unique identifier for a worker-type within a specific provisioner
                maxLength: 38
                minLength: 1
                pattern: ^([a-zA-Z0-9-_]*)$
                title: Worker Type
                type: string
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
              TYPE_NAME: ""
          SortedPropertyNames:
          - deadline
          - expires
          - provisionerId
          - retriesLeft
          - runs
          - schedulerId
          - state
          - taskGroupId
          - taskId
          - workerType
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
        required:
        - taskId
        - provisionerId
        - workerType
        - schedulerId
        - taskGroupId
        - deadline
        - expires
        - retriesLeft
        - state
        - runs
        title: Task Status Structure
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#/properties/status
      TYPE_NAME: ""
    takenUntil:
      IS_REQUIRED: true
      PROPERTY_NAME: takenUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#/properties/takenUntil
      TYPE_NAME: ""
      description: |
        Time at which the run expires and is resolved as `failed`, if the run
        isn't reclaimed.
      format: date-time
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
    workerGroup:
      IS_REQUIRED: true
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for the worker-group within which this run started.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
    workerId:
      IS_REQUIRED: true
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for the worker executing this run.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      type: string
  SortedPropertyNames:
  - runId
  - status
  - takenUntil
  - version
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-running-message.json#/properties
required:
- version
- status
- runId
- workerGroup
- workerId
- takenUntil
title: Task Running Message
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
==================================================================
$id: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#
TYPE_NAME: TaskStatusStructure
additionalProperties:
  Boolean: false
  Properties: null
description: |
  A representation of **task status** as known by the queue
properties:
  MemberNames:
    deadline: Deadline
    expires: Expires
    provisionerId: ProvisionerID
    retriesLeft: RetriesLeft
    runs: Runs
    schedulerId: SchedulerID
    state: State
    taskGroupId: TaskGroupID
    taskId: TaskID
    workerType: WorkerType
  Properties:
    deadline:
      IS_REQUIRED: true
      PROPERTY_NAME: deadline
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/deadline
      TYPE_NAME: ""
      description: |
        Deadline of the task, `pending` and `running` runs are
        resolved as **exception** if not resolved by other means
        before the deadline. Note, deadline cannot be more than
        5 days into the future
      format: date-time
      title: Deadline
      type: string
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/expires
      TYPE_NAME: ""
      description: |
        Task expiration, time at which task definition and
        status is deleted. Notice that all artifacts for the task
        must have an expiration that is no later than this.
      format: date-time
      title: Expiration
      type: string
    provisionerId:
      $ref: task.json#/properties/provisionerId
      IS_REQUIRED: true
      PROPERTY_NAME: provisionerId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: provisionerId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/provisionerId
        TYPE_NAME: ""
        description: |
          Unique identifier for a provisioner, that can supply specified
          `workerType`
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Provisioner Id
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/provisionerId
      TYPE_NAME: ""
    retriesLeft:
      IS_REQUIRED: true
      PROPERTY_NAME: retriesLeft
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/retriesLeft
      TYPE_NAME: ""
      description: |
        Number of retries left for the task in case of infrastructure issues
      maximum: 999
      minimum: 0
      title: Retries Left
      type: integer
    runs:
      IS_REQUIRED: true
      PROPERTY_NAME: runs
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs
      TYPE_NAME: ""
      description: |
        List of runs, ordered so that index `i` has `runId == i`
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
        TYPE_NAME: RunInformation
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          JSON object with information about a run
        properties:
          MemberNames:
            reasonCreated: ReasonCreated
            reasonResolved: ReasonResolved
            resolved: Resolved
            runId: RunID
            scheduled: Scheduled
            started: Started
            state: State
            takenUntil: TakenUntil
            workerGroup: WorkerGroup
            workerId: WorkerID
          Properties:
            reasonCreated:
              IS_REQUIRED: true
              PROPERTY_NAME: reasonCreated
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
              TYPE_NAME: ""
              description: |
                Reason for the creation of this run,
                **more reasons may be added in the future**.
              enum:
              - scheduled
              - retry
              - task-retry
              - rerun
              - exception
              title: Reason Created
              type: string
            reasonResolved:
              IS_REQUIRED: false
              PROPERTY_NAME: reasonResolved
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
              TYPE_NAME: ""
              description: |
                Reason that run was resolved, this is mainly
                useful for runs resolved as `exception`.
                Note, **more reasons may be added in the future**, also this
                property is only available after the run is resolved. Some of these
                reasons, notably `intermittent-task`, `worker-shutdown`, and
                `claim-expired`, will trigger an automatic retry of the task.
              enum:
              - completed
              - failed
              - deadline-exceeded
              - canceled
              - superseded
              - claim-expired
              - worker-shutdown
              - malformed-payload
              - resource-unavailable
              - internal-error
              - intermittent-task
              title: Reason Resolved
              type: string
            resolved:
              IS_REQUIRED: false
              PROPERTY_NAME: resolved
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
              TYPE_NAME: ""
              description: |
                Date-time at which this run was resolved, ie. when the run changed
                state from `running` to either `completed`, `failed` or `exception`.
                This property is only present after the run as been resolved.
              format: date-time
              title: Resolved
              type: string
            runId:
              IS_REQUIRED: true
              PROPERTY_NAME: runId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
              TYPE_NAME: ""
              description: |
                Id of this task run, `run-id`s always starts from `0`
              maximum: 1000
              minimum: 0
              title: Run Identifier
              type: integer
            scheduled:
              IS_REQUIRED: true
              PROPERTY_NAME: scheduled
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
              TYPE_NAME: ""
              description: |
                Date-time at which this run was scheduled, ie. when the run was
                created in state `pending`.
              format: date-time
              title: Scheduled
              type: string
            started:
              IS_REQUIRED: false
              PROPERTY_NAME: started
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
              TYPE_NAME: ""
              description: |
                Date-time at which this run was claimed, ie. when the run changed
                state from `pending` to `running`. This property is only present
                after the run has been claimed.
              format: date-time
              title: Started
              type: string
            state:
              IS_REQUIRED: true
              PROPERTY_NAME: state
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
              TYPE_NAME: ""
              description: |
                State of this run
              enum:
              - pending
              - running
              - completed
              - failed
              - exception
              title: Run State
              type: string
            takenUntil:
              IS_REQUIRED: false
              PROPERTY_NAME: takenUntil
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
              TYPE_NAME: ""
              description: |
                Time at which the run expires and is resolved as `failed`, if the
                run isn't reclaimed. Note, only present after the run has been
                claimed.
              format: date-time
              title: Taken Until
              type: string
            workerGroup:
              IS_REQUIRED: false
              PROPERTY_NAME: workerGroup
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
              TYPE_NAME: ""
              description: |
                Identifier for group that worker who executes this run is a part of,
                this identifier is mainly used for efficient routing.
                Note, this property is only present after the run is claimed.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Group
              type: string
            workerId:
              IS_REQUIRED: false
              PROPERTY_NAME: workerId
              SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
              TYPE_NAME: ""
              description: |
                Identifier for worker evaluating this run within given
                `workerGroup`. Note, this property is only available after the run
                has been claimed.
              maxLength: 38
              minLength: 1
              pattern: ^([a-zA-Z0-9-_]*)$
              title: Worker Identifier
              type: string
          SortedPropertyNames:
          - reasonCreated
          - reasonResolved
          - resolved
          - runId
          - scheduled
          - started
          - state
          - takenUntil
          - workerGroup
          - workerId
          SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
        required:
        - runId
        - state
        - reasonCreated
        - scheduled
        title: Run Information
        type: object
      title: List of Runs
      type: array
      uniqueItems: true
    schedulerId:
      $ref: task.json#/properties/schedulerId
      IS_REQUIRED: true
      PROPERTY_NAME: schedulerId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: schedulerId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/schedulerId
        TYPE_NAME: ""
        default: '-'
        description: |
          All tasks in a task group must have the same `schedulerId`. This is used for several purposes:

          * it can represent the entity that created the task;
          * it can limit addition of new tasks to a task group: the caller of
              `createTask` must have a scope related to the `schedulerId` of the task
              group;
          * it controls who can manipulate tasks, again by requiring
              `schedulerId`-related scopes; and
          * it appears in the routing key for Pulse messages about the task.
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Scheduler Identifier
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/schedulerId
      TYPE_NAME: ""
      default: '-'
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/state
      TYPE_NAME: ""
      description: |
        State of this task. This is just an auxiliary property derived from state
        of latests run, or `unscheduled` if none.
      enum:
      - unscheduled
      - pending
      - running
      - completed
      - failed
      - exception
      title: State
      type: string
    taskGroupId:
      $ref: task.json#/properties/taskGroupId
      IS_REQUIRED: true
      PROPERTY_NAME: taskGroupId
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: taskGroupId
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/taskGroupId
        TYPE_NAME: ""
        description: |
          Identifier for a group of tasks scheduled together with this task.
          Generally, all tasks related to a single event such as a version-control
          push or a nightly build have the same `taskGroupId`.  This property
          defaults to `taskId` if it isn't specified.  Tasks with `taskId` equal to
          the `taskGroupId` are, [by convention](/docs/manual/using/task-graph),
          decision tasks.
        pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
        title: Task-Group Identifier
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskGroupId
      TYPE_NAME: ""
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/taskId
      TYPE_NAME: ""
      description: |
        Unique task identifier, this is UUID encoded as
        [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and
        stripped of `=` padding.
      pattern: ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
      title: Task Identifier
      type: string
    workerType:
      $ref: task.json#/properties/workerType
      IS_REQUIRED: true
      PROPERTY_NAME: workerType
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
      REF_SUBSCHEMA:
        IS_REQUIRED: true
        PROPERTY_NAME: workerType
        SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task.json#/properties/workerType
        TYPE_NAME: ""
        description: |
          Unique identifier for a worker-type within a specific provisioner
        maxLength: 38
        minLength: 1
        pattern: ^([a-zA-Z0-9-_]*)$
        title: Worker Type
        type: string
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/workerType
      TYPE_NAME: ""
  SortedPropertyNames:
  - deadline
  - expires
  - provisionerId
  - retriesLeft
  - runs
  - schedulerId
  - state
  - taskGroupId
  - taskId
  - workerType
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties
required:
- taskId
- provisionerId
- workerType
- schedulerId
- taskGroupId
- deadline
- expires
- retriesLeft
- state
- runs
title: Task Status Structure
type: object


https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
========================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items
TYPE_NAME: RunInformation
additionalProperties:
  Boolean: false
  Properties: null
description: |
  JSON object with information about a run
properties:
  MemberNames:
    reasonCreated: ReasonCreated
    reasonResolved: ReasonResolved
    resolved: Resolved
    runId: RunID
    scheduled: Scheduled
    started: Started
    state: State
    takenUntil: TakenUntil
    workerGroup: WorkerGroup
    workerId: WorkerID
  Properties:
    reasonCreated:
      IS_REQUIRED: true
      PROPERTY_NAME: reasonCreated
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonCreated
      TYPE_NAME: ""
      description: |
        Reason for the creation of this run,
        **more reasons may be added in the future**.
      enum:
      - scheduled
      - retry
      - task-retry
      - rerun
      - exception
      title: Reason Created
      type: string
    reasonResolved:
      IS_REQUIRED: false
      PROPERTY_NAME: reasonResolved
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/reasonResolved
      TYPE_NAME: ""
      description: |
        Reason that run was resolved, this is mainly
        useful for runs resolved as `exception`.
        Note, **more reasons may be added in the future**, also this
        property is only available after the run is resolved. Some of these
        reasons, notably `intermittent-task`, `worker-shutdown`, and
        `claim-expired`, will trigger an automatic retry of the task.
      enum:
      - completed
      - failed
      - deadline-exceeded
      - canceled
      - superseded
      - claim-expired
      - worker-shutdown
      - malformed-payload
      - resource-unavailable
      - internal-error
      - intermittent-task
      title: Reason Resolved
      type: string
    resolved:
      IS_REQUIRED: false
      PROPERTY_NAME: resolved
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/resolved
      TYPE_NAME: ""
      description: |
        Date-time at which this run was resolved, ie. when the run changed
        state from `running` to either `completed`, `failed` or `exception`.
        This property is only present after the run as been resolved.
      format: date-time
      title: Resolved
      type: string
    runId:
      IS_REQUIRED: true
      PROPERTY_NAME: runId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/runId
      TYPE_NAME: ""
      description: |
        Id of this task run, `run-id`s always starts from `0`
      maximum: 1000
      minimum: 0
      title: Run Identifier
      type: integer
    scheduled:
      IS_REQUIRED: true
      PROPERTY_NAME: scheduled
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/scheduled
      TYPE_NAME: ""
      description: |
        Date-time at which this run was scheduled, ie. when the run was
        created in state `pending`.
      format: date-time
      title: Scheduled
      type: string
    started:
      IS_REQUIRED: false
      PROPERTY_NAME: started
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/started
      TYPE_NAME: ""
      description: |
        Date-time at which this run was claimed, ie. when the run changed
        state from `pending` to `running`. This property is only present
        after the run has been claimed.
      format: date-time
      title: Started
      type: string
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/state
      TYPE_NAME: ""
      description: |
        State of this run
      enum:
      - pending
      - running
      - completed
      - failed
      - exception
      title: Run State
      type: string
    takenUntil:
      IS_REQUIRED: false
      PROPERTY_NAME: takenUntil
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/takenUntil
      TYPE_NAME: ""
      description: |
        Time at which the run expires and is resolved as `failed`, if the
        run isn't reclaimed. Note, only present after the run has been
        claimed.
      format: date-time
      title: Taken Until
      type: string
    workerGroup:
      IS_REQUIRED: false
      PROPERTY_NAME: workerGroup
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerGroup
      TYPE_NAME: ""
      description: |
        Identifier for group that worker who executes this run is a part of,
        this identifier is mainly used for efficient routing.
        Note, this property is only present after the run is claimed.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Group
      type: string
    workerId:
      IS_REQUIRED: false
      PROPERTY_NAME: workerId
      SOURCE_URL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties/workerId
      TYPE_NAME: ""
      description: |
        Identifier for worker evaluating this run within given
        `workerGroup`. Note, this property is only available after the run
        has been claimed.
      maxLength: 38
      minLength: 1
      pattern: ^([a-zA-Z0-9-_]*)$
      title: Worker Identifier
      type: string
  SortedPropertyNames:
  - reasonCreated
  - reasonResolved
  - resolved
  - runId
  - scheduled
  - started
  - state
  - takenUntil
  - workerGroup
  - workerId
  SourceURL: https://taskcluster-staging.net/schemas/queue/v1/task-status.json#/properties/runs/items/properties
required:
- runId
- state
- reasonCreated
- scheduled
title: Run Information
type: object


https://taskcluster-staging.net/references/secrets/v1/api.json
==============================================================
Schema      = 'https://taskcluster-staging.net/schemas/common/api-reference-v0.json#'
Title       = 'Taskcluster Secrets API Documentation'
Description = 'The secrets service provides a simple key/value store for small bits of secret
data.  Access is limited by scopes, so values can be considered secret from
those who do not have the relevant scopes.

Secrets also have an expiration date, and once a secret has expired it can no
longer be read.  This is useful for short-term secrets such as a temporary
service credential or a one-time signing key.'
Entry 0     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/ping'
    Entry Args        = '[]'
    Entry Query        = '[]'
    Entry Name        = 'ping'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Ping Server'
    Entry Description = 'Respond without doing anything.
This endpoint is used to check that the service is up.'
Entry 1     =
    Entry Type        = 'function'
    Entry Method      = 'put'
    Entry Route       = '/secret/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'set'
    Entry Stability   = 'stable'
    Entry Scopes      = 'secrets:set:<name>'
    Entry Input       = 'v1/secret.json#'
    Entry InputURL    = 'https://taskcluster-staging.net/schemas/secrets/v1/secret.json#'
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Set Secret'
    Entry Description = 'Set the secret associated with some key.  If the secret already exists, it is
updated instead.'
Entry 2     =
    Entry Type        = 'function'
    Entry Method      = 'delete'
    Entry Route       = '/secret/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'remove'
    Entry Stability   = 'stable'
    Entry Scopes      = 'secrets:set:<name>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = ''
    Entry OutputURL   = ''
    Entry Title       = 'Delete Secret'
    Entry Description = 'Delete the secret associated with some key.'
Entry 3     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/secret/<name>'
    Entry Args        = '[name]'
    Entry Query        = '[]'
    Entry Name        = 'get'
    Entry Stability   = 'stable'
    Entry Scopes      = 'secrets:get:<name>'
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/secret.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/secrets/v1/secret.json#'
    Entry Title       = 'Read Secret'
    Entry Description = 'Read the secret associated with some key.  If the secret has recently
expired, the response code 410 is returned.  If the caller lacks the
scope necessary to get the secret, the call will fail with a 403 code
regardless of whether the secret exists.'
Entry 4     =
    Entry Type        = 'function'
    Entry Method      = 'get'
    Entry Route       = '/secrets'
    Entry Args        = '[]'
    Entry Query        = '[continuationToken limit]'
    Entry Name        = 'list'
    Entry Stability   = 'stable'
    Entry Scopes      = ''
    Entry Input       = ''
    Entry InputURL    = ''
    Entry Output      = 'v1/secret-list.json#'
    Entry OutputURL   = 'https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#'
    Entry Title       = 'List Secrets'
    Entry Description = 'List the names of all secrets.

By default this end-point will try to return up to 1000 secret names in one
request. But it **may return less**, even if more tasks are available.
It may also return a `continuationToken` even though there are no more
results. However, you can only be sure to have seen all results if you
keep calling `listTaskGroup` with the last `continuationToken` until you
get a result without a `continuationToken`.

If you are not interested in listing all the members at once, you may
use the query-string option `limit` to return fewer.'


https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#
====================================================================
$id: https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#
TYPE_NAME: SecretsList
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message containing a list of secret names
properties:
  MemberNames:
    continuationToken: ContinuationToken
    secrets: Secrets
  Properties:
    continuationToken:
      IS_REQUIRED: false
      PROPERTY_NAME: continuationToken
      SOURCE_URL: https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#/properties/continuationToken
      TYPE_NAME: ""
      description: |
        Opaque `continuationToken` to be given as query-string option to get the
        next set of provisioners.
        This property is only present if another request is necessary to fetch all
        results. In practice the next request with a `continuationToken` may not
        return additional results, but it can. Thus, you can only be sure to have
        all the results if you've called with `continuationToken` until you get a
        result without a `continuationToken`.
      title: Continuation Token
      type: string
    secrets:
      IS_REQUIRED: true
      PROPERTY_NAME: secrets
      SOURCE_URL: https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#/properties/secrets
      TYPE_NAME: ""
      description: Secret names
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#/properties/secrets/items
        TYPE_NAME: ""
        description: Secret name
        title: Secret
        type: string
      type: array
      uniqueItems: true
  SortedPropertyNames:
  - continuationToken
  - secrets
  SourceURL: https://taskcluster-staging.net/schemas/secrets/v1/secret-list.json#/properties
required:
- secrets
title: Secrets List
type: object


https://taskcluster-staging.net/schemas/secrets/v1/secret.json#
===============================================================
$id: https://taskcluster-staging.net/schemas/secrets/v1/secret.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/secrets/v1/secret.json#
TYPE_NAME: Secret
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Message containing a Taskcluster Secret
properties:
  MemberNames:
    expires: Expires
    secret: Secret
  Properties:
    expires:
      IS_REQUIRED: true
      PROPERTY_NAME: expires
      SOURCE_URL: https://taskcluster-staging.net/schemas/secrets/v1/secret.json#/properties/expires
      TYPE_NAME: ""
      description: |
        An expiration date for this secret.
      format: date-time
      type: string
    secret:
      IS_REQUIRED: true
      PROPERTY_NAME: secret
      SOURCE_URL: https://taskcluster-staging.net/schemas/secrets/v1/secret.json#/properties/secret
      TYPE_NAME: ""
      description: |
        The secret value to be encrypted.
      type: object
  SortedPropertyNames:
  - expires
  - secret
  SourceURL: https://taskcluster-staging.net/schemas/secrets/v1/secret.json#/properties
required:
- secret
- expires
title: Secret
type: object


https://taskcluster-staging.net/references/treeherder/v1/exchanges.json
=======================================================================
Version         = 'v1'
Schema          = 'https://taskcluster-staging.net/schemas/common/exchanges-reference-v0.json#'
Title           = 'Taskcluster-treeherder Pulse Exchange'
Description     = 'The taskcluster-treeherder service is responsible for processing
task events published by Taskcluster Queue and producing job messages
that are consumable by Treeherder.

This exchange provides that job messages to be consumed by any queue that
attached to the exchange.  This could be a production Treeheder instance,
a local development environment, or a custom dashboard.'
Exchange Prefix = 'exchange/taskcluster-treeherder/v1/'
Entry 0     = 
    Entry Type        = 'topic-exchange'
    Entry Exchange    = 'jobs'
    Entry Name        = 'jobs'
    Entry Title       = 'Job Messages'
    Entry Description = 'When a task run is scheduled or resolved, a message is posted to
this exchange in a Treeherder consumable format.'
    Routing Key Element 0     = 
        Element Name      = 'destination'
        Element Summary   = 'destination'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 1     = 
        Element Name      = 'project'
        Element Summary   = 'project'
        Element Constant  = ''
        Element M Words   = 'false'
        Element Required  = 'true'
    Routing Key Element 2     = 
        Element Name      = 'reserved'
        Element Summary   = 'Space reserved for future routing-key entries, you should always match this entry with `#`. As automatically done by our tooling, if not specified.'
        Element Constant  = ''
        Element M Words   = 'true'
        Element Required  = 'false'
    Entry Schema      = 'v1/pulse-job.json#'
    Entry SchemaURL   = 'https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#'


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#
=====================================================================
$id: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#
$schema: https://taskcluster-staging.net/schemas/common/metaschema.json#
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#
TYPE_NAME: JobDefinition
additionalProperties:
  Boolean: false
  Properties: null
definitions:
  MemberNames:
    machine: Machine
  Properties:
    machine:
      IS_REQUIRED: false
      PROPERTY_NAME: machine
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine
      TYPE_NAME: Machine
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          architecture: Architecture
          name: Name
          os: OS
          platform: Platform
        Properties:
          architecture:
            IS_REQUIRED: true
            PROPERTY_NAME: architecture
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
            TYPE_NAME: ""
            maxLength: 25
            minLength: 1
            pattern: ^[\w-]+$
            type: string
          name:
            IS_REQUIRED: false
            PROPERTY_NAME: name
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/name
            TYPE_NAME: ""
            maxLength: 50
            minLength: 1
            pattern: ^[\w-]+$
            type: string
          os:
            IS_REQUIRED: true
            PROPERTY_NAME: os
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/os
            TYPE_NAME: ""
            maxLength: 25
            minLength: 1
            pattern: ^[\w-]+$
            type: string
          platform:
            IS_REQUIRED: true
            PROPERTY_NAME: platform
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
            TYPE_NAME: ""
            maxLength: 100
            minLength: 1
            pattern: ^[\w-]+$
            type: string
        SortedPropertyNames:
        - architecture
        - name
        - os
        - platform
        SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties
      required:
      - platform
      - os
      - architecture
      type: object
  SortedPropertyNames:
  - machine
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions
description: |
  Definition of a single job that can be added to Treeherder
  Project is determined by the routing key, so we don't need to specify it here.
properties:
  MemberNames:
    buildMachine: BuildMachine
    buildSystem: BuildSystem
    coalesced: Coalesced
    display: Display
    extra: Extra
    isRetried: IsRetried
    jobInfo: JobInfo
    jobKind: JobKind
    labels: Labels
    logs: Logs
    origin: Origin
    owner: Owner
    productName: ProductName
    reason: Reason
    result: Result
    retryId: RetryID
    runMachine: RunMachine
    state: State
    taskId: TaskID
    tier: Tier
    timeCompleted: TimeCompleted
    timeScheduled: TimeScheduled
    timeStarted: TimeStarted
    version: Version
  Properties:
    buildMachine:
      $ref: '#/definitions/machine'
      IS_REQUIRED: false
      PROPERTY_NAME: buildMachine
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: machine
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine
        TYPE_NAME: Machine
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            architecture: Architecture
            name: Name
            os: OS
            platform: Platform
          Properties:
            architecture:
              IS_REQUIRED: true
              PROPERTY_NAME: architecture
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
              TYPE_NAME: ""
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            name:
              IS_REQUIRED: false
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/name
              TYPE_NAME: ""
              maxLength: 50
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            os:
              IS_REQUIRED: true
              PROPERTY_NAME: os
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/os
              TYPE_NAME: ""
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            platform:
              IS_REQUIRED: true
              PROPERTY_NAME: platform
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
              TYPE_NAME: ""
              maxLength: 100
              minLength: 1
              pattern: ^[\w-]+$
              type: string
          SortedPropertyNames:
          - architecture
          - name
          - os
          - platform
          SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties
        required:
        - platform
        - os
        - architecture
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/buildMachine
      TYPE_NAME: ""
    buildSystem:
      IS_REQUIRED: true
      PROPERTY_NAME: buildSystem
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/buildSystem
      TYPE_NAME: ""
      description: |
        The name of the build system that initiated this content.  Some examples
        are "buildbot" and "taskcluster".  But this could be any name.  This
        value will be used in the routing key for retriggering jobs in the
        publish-job-action task.
      maxLength: 25
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    coalesced:
      IS_REQUIRED: false
      PROPERTY_NAME: coalesced
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/coalesced
      TYPE_NAME: ""
      description: The job guids that were coalesced to this job.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/coalesced/items
        TYPE_NAME: ""
        maxLength: 50
        minLength: 1
        pattern: ^[\w/+-]+$
        title: Job GUID
        type: string
      title: Coalesced job GUID
      type: array
      uniqueItems: false
    display:
      IS_REQUIRED: true
      PROPERTY_NAME: display
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display
      TYPE_NAME: Display
      additionalProperties:
        Boolean: false
        Properties: null
      properties:
        MemberNames:
          chunkCount: ChunkCount
          chunkId: ChunkID
          groupName: GroupName
          groupSymbol: GroupSymbol
          jobName: JobName
          jobSymbol: JobSymbol
        Properties:
          chunkCount:
            IS_REQUIRED: false
            PROPERTY_NAME: chunkCount
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/chunkCount
            TYPE_NAME: ""
            minimum: 1
            title: Chunk Count
            type: integer
          chunkId:
            IS_REQUIRED: false
            PROPERTY_NAME: chunkId
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/chunkId
            TYPE_NAME: ""
            minimum: 1
            title: Chunk ID
            type: integer
          groupName:
            IS_REQUIRED: false
            PROPERTY_NAME: groupName
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/groupName
            TYPE_NAME: ""
            maxLength: 100
            minLength: 1
            title: Group Name
            type: string
          groupSymbol:
            IS_REQUIRED: true
            PROPERTY_NAME: groupSymbol
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/groupSymbol
            TYPE_NAME: ""
            maxLength: 25
            minLength: 1
            title: Group Symbol
            type: string
          jobName:
            IS_REQUIRED: true
            PROPERTY_NAME: jobName
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/jobName
            TYPE_NAME: ""
            maxLength: 100
            minLength: 1
            title: Job Name
            type: string
          jobSymbol:
            IS_REQUIRED: true
            PROPERTY_NAME: jobSymbol
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/jobSymbol
            TYPE_NAME: ""
            maxLength: 25
            minLength: 0
            title: Job Symbol
            type: string
        SortedPropertyNames:
        - chunkCount
        - chunkId
        - groupName
        - groupSymbol
        - jobName
        - jobSymbol
        SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties
      required:
      - jobName
      - jobSymbol
      - groupSymbol
      type: object
    extra:
      IS_REQUIRED: false
      PROPERTY_NAME: extra
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/extra
      TYPE_NAME: ""
      description: Extra information that Treeherder reads on a best-effort basis
      type: object
    isRetried:
      IS_REQUIRED: false
      PROPERTY_NAME: isRetried
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/isRetried
      TYPE_NAME: ""
      description: True indicates this job has been retried.
      type: boolean
    jobInfo:
      IS_REQUIRED: false
      PROPERTY_NAME: jobInfo
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo
      TYPE_NAME: JobInfo
      additionalProperties:
        Boolean: false
        Properties: null
      description: |
        Definition of the Job Info for a job.  These are extra data
        fields that go along with a job that will be displayed in
        the details panel within Treeherder.
      properties:
        MemberNames:
          links: Links
          summary: Summary
        Properties:
          links:
            IS_REQUIRED: true
            PROPERTY_NAME: links
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links
            TYPE_NAME: ""
            items:
              IS_REQUIRED: false
              PROPERTY_NAME: ""
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items
              TYPE_NAME: Link
              additionalProperties:
                Boolean: false
                Properties: null
              description: |
                List of URLs shown as key/value pairs.  Shown as:
                "<label>: <linkText>" where linkText will be a link to the url.
              properties:
                MemberNames:
                  label: Label
                  linkText: LinkText
                  url: URL
                Properties:
                  label:
                    IS_REQUIRED: true
                    PROPERTY_NAME: label
                    SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/label
                    TYPE_NAME: ""
                    maxLength: 70
                    minLength: 1
                    type: string
                  linkText:
                    IS_REQUIRED: true
                    PROPERTY_NAME: linkText
                    SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/linkText
                    TYPE_NAME: ""
                    maxLength: 125
                    minLength: 1
                    type: string
                  url:
                    IS_REQUIRED: true
                    PROPERTY_NAME: url
                    SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/url
                    TYPE_NAME: ""
                    format: uri
                    maxLength: 512
                    type: string
                SortedPropertyNames:
                - label
                - linkText
                - url
                SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties
              required:
              - url
              - linkText
              - label
              title: Link
              type: object
            type: array
            uniqueItems: false
          summary:
            IS_REQUIRED: true
            PROPERTY_NAME: summary
            SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/summary
            TYPE_NAME: ""
            description: |
              Plain text description of the job and its state.  Submitted with
              the final message about a task.
            type: string
        SortedPropertyNames:
        - links
        - summary
        SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties
      required:
      - summary
      - links
      type: object
    jobKind:
      IS_REQUIRED: true
      PROPERTY_NAME: jobKind
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobKind
      TYPE_NAME: ""
      default: other
      enum:
      - build
      - test
      - other
      type: string
    labels:
      IS_REQUIRED: false
      PROPERTY_NAME: labels
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/labels
      TYPE_NAME: ""
      description: |
        Labels are a dimension of a platform.  The values here can vary wildly,
        so most strings are valid for this.  The list of labels that are used
        is maleable going forward.

        These were formerly known as "Options" within "Option Collections" but
        calling labels now so they can be understood to be just strings that
        denotes a characteristic of the job.

        Some examples of labels that have been used:
          opt    Optimize Compiler GCC optimize flags
          debug  Debug flags passed in
          pgo    Profile Guided Optimization - Like opt, but runs with profiling, then builds again using that profiling
          asan   Address Sanitizer
          tsan   Thread Sanitizer Build
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/labels/items
        TYPE_NAME: ""
        maxLength: 50
        minLength: 1
        pattern: ^[\w-]+$
        title: Label
        type: string
      title: Labels
      type: array
      uniqueItems: false
    logs:
      IS_REQUIRED: false
      PROPERTY_NAME: logs
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items
        TYPE_NAME: Log
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            errorsTruncated: ErrorsTruncated
            name: Name
            steps: Steps
            url: URL
          Properties:
            errorsTruncated:
              IS_REQUIRED: false
              PROPERTY_NAME: errorsTruncated
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/errorsTruncated
              TYPE_NAME: ""
              description: |
                If true, indicates that the number of errors in the log was too
                large and not all of those lines are indicated here.
              type: boolean
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/name
              TYPE_NAME: ""
              maxLength: 50
              minLength: 1
              type: string
            steps:
              IS_REQUIRED: false
              PROPERTY_NAME: steps
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps
              TYPE_NAME: ""
              description: |
                This object defines what is seen in the Treeherder Log Viewer.
                These values can be submitted here, or they will be generated
                by Treeherder's internal log parsing process from the
                submitted log.  If this value is submitted, Treeherder will
                consider the log already parsed and skip parsing.
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items
                TYPE_NAME: Step
                additionalProperties:
                  Boolean: false
                  Properties: null
                properties:
                  MemberNames:
                    errors: Errors
                    lineFinished: LineFinished
                    lineStarted: LineStarted
                    name: Name
                    result: Result
                    timeFinished: TimeFinished
                    timeStarted: TimeStarted
                  Properties:
                    errors:
                      IS_REQUIRED: false
                      PROPERTY_NAME: errors
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors
                      TYPE_NAME: ""
                      items:
                        IS_REQUIRED: false
                        PROPERTY_NAME: ""
                        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items
                        TYPE_NAME: Error
                        additionalProperties:
                          Boolean: false
                          Properties: null
                        properties:
                          MemberNames:
                            line: Line
                            linenumber: Linenumber
                          Properties:
                            line:
                              IS_REQUIRED: true
                              PROPERTY_NAME: line
                              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/line
                              TYPE_NAME: ""
                              maxLength: 255
                              minLength: 1
                              type: string
                            linenumber:
                              IS_REQUIRED: true
                              PROPERTY_NAME: linenumber
                              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/linenumber
                              TYPE_NAME: ""
                              minimum: 0
                              type: integer
                          SortedPropertyNames:
                          - line
                          - linenumber
                          SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties
                        required:
                        - line
                        - linenumber
                        title: Error
                        type: object
                      type: array
                      uniqueItems: false
                    lineFinished:
                      IS_REQUIRED: true
                      PROPERTY_NAME: lineFinished
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineFinished
                      TYPE_NAME: ""
                      minimum: 0
                      type: integer
                    lineStarted:
                      IS_REQUIRED: true
                      PROPERTY_NAME: lineStarted
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineStarted
                      TYPE_NAME: ""
                      minimum: 0
                      type: integer
                    name:
                      IS_REQUIRED: true
                      PROPERTY_NAME: name
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/name
                      TYPE_NAME: ""
                      maxLength: 255
                      minLength: 1
                      type: string
                    result:
                      IS_REQUIRED: true
                      PROPERTY_NAME: result
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/result
                      TYPE_NAME: ""
                      enum:
                      - success
                      - fail
                      - exception
                      - canceled
                      - unknown
                      type: string
                    timeFinished:
                      IS_REQUIRED: true
                      PROPERTY_NAME: timeFinished
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeFinished
                      TYPE_NAME: ""
                      format: date-time
                      type: string
                    timeStarted:
                      IS_REQUIRED: true
                      PROPERTY_NAME: timeStarted
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeStarted
                      TYPE_NAME: ""
                      format: date-time
                      type: string
                  SortedPropertyNames:
                  - errors
                  - lineFinished
                  - lineStarted
                  - name
                  - result
                  - timeFinished
                  - timeStarted
                  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties
                required:
                - name
                - timeStarted
                - lineStarted
                - lineFinished
                - timeFinished
                - result
                title: Step
                type: object
              type: array
              uniqueItems: false
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/url
              TYPE_NAME: ""
              format: uri
              maxLength: 255
              minLength: 1
              type: string
          SortedPropertyNames:
          - errorsTruncated
          - name
          - steps
          - url
          SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties
        required:
        - url
        - name
        title: Log
        type: object
      type: array
      uniqueItems: false
    origin:
      IS_REQUIRED: true
      PROPERTY_NAME: origin
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin
      TYPE_NAME: ""
      oneOf:
        Items:
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]
          TYPE_NAME: HGPush
          additionalProperties:
            Boolean: false
            Properties: null
          description: |
            PREFERRED: An HG job that only has a revision.  This is for all
            jobs going forward.
          properties:
            MemberNames:
              kind: Kind
              project: Project
              pushLogID: PushLogID
              revision: Revision
            Properties:
              kind:
                IS_REQUIRED: true
                PROPERTY_NAME: kind
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/kind
                TYPE_NAME: ""
                enum:
                - hg.mozilla.org
                type: string
              project:
                IS_REQUIRED: true
                PROPERTY_NAME: project
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/project
                TYPE_NAME: ""
                maxLength: 50
                minLength: 1
                pattern: ^[\w-]+$
                type: string
              pushLogID:
                IS_REQUIRED: false
                PROPERTY_NAME: pushLogID
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/pushLogID
                TYPE_NAME: ""
                type: integer
              revision:
                IS_REQUIRED: true
                PROPERTY_NAME: revision
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/revision
                TYPE_NAME: ""
                maxLength: 40
                minLength: 40
                pattern: ^[0-9a-f]+$
                type: string
            SortedPropertyNames:
            - kind
            - project
            - pushLogID
            - revision
            SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties
          required:
          - kind
          - project
          - revision
          title: HG Push
          type: object
        - IS_REQUIRED: false
          PROPERTY_NAME: ""
          SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]
          TYPE_NAME: GithubPullRequest
          additionalProperties:
            Boolean: false
            Properties: null
          properties:
            MemberNames:
              kind: Kind
              owner: Owner
              project: Project
              pullRequestID: PullRequestID
              revision: Revision
            Properties:
              kind:
                IS_REQUIRED: true
                PROPERTY_NAME: kind
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/kind
                TYPE_NAME: ""
                enum:
                - github.com
                type: string
              owner:
                IS_REQUIRED: false
                PROPERTY_NAME: owner
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/owner
                TYPE_NAME: ""
                description: |
                  This could be the organization or the individual git username
                  depending on who owns the repo.
                maxLength: 50
                minLength: 1
                pattern: ^[\w-]+$
                type: string
              project:
                IS_REQUIRED: true
                PROPERTY_NAME: project
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/project
                TYPE_NAME: ""
                maxLength: 50
                minLength: 1
                pattern: ^[\w-]+$
                type: string
              pullRequestID:
                IS_REQUIRED: false
                PROPERTY_NAME: pullRequestID
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/pullRequestID
                TYPE_NAME: ""
                type: integer
              revision:
                IS_REQUIRED: true
                PROPERTY_NAME: revision
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/revision
                TYPE_NAME: ""
                maxLength: 40
                minLength: 40
                type: string
            SortedPropertyNames:
            - kind
            - owner
            - project
            - pullRequestID
            - revision
            SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties
          required:
          - kind
          - project
          - revision
          title: Github Pull Request
          type: object
        SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf
      type: object
    owner:
      IS_REQUIRED: false
      PROPERTY_NAME: owner
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/owner
      TYPE_NAME: ""
      description: |
        Description of who submitted the job: gaia | scheduler name | username | email
      maxLength: 50
      minLength: 1
      title: Owner
      type: string
    productName:
      IS_REQUIRED: false
      PROPERTY_NAME: productName
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/productName
      TYPE_NAME: ""
      description: |
        Examples include:
        -  'b2g'
        -  'firefox'
        -  'taskcluster'
        -  'xulrunner'
      maxLength: 125
      minLength: 1
      type: string
    reason:
      IS_REQUIRED: false
      PROPERTY_NAME: reason
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/reason
      TYPE_NAME: ""
      description: |
        Examples include:
        - scheduled
        - scheduler
        - Self-serve: Rebuilt by foo@example.com
        - Self-serve: Requested by foo@example.com
        - The Nightly scheduler named 'b2g_mozilla-inbound periodic' triggered this build
        - unknown
      maxLength: 125
      minLength: 1
      type: string
    result:
      IS_REQUIRED: false
      PROPERTY_NAME: result
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/result
      TYPE_NAME: ""
      description: |
        fail: A failure
        exception: An infrastructure error/exception
        success: Build/Test executed without error or failure
        canceled: The job was cancelled by a user
        unknown: When the job is not yet completed
        superseded: When a job has been superseded by another job
      enum:
      - success
      - fail
      - exception
      - canceled
      - superseded
      - unknown
      title: Result
      type: string
    retryId:
      IS_REQUIRED: false
      PROPERTY_NAME: retryId
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/retryId
      TYPE_NAME: ""
      default: 0
      description: |
        The infrastructure retry iteration on this job.  The number of times this
        job has been retried by the infrastructure.
        If it's the 1st time running, then it should be 0. If this is the first
        retry, it will be 1, etc.
      minimum: 0
      title: Retry ID
      type: integer
    runMachine:
      $ref: '#/definitions/machine'
      IS_REQUIRED: false
      PROPERTY_NAME: runMachine
      REF_SCHEMA_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine
      REF_SUBSCHEMA:
        IS_REQUIRED: false
        PROPERTY_NAME: machine
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine
        TYPE_NAME: Machine
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            architecture: Architecture
            name: Name
            os: OS
            platform: Platform
          Properties:
            architecture:
              IS_REQUIRED: true
              PROPERTY_NAME: architecture
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
              TYPE_NAME: ""
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            name:
              IS_REQUIRED: false
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/name
              TYPE_NAME: ""
              maxLength: 50
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            os:
              IS_REQUIRED: true
              PROPERTY_NAME: os
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/os
              TYPE_NAME: ""
              maxLength: 25
              minLength: 1
              pattern: ^[\w-]+$
              type: string
            platform:
              IS_REQUIRED: true
              PROPERTY_NAME: platform
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
              TYPE_NAME: ""
              maxLength: 100
              minLength: 1
              pattern: ^[\w-]+$
              type: string
          SortedPropertyNames:
          - architecture
          - name
          - os
          - platform
          SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties
        required:
        - platform
        - os
        - architecture
        type: object
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/runMachine
      TYPE_NAME: ""
    state:
      IS_REQUIRED: true
      PROPERTY_NAME: state
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/state
      TYPE_NAME: ""
      description: |
        unscheduled: not yet scheduled
        pending: not yet started
        running: currently in progress
        completed: Job ran through to completion
      enum:
      - unscheduled
      - pending
      - running
      - completed
      title: State
      type: string
    taskId:
      IS_REQUIRED: true
      PROPERTY_NAME: taskId
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/taskId
      TYPE_NAME: ""
      description: |
        This could just be what was formerly submitted as a job_guid in the
        REST API.
      maxLength: 50
      minLength: 1
      pattern: ^[A-Za-z0-9/+-]+$
      title: Task ID
      type: string
    tier:
      IS_REQUIRED: false
      PROPERTY_NAME: tier
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/tier
      TYPE_NAME: ""
      maximum: 3
      minimum: 1
      type: integer
    timeCompleted:
      IS_REQUIRED: false
      PROPERTY_NAME: timeCompleted
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/timeCompleted
      TYPE_NAME: ""
      format: date-time
      type: string
    timeScheduled:
      IS_REQUIRED: false
      PROPERTY_NAME: timeScheduled
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/timeScheduled
      TYPE_NAME: ""
      format: date-time
      type: string
    timeStarted:
      IS_REQUIRED: false
      PROPERTY_NAME: timeStarted
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/timeStarted
      TYPE_NAME: ""
      format: date-time
      type: string
    version:
      IS_REQUIRED: true
      PROPERTY_NAME: version
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/version
      TYPE_NAME: ""
      description: Message version
      enum:
      - 1
      type: integer
  SortedPropertyNames:
  - buildMachine
  - buildSystem
  - coalesced
  - display
  - extra
  - isRetried
  - jobInfo
  - jobKind
  - labels
  - logs
  - origin
  - owner
  - productName
  - reason
  - result
  - retryId
  - runMachine
  - state
  - taskId
  - tier
  - timeCompleted
  - timeScheduled
  - timeStarted
  - version
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties
required:
- taskId
- origin
- buildSystem
- display
- state
- jobKind
- version
title: Job Definition
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine
=========================================================================================
IS_REQUIRED: false
PROPERTY_NAME: machine
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine
TYPE_NAME: Machine
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    architecture: Architecture
    name: Name
    os: OS
    platform: Platform
  Properties:
    architecture:
      IS_REQUIRED: true
      PROPERTY_NAME: architecture
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/architecture
      TYPE_NAME: ""
      maxLength: 25
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    name:
      IS_REQUIRED: false
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/name
      TYPE_NAME: ""
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    os:
      IS_REQUIRED: true
      PROPERTY_NAME: os
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/os
      TYPE_NAME: ""
      maxLength: 25
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    platform:
      IS_REQUIRED: true
      PROPERTY_NAME: platform
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties/platform
      TYPE_NAME: ""
      maxLength: 100
      minLength: 1
      pattern: ^[\w-]+$
      type: string
  SortedPropertyNames:
  - architecture
  - name
  - os
  - platform
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/definitions/machine/properties
required:
- platform
- os
- architecture
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display
========================================================================================
IS_REQUIRED: true
PROPERTY_NAME: display
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display
TYPE_NAME: Display
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    chunkCount: ChunkCount
    chunkId: ChunkID
    groupName: GroupName
    groupSymbol: GroupSymbol
    jobName: JobName
    jobSymbol: JobSymbol
  Properties:
    chunkCount:
      IS_REQUIRED: false
      PROPERTY_NAME: chunkCount
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/chunkCount
      TYPE_NAME: ""
      minimum: 1
      title: Chunk Count
      type: integer
    chunkId:
      IS_REQUIRED: false
      PROPERTY_NAME: chunkId
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/chunkId
      TYPE_NAME: ""
      minimum: 1
      title: Chunk ID
      type: integer
    groupName:
      IS_REQUIRED: false
      PROPERTY_NAME: groupName
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/groupName
      TYPE_NAME: ""
      maxLength: 100
      minLength: 1
      title: Group Name
      type: string
    groupSymbol:
      IS_REQUIRED: true
      PROPERTY_NAME: groupSymbol
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/groupSymbol
      TYPE_NAME: ""
      maxLength: 25
      minLength: 1
      title: Group Symbol
      type: string
    jobName:
      IS_REQUIRED: true
      PROPERTY_NAME: jobName
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/jobName
      TYPE_NAME: ""
      maxLength: 100
      minLength: 1
      title: Job Name
      type: string
    jobSymbol:
      IS_REQUIRED: true
      PROPERTY_NAME: jobSymbol
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties/jobSymbol
      TYPE_NAME: ""
      maxLength: 25
      minLength: 0
      title: Job Symbol
      type: string
  SortedPropertyNames:
  - chunkCount
  - chunkId
  - groupName
  - groupSymbol
  - jobName
  - jobSymbol
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/display/properties
required:
- jobName
- jobSymbol
- groupSymbol
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo
========================================================================================
IS_REQUIRED: false
PROPERTY_NAME: jobInfo
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo
TYPE_NAME: JobInfo
additionalProperties:
  Boolean: false
  Properties: null
description: |
  Definition of the Job Info for a job.  These are extra data
  fields that go along with a job that will be displayed in
  the details panel within Treeherder.
properties:
  MemberNames:
    links: Links
    summary: Summary
  Properties:
    links:
      IS_REQUIRED: true
      PROPERTY_NAME: links
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items
        TYPE_NAME: Link
        additionalProperties:
          Boolean: false
          Properties: null
        description: |
          List of URLs shown as key/value pairs.  Shown as:
          "<label>: <linkText>" where linkText will be a link to the url.
        properties:
          MemberNames:
            label: Label
            linkText: LinkText
            url: URL
          Properties:
            label:
              IS_REQUIRED: true
              PROPERTY_NAME: label
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/label
              TYPE_NAME: ""
              maxLength: 70
              minLength: 1
              type: string
            linkText:
              IS_REQUIRED: true
              PROPERTY_NAME: linkText
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/linkText
              TYPE_NAME: ""
              maxLength: 125
              minLength: 1
              type: string
            url:
              IS_REQUIRED: true
              PROPERTY_NAME: url
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/url
              TYPE_NAME: ""
              format: uri
              maxLength: 512
              type: string
          SortedPropertyNames:
          - label
          - linkText
          - url
          SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties
        required:
        - url
        - linkText
        - label
        title: Link
        type: object
      type: array
      uniqueItems: false
    summary:
      IS_REQUIRED: true
      PROPERTY_NAME: summary
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/summary
      TYPE_NAME: ""
      description: |
        Plain text description of the job and its state.  Submitted with
        the final message about a task.
      type: string
  SortedPropertyNames:
  - links
  - summary
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties
required:
- summary
- links
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items
===============================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items
TYPE_NAME: Link
additionalProperties:
  Boolean: false
  Properties: null
description: |
  List of URLs shown as key/value pairs.  Shown as:
  "<label>: <linkText>" where linkText will be a link to the url.
properties:
  MemberNames:
    label: Label
    linkText: LinkText
    url: URL
  Properties:
    label:
      IS_REQUIRED: true
      PROPERTY_NAME: label
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/label
      TYPE_NAME: ""
      maxLength: 70
      minLength: 1
      type: string
    linkText:
      IS_REQUIRED: true
      PROPERTY_NAME: linkText
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/linkText
      TYPE_NAME: ""
      maxLength: 125
      minLength: 1
      type: string
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties/url
      TYPE_NAME: ""
      format: uri
      maxLength: 512
      type: string
  SortedPropertyNames:
  - label
  - linkText
  - url
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/jobInfo/properties/links/items/properties
required:
- url
- linkText
- label
title: Link
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items
===========================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items
TYPE_NAME: Log
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    errorsTruncated: ErrorsTruncated
    name: Name
    steps: Steps
    url: URL
  Properties:
    errorsTruncated:
      IS_REQUIRED: false
      PROPERTY_NAME: errorsTruncated
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/errorsTruncated
      TYPE_NAME: ""
      description: |
        If true, indicates that the number of errors in the log was too
        large and not all of those lines are indicated here.
      type: boolean
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/name
      TYPE_NAME: ""
      maxLength: 50
      minLength: 1
      type: string
    steps:
      IS_REQUIRED: false
      PROPERTY_NAME: steps
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps
      TYPE_NAME: ""
      description: |
        This object defines what is seen in the Treeherder Log Viewer.
        These values can be submitted here, or they will be generated
        by Treeherder's internal log parsing process from the
        submitted log.  If this value is submitted, Treeherder will
        consider the log already parsed and skip parsing.
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items
        TYPE_NAME: Step
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            errors: Errors
            lineFinished: LineFinished
            lineStarted: LineStarted
            name: Name
            result: Result
            timeFinished: TimeFinished
            timeStarted: TimeStarted
          Properties:
            errors:
              IS_REQUIRED: false
              PROPERTY_NAME: errors
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors
              TYPE_NAME: ""
              items:
                IS_REQUIRED: false
                PROPERTY_NAME: ""
                SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items
                TYPE_NAME: Error
                additionalProperties:
                  Boolean: false
                  Properties: null
                properties:
                  MemberNames:
                    line: Line
                    linenumber: Linenumber
                  Properties:
                    line:
                      IS_REQUIRED: true
                      PROPERTY_NAME: line
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/line
                      TYPE_NAME: ""
                      maxLength: 255
                      minLength: 1
                      type: string
                    linenumber:
                      IS_REQUIRED: true
                      PROPERTY_NAME: linenumber
                      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/linenumber
                      TYPE_NAME: ""
                      minimum: 0
                      type: integer
                  SortedPropertyNames:
                  - line
                  - linenumber
                  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties
                required:
                - line
                - linenumber
                title: Error
                type: object
              type: array
              uniqueItems: false
            lineFinished:
              IS_REQUIRED: true
              PROPERTY_NAME: lineFinished
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineFinished
              TYPE_NAME: ""
              minimum: 0
              type: integer
            lineStarted:
              IS_REQUIRED: true
              PROPERTY_NAME: lineStarted
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineStarted
              TYPE_NAME: ""
              minimum: 0
              type: integer
            name:
              IS_REQUIRED: true
              PROPERTY_NAME: name
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/name
              TYPE_NAME: ""
              maxLength: 255
              minLength: 1
              type: string
            result:
              IS_REQUIRED: true
              PROPERTY_NAME: result
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/result
              TYPE_NAME: ""
              enum:
              - success
              - fail
              - exception
              - canceled
              - unknown
              type: string
            timeFinished:
              IS_REQUIRED: true
              PROPERTY_NAME: timeFinished
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeFinished
              TYPE_NAME: ""
              format: date-time
              type: string
            timeStarted:
              IS_REQUIRED: true
              PROPERTY_NAME: timeStarted
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeStarted
              TYPE_NAME: ""
              format: date-time
              type: string
          SortedPropertyNames:
          - errors
          - lineFinished
          - lineStarted
          - name
          - result
          - timeFinished
          - timeStarted
          SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties
        required:
        - name
        - timeStarted
        - lineStarted
        - lineFinished
        - timeFinished
        - result
        title: Step
        type: object
      type: array
      uniqueItems: false
    url:
      IS_REQUIRED: true
      PROPERTY_NAME: url
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/url
      TYPE_NAME: ""
      format: uri
      maxLength: 255
      minLength: 1
      type: string
  SortedPropertyNames:
  - errorsTruncated
  - name
  - steps
  - url
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties
required:
- url
- name
title: Log
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items
==================================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items
TYPE_NAME: Step
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    errors: Errors
    lineFinished: LineFinished
    lineStarted: LineStarted
    name: Name
    result: Result
    timeFinished: TimeFinished
    timeStarted: TimeStarted
  Properties:
    errors:
      IS_REQUIRED: false
      PROPERTY_NAME: errors
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors
      TYPE_NAME: ""
      items:
        IS_REQUIRED: false
        PROPERTY_NAME: ""
        SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items
        TYPE_NAME: Error
        additionalProperties:
          Boolean: false
          Properties: null
        properties:
          MemberNames:
            line: Line
            linenumber: Linenumber
          Properties:
            line:
              IS_REQUIRED: true
              PROPERTY_NAME: line
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/line
              TYPE_NAME: ""
              maxLength: 255
              minLength: 1
              type: string
            linenumber:
              IS_REQUIRED: true
              PROPERTY_NAME: linenumber
              SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/linenumber
              TYPE_NAME: ""
              minimum: 0
              type: integer
          SortedPropertyNames:
          - line
          - linenumber
          SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties
        required:
        - line
        - linenumber
        title: Error
        type: object
      type: array
      uniqueItems: false
    lineFinished:
      IS_REQUIRED: true
      PROPERTY_NAME: lineFinished
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineFinished
      TYPE_NAME: ""
      minimum: 0
      type: integer
    lineStarted:
      IS_REQUIRED: true
      PROPERTY_NAME: lineStarted
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/lineStarted
      TYPE_NAME: ""
      minimum: 0
      type: integer
    name:
      IS_REQUIRED: true
      PROPERTY_NAME: name
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/name
      TYPE_NAME: ""
      maxLength: 255
      minLength: 1
      type: string
    result:
      IS_REQUIRED: true
      PROPERTY_NAME: result
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/result
      TYPE_NAME: ""
      enum:
      - success
      - fail
      - exception
      - canceled
      - unknown
      type: string
    timeFinished:
      IS_REQUIRED: true
      PROPERTY_NAME: timeFinished
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeFinished
      TYPE_NAME: ""
      format: date-time
      type: string
    timeStarted:
      IS_REQUIRED: true
      PROPERTY_NAME: timeStarted
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/timeStarted
      TYPE_NAME: ""
      format: date-time
      type: string
  SortedPropertyNames:
  - errors
  - lineFinished
  - lineStarted
  - name
  - result
  - timeFinished
  - timeStarted
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties
required:
- name
- timeStarted
- lineStarted
- lineFinished
- timeFinished
- result
title: Step
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items
==========================================================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items
TYPE_NAME: Error
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    line: Line
    linenumber: Linenumber
  Properties:
    line:
      IS_REQUIRED: true
      PROPERTY_NAME: line
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/line
      TYPE_NAME: ""
      maxLength: 255
      minLength: 1
      type: string
    linenumber:
      IS_REQUIRED: true
      PROPERTY_NAME: linenumber
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties/linenumber
      TYPE_NAME: ""
      minimum: 0
      type: integer
  SortedPropertyNames:
  - line
  - linenumber
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/logs/items/properties/steps/items/properties/errors/items/properties
required:
- line
- linenumber
title: Error
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]
================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]
TYPE_NAME: HGPush
additionalProperties:
  Boolean: false
  Properties: null
description: |
  PREFERRED: An HG job that only has a revision.  This is for all
  jobs going forward.
properties:
  MemberNames:
    kind: Kind
    project: Project
    pushLogID: PushLogID
    revision: Revision
  Properties:
    kind:
      IS_REQUIRED: true
      PROPERTY_NAME: kind
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/kind
      TYPE_NAME: ""
      enum:
      - hg.mozilla.org
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/project
      TYPE_NAME: ""
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    pushLogID:
      IS_REQUIRED: false
      PROPERTY_NAME: pushLogID
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/pushLogID
      TYPE_NAME: ""
      type: integer
    revision:
      IS_REQUIRED: true
      PROPERTY_NAME: revision
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties/revision
      TYPE_NAME: ""
      maxLength: 40
      minLength: 40
      pattern: ^[0-9a-f]+$
      type: string
  SortedPropertyNames:
  - kind
  - project
  - pushLogID
  - revision
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[0]/properties
required:
- kind
- project
- revision
title: HG Push
type: object


https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]
================================================================================================
IS_REQUIRED: false
PROPERTY_NAME: ""
SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]
TYPE_NAME: GithubPullRequest
additionalProperties:
  Boolean: false
  Properties: null
properties:
  MemberNames:
    kind: Kind
    owner: Owner
    project: Project
    pullRequestID: PullRequestID
    revision: Revision
  Properties:
    kind:
      IS_REQUIRED: true
      PROPERTY_NAME: kind
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/kind
      TYPE_NAME: ""
      enum:
      - github.com
      type: string
    owner:
      IS_REQUIRED: false
      PROPERTY_NAME: owner
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/owner
      TYPE_NAME: ""
      description: |
        This could be the organization or the individual git username
        depending on who owns the repo.
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    project:
      IS_REQUIRED: true
      PROPERTY_NAME: project
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/project
      TYPE_NAME: ""
      maxLength: 50
      minLength: 1
      pattern: ^[\w-]+$
      type: string
    pullRequestID:
      IS_REQUIRED: false
      PROPERTY_NAME: pullRequestID
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/pullRequestID
      TYPE_NAME: ""
      type: integer
    revision:
      IS_REQUIRED: true
      PROPERTY_NAME: revision
      SOURCE_URL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties/revision
      TYPE_NAME: ""
      maxLength: 40
      minLength: 40
      type: string
  SortedPropertyNames:
  - kind
  - owner
  - project
  - pullRequestID
  - revision
  SourceURL: https://taskcluster-staging.net/schemas/treeherder/v1/pulse-job.json#/properties/origin/oneOf[1]/properties
required:
- kind
- project
- revision
title: Github Pull Request
type: object


