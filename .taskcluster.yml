# The version is always required
version: 0
# Top level metadata is always required
metadata:
  name: "TaskCluster Generic Worker Tests"
  description: "These tests should ensure that any new commits against generic worker codebase are tested across all supported worker types in gekco."
  owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
  source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
tasks:
  - provisionerId: '{{ taskcluster.docker.provisionerId }}'
    workerType: '{{ taskcluster.docker.workerType }}'
    extra:
      github:
        events:
          - push
        branches:
          - master
    scopes:
      - auth:aws-s3:read-write:taskcluster-raw-docs/generic-worker/
    payload:
      maxRunTime: 3600
      image: taskcluster/upload-project-docs:latest
      features:
        taskclusterProxy:
          true
      command:
        - /bin/bash
        - '--login'
        - '-cx'
        - >-
          git clone {{event.head.repo.url}} repo &&
          cd repo &&
          git config advice.detachedHead false &&
          git checkout {{event.head.sha}} &&
          export DOCS_PROJECT=generic-worker DOCS_TIER=workers DOCS_FOLDER=docs DOCS_README=README.md &&
          upload-project-docs
    metadata:
      name: "generic-worker docs upload"
      description: "Upload documentation for this project"
      owner: '{{ event.head.user.email }}'
      source: '{{ event.head.repo.url }}'


  ##########################################################
  ##################### linux 64 build #####################
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    metadata:
      name: "Build/test 64 bit generic-worker on Debian GNU/Linux 8 (jessie)"
      description: "This builds the 64 bit linux version of generic-worker"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.*
          - push
    scopes:
      - secrets:get:repo:github.com/taskcluster/generic-worker
    payload:
      features:
        taskclusterProxy: true
      maxRunTime: 3600
      image: golang
      command:
        - /bin/bash
        - -vxec
        - |
          curl -s http://taskcluster/secrets/v1/secret/repo:github.com/taskcluster/generic-worker | sed -n 's/.*"b64_encoded_credentials_script": "\(.*\)".*/\1/p' | base64 -d > ~/env_private.sh
          source ~/env_private.sh
          go get -d "github.com/taskcluster/generic-worker"
          cd "${GOPATH}/src/github.com/taskcluster/generic-worker"
          git fetch '{{ event.head.repo.url }}' "+refs/*:refs/tasks/${TASK_ID}/*"
          git checkout '{{ event.head.sha }}'
          go get github.com/taskcluster/livelog github.com/gordonklaus/ineffassign
          cd gw-codegen
          go get -v
          cd ..
          go generate
          go get -v -t ./...
          test "$(git status --porcelain | wc -l)" == 0
          GORACE=history_size=7 go test -v -race ./...
          "${GOPATH}/bin/ineffassign" .
      artifacts:
        public/build/generic-worker-linux-amd64:
          path: "/go/bin/generic-worker"
          expires: "{{ '2 weeks' | $fromNow }}"
          type: file


  ##########################################################
  ######################## win2012r2 #######################
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: win2012r2-cu
    metadata:
      name: "Build/test 64 bit generic-worker on Windows Server 2012 R2"
      description: "This builds and tests the 64 bit Windows version of generic-worker on Windows Server 2012 R2"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.*
          - push
    payload:
      maxRunTime: 3600
      command:
        - 'mkdir "public\build"'
        - set GOPATH=%CD%\gopath
        - set GOROOT=%CD%\go
        - set PATH=%CD%\git\cmd;%GOPATH%\bin;%GOROOT%\bin;%PATH%
        - git config --global core.autocrlf false
        - 'go get -d "github.com/taskcluster/generic-worker"'
        - 'cd "gopath\src\github.com\taskcluster\generic-worker"'
        - 'git fetch "{{ event.head.repo.url }}" "+refs/*:refs/tasks/%TASK_ID%/*"'
        - git checkout {{ event.head.sha }}
        - go get github.com/taskcluster/livelog github.com/gordonklaus/ineffassign
        - cd gw-codegen
        - go get -v
        - cd ..
        - go generate
        - go get -v -t ./...
        - |
          :: this counts the number of lines returned by git status
          :: dump temp file a directory higher, otherwise git status reports the tmp1.txt file!
          git status --porcelain | C:\Windows\System32\find.exe /v /c "" > ..\tmp1.txt
          set /P lines=<..\tmp1.txt
          :: this checks that if more than 0 lines are returned, we fail
          if %lines% gtr 0 exit /b 64
          :: find.exe will have exited with exit code 1, so need to explicitly exit with 0
          exit /b 0
        - set GORACE=history_size=7
        - C:\generic-worker\generic-worker-test-creds.cmd
        - go test -v -race ./...
        - set GW_TESTS_GENERATE_USERS=true
        - go test -v -race
        - ineffassign .
      artifacts:
        - name: public/build/generic-worker-windows-amd64.exe
          expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: gopath\bin\generic-worker.exe
      mounts:
        - content:
            url: https://storage.googleapis.com/golang/go1.7.5.windows-amd64.zip
          directory: .
          format: zip
        - content:
            url: https://github.com/git-for-windows/git/releases/download/v2.11.0.windows.3/MinGit-2.11.0.3-64-bit.zip
          directory: git
          format: zip


  ##########################################################
  ########################## win7 ##########################
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: gecko-t-win7-32
    metadata:
      name: "Build/test 32 bit generic-worker on Windows 7"
      description: "This builds and tests the 32 bit Windows version of generic-worker on Windows 7"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.*
          - push
    payload:
      maxRunTime: 3600
      command:
        - 'mkdir "public\build"'
        - set GOPATH=%CD%\gopath
        - set GOROOT=%CD%\go
        - set PATH=%CD%\git\bin;%GOPATH%\bin;%GOROOT%\bin;%PATH%
        - git config --global core.autocrlf false
        - go get -d "github.com/taskcluster/generic-worker"
        - 'cd "gopath\src\github.com\taskcluster\generic-worker"'
        - 'git fetch "{{ event.head.repo.url }}" "+refs/*:refs/tasks/%TASK_ID%/*"'
        - git checkout {{ event.head.sha }}
        - go get github.com/taskcluster/livelog github.com/gordonklaus/ineffassign
        - cd gw-codegen
        - go get -v
        - cd ..
        - go generate
        - go get -v -t ./...
        - |
          :: this counts the number of lines returned by git status
          :: dump temp file a directory higher, otherwise git status reports the tmp1.txt file!
          git status --porcelain | C:\Windows\System32\find.exe /v /c "" > ..\tmp1.txt
          set /P lines=<..\tmp1.txt
          :: this checks that if more than 0 lines are returned, we fail
          if %lines% gtr 0 exit /b 64
          :: find.exe will have exited with exit code 1, so need to explicitly exit with 0
          exit /b 0
        - set GORACE=history_size=7
        - C:\generic-worker\generic-worker-test-creds.cmd
        - go test -v ./...
        - set GW_TESTS_GENERATE_USERS=true
        - go test -v
        - ineffassign .
      artifacts:
        - name: public/build/generic-worker-windows-386.exe
          expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: gopath\bin\generic-worker.exe
      mounts:
        - content:
            url: https://storage.googleapis.com/golang/go1.7.5.windows-386.zip
          directory: .
          format: zip
        - content:
            url: https://github.com/git-for-windows/git/releases/download/v2.11.0.windows.3/Git-2.11.0.3-32-bit.tar.bz2
          directory: git
          format: tar.bz2


  ##########################################################
  ########################## win10 #########################
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: gecko-t-win10-64-cu
    metadata:
      name: "Build/test 64 bit generic-worker on Windows 10"
      description: "This builds and tests the 32 bit Windows version of generic-worker on Windows 10"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.*
          - push
    payload:
      maxRunTime: 3600
      command:
        - 'mkdir "public\build"'
        - set GOPATH=%CD%\gopath
        - set GOROOT=%CD%\go
        - set PATH=%CD%\git\cmd;%GOPATH%\bin;%GOROOT%\bin;%PATH%
        - git config --global core.autocrlf false
        - go get -d "github.com/taskcluster/generic-worker"
        - 'cd "gopath\src\github.com\taskcluster\generic-worker"'
        - 'git fetch "{{ event.head.repo.url }}" "+refs/*:refs/tasks/%TASK_ID%/*"'
        - git checkout {{ event.head.sha }}
        - go get github.com/taskcluster/livelog github.com/gordonklaus/ineffassign
        - cd gw-codegen
        - go get -v
        - cd ..
        - go generate
        - go get -v -t ./...
        - |
          :: this counts the number of lines returned by git status
          :: dump temp file a directory higher, otherwise git status reports the tmp1.txt file!
          git status --porcelain | C:\Windows\System32\find.exe /v /c "" > ..\tmp1.txt
          set /P lines=<..\tmp1.txt
          :: this checks that if more than 0 lines are returned, we fail
          if %lines% gtr 0 exit /b 64
          :: find.exe will have exited with exit code 1, so need to explicitly exit with 0
          exit /b 0
        - set GORACE=history_size=7
        - C:\generic-worker\generic-worker-test-creds.cmd
        - go test -v -race ./...
        - set GW_TESTS_GENERATE_USERS=true
        - go test -v -race
        - ineffassign .
      artifacts:
        - name: public/build/generic-worker-windows-amd64.exe
          expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: gopath\bin\generic-worker.exe
      mounts:
        - content:
            url: https://storage.googleapis.com/golang/go1.7.5.windows-amd64.zip
          directory: .
          format: zip
        - content:
            url: https://github.com/git-for-windows/git/releases/download/v2.11.0.windows.3/MinGit-2.11.0.3-64-bit.zip
          directory: git
          format: zip

  ##########################################################
  #################### OS X 10.11 build ####################
  ##########################################################

  # - provisionerId: scl3-puppet
  #   workerType: os-x-10-10-gw
  - provisionerId: pmoore-manual
    workerType: mac-os-x
    metadata:
      name: "Build/test 64 bit generic-worker on Mac OS X 10.11"
      description: "This builds the 64 bit OS X version of generic-worker"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.*
          - push
    scopes:
      - generic-worker:cache:generic-worker-checkout
    payload:
      maxRunTime: 3600
      command:
        - - /bin/bash
          - -vxec
          - |
            export GOROOT="$(pwd)/go1.8/go"
            export GOPATH="$(pwd)/gopath"
            export PATH="${GOPATH}/bin:${GOROOT}/bin:${PATH}"
            source "${GW_CREDS_BOOTSTRAP}"
            mkdir -p "${GOPATH}/src/github.com/taskcluster"
            mkdir -p public/build
            cd "${GOPATH}/src/github.com/taskcluster"
            if [ ! -d generic-worker/.git ]; then rm -rf generic-worker; git clone '{{ event.head.repo.url }}' 'generic-worker'; fi
            cd 'generic-worker'
            git fetch '{{ event.head.repo.url }}' "+refs/*:refs/tasks/${TASK_ID}/*"
            git checkout -f '{{ event.head.sha }}'
            git clean -fdx
            go get -u github.com/taskcluster/livelog github.com/gordonklaus/ineffassign
            cd gw-codegen
            go get
            cd ..
            go generate
            go get -v -t ./...
            # output of wc command can contain spaces on darwin, so no quotes around expression
            test $(git status --porcelain | wc -l) == 0
            GORACE=history_size=7 go test -race -v ./...
            ineffassign .
      artifacts:
        - name: public/build/generic-worker-darwin-amd64
          expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: gopath/bin/generic-worker
      mounts:
        - cacheName: generic-worker-checkout
          directory: gopath/src
        - content:
            url: https://storage.googleapis.com/golang/go1.8.darwin-amd64.tar.gz
          directory: go1.8
          format: tar.gz

  ##########################################################
  #################### Linux ARM6 build ####################
  ##########################################################

  - provisionerId: pmoore-manual
    workerType: raspberry-pi-3b
    metadata:
      name: "Build/test ARM6 generic-worker on Linux (Raspberry PI)"
      description: "This builds the ARM6 Linux version of generic-worker"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.*
          - push
    scopes:
      - generic-worker:cache:generic-worker-checkout
    payload:
      maxRunTime: 3600
      command:
        - - /bin/bash
          - -vxec
          - |
            export GOROOT="$(pwd)/go1.8/go"
            export GOPATH="$(pwd)/gopath"
            export PATH="${GOPATH}/bin:${GOROOT}/bin:${PATH}"
            export CGO_ENABLED=0
            source "${GW_CREDS_BOOTSTRAP}"
            mkdir -p "${GOPATH}/src/github.com/taskcluster"
            mkdir -p public/build
            cd "${GOPATH}/src/github.com/taskcluster"
            if [ ! -d generic-worker/.git ]; then rm -rf generic-worker; git clone '{{ event.head.repo.url }}' 'generic-worker'; fi
            cd 'generic-worker'
            git fetch '{{ event.head.repo.url }}' "+refs/*:refs/tasks/${TASK_ID}/*"
            git checkout -f '{{ event.head.sha }}'
            git clean -fdx
            go get -u github.com/taskcluster/livelog github.com/gordonklaus/ineffassign
            cd gw-codegen
            go get
            cd ..
            go generate
            go get -v -t ./...
            test "$(git status --porcelain | wc -l)" == 0
            GORACE=history_size=7 go test -v ./...
            ineffassign .
      artifacts:
        - name: public/build/generic-worker-linux-armv6l
          expires: "{{ '2 weeks' | $fromNow }}"
          type: file
          path: gopath/bin/generic-worker
      mounts:
        - cacheName: generic-worker-checkout
          directory: gopath/src
        - content:
            url: https://storage.googleapis.com/golang/go1.8.linux-armv6l.tar.gz
          directory: go1.8
          format: tar.gz
